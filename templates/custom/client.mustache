{{>partial_header}}
package {{packageName}}

import (
    "github.com/adyen/adyen-go-api-library/{{libraryVersion}}/src/common"
)

// APIClient manages communication with the {{appName}} API v{{version}}
// In most cases there should be only one, shared, APIClient.
type APIClient struct {
	common common.Service // Reuse a single struct instead of allocating one for each service on the heap.

	// API Services
{{#apiInfo}}
{{#apis}}
{{#operations}}

	{{classname}} {{#generateInterfaces}}{{classname}}{{/generateInterfaces}}{{^generateInterfaces}}*{{classname}}{{/generateInterfaces}}
{{/operations}}
{{/apis}}
{{/apiInfo}}
}

// NewAPIClient creates a new API client. Requires a userAgent string describing your application.
// optionally a custom http.Client to allow for advanced features such as caching.
func NewAPIClient(client *common.Client) *APIClient {
	c := &APIClient{}
    c.common.Client = client
    c.common.BasePath = func() string {
        return client.Cfg.{{{serviceName}}}Endpoint
    }

{{#apiInfo}}
	// API Services
{{#apis}}
{{#operations}}
	c.{{classname}} = (*{{classname}})(&c.common)
{{/operations}}
{{/apis}}
{{/apiInfo}}

	return c
}