{{>partial_header}}
{{#lambda.lowercase}}
package {{packageName}}
{{/lambda.lowercase}}

{{#operations}}
import (
	_context "context"
    _nethttp "net/http"

	"github.com/adyen/adyen-go-api-library/v4/src/common"
)

// {{packageName}} {{packageName}} service
type {{packageName}} common.Service
{{#operation}}

/*
{{operationId}}{{#summary}} {{{.}}}{{/summary}}{{^summary}} Method for {{operationId}}{{/summary}}
{{#notes}}
{{notes}}
{{/notes}}
{{#allParams}}
{{#required}}
 * @param {{paramName}}{{#description}} {{{.}}}{{/description}}
{{/required}}
{{/allParams}}
{{#hasOptionalParams}}
{{#allParams}}
{{^required}}
 * @param request {{vendorExtensions.x-export-param-name}} - reference of {{dataType}}). {{#description}} {{{.}}}{{/description}}
{{/required}}
{{/allParams}}
{{/hasOptionalParams}}
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
{{#returnType}}
@return {{{returnType}}}
{{/returnType}}
*/
func (a {{{packageName}}}) {{{nickname}}}({{#allParams}}req *{{{dataType}}}{{/allParams}}, ctxs ..._context.Context) ({{#returnType}}{{{returnType}}}, {{/returnType}}*_nethttp.Response, error) {
    res := &{{{returnType}}}{}
    httpRes, err := a.Client.MakeHTTPPostRequest(req, res, a.BasePath() + "{{{path}}}", ctxs...)
    return *res, httpRes, err
}
{{/operation}}
{{/operations}}
