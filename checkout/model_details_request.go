/*
Adyen Checkout API

Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v70/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v70/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=70) to find out what changed in this version!

API version: 70
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package checkout

import (
	"encoding/json"
)

// checks if the DetailsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DetailsRequest{}

// DetailsRequest struct for DetailsRequest
type DetailsRequest struct {
	AuthenticationData *DetailsRequestAuthenticationData `json:"authenticationData,omitempty"`
	Details            PaymentCompletionDetails          `json:"details"`
	// The `paymentData` value from the `/payments` response. Required if the `/payments` response returns this value.
	PaymentData *string `json:"paymentData,omitempty"`
	// Change the `authenticationOnly` indicator originally set in the `/payments` request. Only needs to be set if you want to modify the value set previously.
	// Deprecated
	ThreeDSAuthenticationOnly *bool `json:"threeDSAuthenticationOnly,omitempty"`
}

// NewDetailsRequest instantiates a new DetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDetailsRequest(details PaymentCompletionDetails) *DetailsRequest {
	this := DetailsRequest{}
	this.Details = details
	return &this
}

// NewDetailsRequestWithDefaults instantiates a new DetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDetailsRequestWithDefaults() *DetailsRequest {
	this := DetailsRequest{}
	return &this
}

// GetAuthenticationData returns the AuthenticationData field value if set, zero value otherwise.
func (o *DetailsRequest) GetAuthenticationData() DetailsRequestAuthenticationData {
	if o == nil || IsNil(o.AuthenticationData) {
		var ret DetailsRequestAuthenticationData
		return ret
	}
	return *o.AuthenticationData
}

// GetAuthenticationDataOk returns a tuple with the AuthenticationData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsRequest) GetAuthenticationDataOk() (*DetailsRequestAuthenticationData, bool) {
	if o == nil || IsNil(o.AuthenticationData) {
		return nil, false
	}
	return o.AuthenticationData, true
}

// HasAuthenticationData returns a boolean if a field has been set.
func (o *DetailsRequest) HasAuthenticationData() bool {
	if o != nil && !IsNil(o.AuthenticationData) {
		return true
	}

	return false
}

// SetAuthenticationData gets a reference to the given DetailsRequestAuthenticationData and assigns it to the AuthenticationData field.
func (o *DetailsRequest) SetAuthenticationData(v DetailsRequestAuthenticationData) {
	o.AuthenticationData = &v
}

// GetDetails returns the Details field value
func (o *DetailsRequest) GetDetails() PaymentCompletionDetails {
	if o == nil {
		var ret PaymentCompletionDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *DetailsRequest) GetDetailsOk() (*PaymentCompletionDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *DetailsRequest) SetDetails(v PaymentCompletionDetails) {
	o.Details = v
}

// GetPaymentData returns the PaymentData field value if set, zero value otherwise.
func (o *DetailsRequest) GetPaymentData() string {
	if o == nil || IsNil(o.PaymentData) {
		var ret string
		return ret
	}
	return *o.PaymentData
}

// GetPaymentDataOk returns a tuple with the PaymentData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DetailsRequest) GetPaymentDataOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentData) {
		return nil, false
	}
	return o.PaymentData, true
}

// HasPaymentData returns a boolean if a field has been set.
func (o *DetailsRequest) HasPaymentData() bool {
	if o != nil && !IsNil(o.PaymentData) {
		return true
	}

	return false
}

// SetPaymentData gets a reference to the given string and assigns it to the PaymentData field.
func (o *DetailsRequest) SetPaymentData(v string) {
	o.PaymentData = &v
}

// GetThreeDSAuthenticationOnly returns the ThreeDSAuthenticationOnly field value if set, zero value otherwise.
// Deprecated
func (o *DetailsRequest) GetThreeDSAuthenticationOnly() bool {
	if o == nil || IsNil(o.ThreeDSAuthenticationOnly) {
		var ret bool
		return ret
	}
	return *o.ThreeDSAuthenticationOnly
}

// GetThreeDSAuthenticationOnlyOk returns a tuple with the ThreeDSAuthenticationOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *DetailsRequest) GetThreeDSAuthenticationOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ThreeDSAuthenticationOnly) {
		return nil, false
	}
	return o.ThreeDSAuthenticationOnly, true
}

// HasThreeDSAuthenticationOnly returns a boolean if a field has been set.
func (o *DetailsRequest) HasThreeDSAuthenticationOnly() bool {
	if o != nil && !IsNil(o.ThreeDSAuthenticationOnly) {
		return true
	}

	return false
}

// SetThreeDSAuthenticationOnly gets a reference to the given bool and assigns it to the ThreeDSAuthenticationOnly field.
// Deprecated
func (o *DetailsRequest) SetThreeDSAuthenticationOnly(v bool) {
	o.ThreeDSAuthenticationOnly = &v
}

func (o DetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DetailsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthenticationData) {
		toSerialize["authenticationData"] = o.AuthenticationData
	}
	toSerialize["details"] = o.Details
	if !IsNil(o.PaymentData) {
		toSerialize["paymentData"] = o.PaymentData
	}
	if !IsNil(o.ThreeDSAuthenticationOnly) {
		toSerialize["threeDSAuthenticationOnly"] = o.ThreeDSAuthenticationOnly
	}
	return toSerialize, nil
}

type NullableDetailsRequest struct {
	value *DetailsRequest
	isSet bool
}

func (v NullableDetailsRequest) Get() *DetailsRequest {
	return v.value
}

func (v *NullableDetailsRequest) Set(val *DetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDetailsRequest(val *DetailsRequest) *NullableDetailsRequest {
	return &NullableDetailsRequest{value: val, isSet: true}
}

func (v NullableDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
