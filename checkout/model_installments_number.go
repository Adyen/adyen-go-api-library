/*
Adyen Checkout API

Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v70/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v70/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=70) to find out what changed in this version!

API version: 70
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package checkout

import (
	"encoding/json"
)

// checks if the InstallmentsNumber type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstallmentsNumber{}

// InstallmentsNumber struct for InstallmentsNumber
type InstallmentsNumber struct {
	// Maximum number of installments
	MaxNumberOfInstallments int32 `json:"maxNumberOfInstallments"`
}

// NewInstallmentsNumber instantiates a new InstallmentsNumber object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallmentsNumber(maxNumberOfInstallments int32) *InstallmentsNumber {
	this := InstallmentsNumber{}
	this.MaxNumberOfInstallments = maxNumberOfInstallments
	return &this
}

// NewInstallmentsNumberWithDefaults instantiates a new InstallmentsNumber object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallmentsNumberWithDefaults() *InstallmentsNumber {
	this := InstallmentsNumber{}
	return &this
}

// GetMaxNumberOfInstallments returns the MaxNumberOfInstallments field value
func (o *InstallmentsNumber) GetMaxNumberOfInstallments() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxNumberOfInstallments
}

// GetMaxNumberOfInstallmentsOk returns a tuple with the MaxNumberOfInstallments field value
// and a boolean to check if the value has been set.
func (o *InstallmentsNumber) GetMaxNumberOfInstallmentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxNumberOfInstallments, true
}

// SetMaxNumberOfInstallments sets field value
func (o *InstallmentsNumber) SetMaxNumberOfInstallments(v int32) {
	o.MaxNumberOfInstallments = v
}

func (o InstallmentsNumber) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstallmentsNumber) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["maxNumberOfInstallments"] = o.MaxNumberOfInstallments
	return toSerialize, nil
}

type NullableInstallmentsNumber struct {
	value *InstallmentsNumber
	isSet bool
}

func (v NullableInstallmentsNumber) Get() *InstallmentsNumber {
	return v.value
}

func (v *NullableInstallmentsNumber) Set(val *InstallmentsNumber) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallmentsNumber) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallmentsNumber) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallmentsNumber(val *InstallmentsNumber) *NullableInstallmentsNumber {
	return &NullableInstallmentsNumber{value: val, isSet: true}
}

func (v NullableInstallmentsNumber) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallmentsNumber) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
