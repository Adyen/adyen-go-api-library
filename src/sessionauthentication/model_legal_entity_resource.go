/*
Session authentication API

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sessionauthentication

import (
	"encoding/json"
    "github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the LegalEntityResource type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &LegalEntityResource{}

// LegalEntityResource struct for LegalEntityResource
type LegalEntityResource struct {
	// The unique identifier of the resource connected to the component. For [Onboarding components](https://docs.adyen.com/platforms/onboard-users/components), this is the legal entity that has a contractual relationship with your platform and owns the [transfer instrument](https://docs.adyen.com/api-explorer/legalentity/latest/post/transferInstruments). For sole proprietorships, this is the legal entity of the individual owner.
	LegalEntityId string `json:"legalEntityId"`
}

// NewLegalEntityResource instantiates a new LegalEntityResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegalEntityResource(legalEntityId string) *LegalEntityResource {
	this := LegalEntityResource{}
	this.LegalEntityId = legalEntityId
	return &this
}

// NewLegalEntityResourceWithDefaults instantiates a new LegalEntityResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegalEntityResourceWithDefaults() *LegalEntityResource {
	this := LegalEntityResource{}
	return &this
}

// GetLegalEntityId returns the LegalEntityId field value
func (o *LegalEntityResource) GetLegalEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LegalEntityId
}

// GetLegalEntityIdOk returns a tuple with the LegalEntityId field value
// and a boolean to check if the value has been set.
func (o *LegalEntityResource) GetLegalEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LegalEntityId, true
}

// SetLegalEntityId sets field value
func (o *LegalEntityResource) SetLegalEntityId(v string) {
	o.LegalEntityId = v
}

func (o LegalEntityResource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LegalEntityResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["legalEntityId"] = o.LegalEntityId
	return toSerialize, nil
}

type NullableLegalEntityResource struct {
	value *LegalEntityResource
	isSet bool
}

func (v NullableLegalEntityResource) Get() *LegalEntityResource {
	return v.value
}

func (v *NullableLegalEntityResource) Set(val *LegalEntityResource) {
	v.value = val
	v.isSet = true
}

func (v NullableLegalEntityResource) IsSet() bool {
	return v.isSet
}

func (v *NullableLegalEntityResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegalEntityResource(val *LegalEntityResource) *NullableLegalEntityResource {
	return &NullableLegalEntityResource{value: val, isSet: true}
}

func (v NullableLegalEntityResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegalEntityResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



