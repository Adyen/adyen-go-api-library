/*
Session authentication API

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sessionauthentication

import (
	"encoding/json"
    "github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the AuthenticationSessionResponse type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &AuthenticationSessionResponse{}

// AuthenticationSessionResponse struct for AuthenticationSessionResponse
type AuthenticationSessionResponse struct {
	// The unique identifier of the session.
	Id *string `json:"id,omitempty"`
	// The session token created.
	Token *string `json:"token,omitempty"`
}

// NewAuthenticationSessionResponse instantiates a new AuthenticationSessionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationSessionResponse() *AuthenticationSessionResponse {
	this := AuthenticationSessionResponse{}
	return &this
}

// NewAuthenticationSessionResponseWithDefaults instantiates a new AuthenticationSessionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationSessionResponseWithDefaults() *AuthenticationSessionResponse {
	this := AuthenticationSessionResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthenticationSessionResponse) GetId() string {
	if o == nil || common.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSessionResponse) GetIdOk() (*string, bool) {
	if o == nil || common.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthenticationSessionResponse) HasId() bool {
	if o != nil && !common.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthenticationSessionResponse) SetId(v string) {
	o.Id = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AuthenticationSessionResponse) GetToken() string {
	if o == nil || common.IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationSessionResponse) GetTokenOk() (*string, bool) {
	if o == nil || common.IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AuthenticationSessionResponse) HasToken() bool {
	if o != nil && !common.IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AuthenticationSessionResponse) SetToken(v string) {
	o.Token = &v
}

func (o AuthenticationSessionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationSessionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !common.IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableAuthenticationSessionResponse struct {
	value *AuthenticationSessionResponse
	isSet bool
}

func (v NullableAuthenticationSessionResponse) Get() *AuthenticationSessionResponse {
	return v.value
}

func (v *NullableAuthenticationSessionResponse) Set(val *AuthenticationSessionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationSessionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationSessionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationSessionResponse(val *AuthenticationSessionResponse) *NullableAuthenticationSessionResponse {
	return &NullableAuthenticationSessionResponse{value: val, isSet: true}
}

func (v NullableAuthenticationSessionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationSessionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



