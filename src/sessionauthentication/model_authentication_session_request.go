/*
Session authentication API

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sessionauthentication

import (
	"encoding/json"
    "github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the AuthenticationSessionRequest type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &AuthenticationSessionRequest{}

// AuthenticationSessionRequest struct for AuthenticationSessionRequest
type AuthenticationSessionRequest struct {
	// The URL where the component will appear. In your live environment, you must protect the URL with an SSL certificate and ensure that it starts with `https://`.
	AllowOrigin string `json:"allowOrigin"`
	Policy Policy `json:"policy"`
	Product ProductType `json:"product"`
}

// NewAuthenticationSessionRequest instantiates a new AuthenticationSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationSessionRequest(allowOrigin string, policy Policy, product ProductType) *AuthenticationSessionRequest {
	this := AuthenticationSessionRequest{}
	this.AllowOrigin = allowOrigin
	this.Policy = policy
	this.Product = product
	return &this
}

// NewAuthenticationSessionRequestWithDefaults instantiates a new AuthenticationSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationSessionRequestWithDefaults() *AuthenticationSessionRequest {
	this := AuthenticationSessionRequest{}
	return &this
}

// GetAllowOrigin returns the AllowOrigin field value
func (o *AuthenticationSessionRequest) GetAllowOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AllowOrigin
}

// GetAllowOriginOk returns a tuple with the AllowOrigin field value
// and a boolean to check if the value has been set.
func (o *AuthenticationSessionRequest) GetAllowOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowOrigin, true
}

// SetAllowOrigin sets field value
func (o *AuthenticationSessionRequest) SetAllowOrigin(v string) {
	o.AllowOrigin = v
}

// GetPolicy returns the Policy field value
func (o *AuthenticationSessionRequest) GetPolicy() Policy {
	if o == nil {
		var ret Policy
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *AuthenticationSessionRequest) GetPolicyOk() (*Policy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *AuthenticationSessionRequest) SetPolicy(v Policy) {
	o.Policy = v
}

// GetProduct returns the Product field value
func (o *AuthenticationSessionRequest) GetProduct() ProductType {
	if o == nil {
		var ret ProductType
		return ret
	}

	return o.Product
}

// GetProductOk returns a tuple with the Product field value
// and a boolean to check if the value has been set.
func (o *AuthenticationSessionRequest) GetProductOk() (*ProductType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Product, true
}

// SetProduct sets field value
func (o *AuthenticationSessionRequest) SetProduct(v ProductType) {
	o.Product = v
}

func (o AuthenticationSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationSessionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowOrigin"] = o.AllowOrigin
	toSerialize["policy"] = o.Policy
	toSerialize["product"] = o.Product
	return toSerialize, nil
}

type NullableAuthenticationSessionRequest struct {
	value *AuthenticationSessionRequest
	isSet bool
}

func (v NullableAuthenticationSessionRequest) Get() *AuthenticationSessionRequest {
	return v.value
}

func (v *NullableAuthenticationSessionRequest) Set(val *AuthenticationSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationSessionRequest(val *AuthenticationSessionRequest) *NullableAuthenticationSessionRequest {
	return &NullableAuthenticationSessionRequest{value: val, isSet: true}
}

func (v NullableAuthenticationSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



