/*
Session authentication API

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sessionauthentication

import (
	"context"
	"net/http"
	"net/url"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// SessionAuthenticationApi service
type SessionAuthenticationApi common.Service

// All parameters accepted by SessionAuthenticationApi.CreateAuthenticationSession
type SessionAuthenticationApiCreateAuthenticationSessionInput struct {
	authenticationSessionRequest *AuthenticationSessionRequest
}

func (r SessionAuthenticationApiCreateAuthenticationSessionInput) AuthenticationSessionRequest(authenticationSessionRequest AuthenticationSessionRequest) SessionAuthenticationApiCreateAuthenticationSessionInput {
	r.authenticationSessionRequest = &authenticationSessionRequest
	return r
}

/*
Prepare a request for CreateAuthenticationSession

@return SessionAuthenticationApiCreateAuthenticationSessionInput
*/
func (a *SessionAuthenticationApi) CreateAuthenticationSessionInput() SessionAuthenticationApiCreateAuthenticationSessionInput {
	return SessionAuthenticationApiCreateAuthenticationSessionInput{}
}

/*
CreateAuthenticationSession Create a session token

Creates a session token that is required to integrate [components](https://docs.adyen.com/platforms/components-overview).

The response contains encrypted session data. The front end then uses the session data to make the required server-side calls for the component.

To create a token, you must meet specific requirements. These requirements vary depending on the type of component. For more information, see the documentation for [Onboarding](https://docs.adyen.com/platforms/onboard-users/components) and [Platform Experience](https://docs.adyen.com/platforms/build-user-dashboards) components.

@param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@param r SessionAuthenticationApiCreateAuthenticationSessionInput - Request parameters, see CreateAuthenticationSessionInput
@return AuthenticationSessionResponse, *http.Response, error
*/
func (a *SessionAuthenticationApi) CreateAuthenticationSession(ctx context.Context, r SessionAuthenticationApiCreateAuthenticationSessionInput) (AuthenticationSessionResponse, *http.Response, error) {
	res := &AuthenticationSessionResponse{}
	path := "/sessions"
	queryParams := url.Values{}
	headerParams := make(map[string]string)
	httpRes, err := common.SendAPIRequest(
		ctx,
		a.Client,
		r.authenticationSessionRequest,
		res,
		http.MethodPost,
		a.BasePath()+path,
		queryParams,
		headerParams,
	)

	return *res, httpRes, err
}
