/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
	"time"
)

// BeneficiarySetupNotificationContent struct for BeneficiarySetupNotificationContent
type BeneficiarySetupNotificationContent struct {
	// The code of the beneficiary account.
	DestinationAccountCode string `json:"destinationAccountCode"`
	// The code of the beneficiary Account Holder.
	DestinationAccountHolderCode string `json:"destinationAccountHolderCode"`
	// A listing of the invalid fields which have caused the Setup Beneficiary request to fail. If this is empty, the Setup Beneficiary request has succeeded.
	InvalidFields *[]ErrorFieldType `json:"invalidFields,omitempty"`
	// The reference provided by the merchant.
	MerchantReference *string `json:"merchantReference,omitempty"`
	// The code of the benefactor account.
	SourceAccountCode string `json:"sourceAccountCode"`
	// The code of the benefactor Account Holder.
	SourceAccountHolderCode string `json:"sourceAccountHolderCode"`
	// The date on which the beneficiary was set up and funds transferred from benefactor to beneficiary.
	TransferDate time.Time `json:"transferDate"`
}

// NewBeneficiarySetupNotificationContent instantiates a new BeneficiarySetupNotificationContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeneficiarySetupNotificationContent(destinationAccountCode string, destinationAccountHolderCode string, sourceAccountCode string, sourceAccountHolderCode string, transferDate time.Time) *BeneficiarySetupNotificationContent {
	this := BeneficiarySetupNotificationContent{}
	this.DestinationAccountCode = destinationAccountCode
	this.DestinationAccountHolderCode = destinationAccountHolderCode
	this.SourceAccountCode = sourceAccountCode
	this.SourceAccountHolderCode = sourceAccountHolderCode
	this.TransferDate = transferDate
	return &this
}

// NewBeneficiarySetupNotificationContentWithDefaults instantiates a new BeneficiarySetupNotificationContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeneficiarySetupNotificationContentWithDefaults() *BeneficiarySetupNotificationContent {
	this := BeneficiarySetupNotificationContent{}
	return &this
}

// GetDestinationAccountCode returns the DestinationAccountCode field value
func (o *BeneficiarySetupNotificationContent) GetDestinationAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationAccountCode
}

// GetDestinationAccountCodeOk returns a tuple with the DestinationAccountCode field value
// and a boolean to check if the value has been set.
func (o *BeneficiarySetupNotificationContent) GetDestinationAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAccountCode, true
}

// SetDestinationAccountCode sets field value
func (o *BeneficiarySetupNotificationContent) SetDestinationAccountCode(v string) {
	o.DestinationAccountCode = v
}

// GetDestinationAccountHolderCode returns the DestinationAccountHolderCode field value
func (o *BeneficiarySetupNotificationContent) GetDestinationAccountHolderCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationAccountHolderCode
}

// GetDestinationAccountHolderCodeOk returns a tuple with the DestinationAccountHolderCode field value
// and a boolean to check if the value has been set.
func (o *BeneficiarySetupNotificationContent) GetDestinationAccountHolderCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAccountHolderCode, true
}

// SetDestinationAccountHolderCode sets field value
func (o *BeneficiarySetupNotificationContent) SetDestinationAccountHolderCode(v string) {
	o.DestinationAccountHolderCode = v
}

// GetInvalidFields returns the InvalidFields field value if set, zero value otherwise.
func (o *BeneficiarySetupNotificationContent) GetInvalidFields() []ErrorFieldType {
	if o == nil || o.InvalidFields == nil {
		var ret []ErrorFieldType
		return ret
	}
	return *o.InvalidFields
}

// GetInvalidFieldsOk returns a tuple with the InvalidFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeneficiarySetupNotificationContent) GetInvalidFieldsOk() (*[]ErrorFieldType, bool) {
	if o == nil || o.InvalidFields == nil {
		return nil, false
	}
	return o.InvalidFields, true
}

// HasInvalidFields returns a boolean if a field has been set.
func (o *BeneficiarySetupNotificationContent) HasInvalidFields() bool {
	if o != nil && o.InvalidFields != nil {
		return true
	}

	return false
}

// SetInvalidFields gets a reference to the given []ErrorFieldType and assigns it to the InvalidFields field.
func (o *BeneficiarySetupNotificationContent) SetInvalidFields(v []ErrorFieldType) {
	o.InvalidFields = &v
}

// GetMerchantReference returns the MerchantReference field value if set, zero value otherwise.
func (o *BeneficiarySetupNotificationContent) GetMerchantReference() string {
	if o == nil || o.MerchantReference == nil {
		var ret string
		return ret
	}
	return *o.MerchantReference
}

// GetMerchantReferenceOk returns a tuple with the MerchantReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeneficiarySetupNotificationContent) GetMerchantReferenceOk() (*string, bool) {
	if o == nil || o.MerchantReference == nil {
		return nil, false
	}
	return o.MerchantReference, true
}

// HasMerchantReference returns a boolean if a field has been set.
func (o *BeneficiarySetupNotificationContent) HasMerchantReference() bool {
	if o != nil && o.MerchantReference != nil {
		return true
	}

	return false
}

// SetMerchantReference gets a reference to the given string and assigns it to the MerchantReference field.
func (o *BeneficiarySetupNotificationContent) SetMerchantReference(v string) {
	o.MerchantReference = &v
}

// GetSourceAccountCode returns the SourceAccountCode field value
func (o *BeneficiarySetupNotificationContent) GetSourceAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceAccountCode
}

// GetSourceAccountCodeOk returns a tuple with the SourceAccountCode field value
// and a boolean to check if the value has been set.
func (o *BeneficiarySetupNotificationContent) GetSourceAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccountCode, true
}

// SetSourceAccountCode sets field value
func (o *BeneficiarySetupNotificationContent) SetSourceAccountCode(v string) {
	o.SourceAccountCode = v
}

// GetSourceAccountHolderCode returns the SourceAccountHolderCode field value
func (o *BeneficiarySetupNotificationContent) GetSourceAccountHolderCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceAccountHolderCode
}

// GetSourceAccountHolderCodeOk returns a tuple with the SourceAccountHolderCode field value
// and a boolean to check if the value has been set.
func (o *BeneficiarySetupNotificationContent) GetSourceAccountHolderCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccountHolderCode, true
}

// SetSourceAccountHolderCode sets field value
func (o *BeneficiarySetupNotificationContent) SetSourceAccountHolderCode(v string) {
	o.SourceAccountHolderCode = v
}

// GetTransferDate returns the TransferDate field value
func (o *BeneficiarySetupNotificationContent) GetTransferDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TransferDate
}

// GetTransferDateOk returns a tuple with the TransferDate field value
// and a boolean to check if the value has been set.
func (o *BeneficiarySetupNotificationContent) GetTransferDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransferDate, true
}

// SetTransferDate sets field value
func (o *BeneficiarySetupNotificationContent) SetTransferDate(v time.Time) {
	o.TransferDate = v
}

func (o BeneficiarySetupNotificationContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["destinationAccountCode"] = o.DestinationAccountCode
	}
	if true {
		toSerialize["destinationAccountHolderCode"] = o.DestinationAccountHolderCode
	}
	if o.InvalidFields != nil {
		toSerialize["invalidFields"] = o.InvalidFields
	}
	if o.MerchantReference != nil {
		toSerialize["merchantReference"] = o.MerchantReference
	}
	if true {
		toSerialize["sourceAccountCode"] = o.SourceAccountCode
	}
	if true {
		toSerialize["sourceAccountHolderCode"] = o.SourceAccountHolderCode
	}
	if true {
		toSerialize["transferDate"] = o.TransferDate
	}
	return json.Marshal(toSerialize)
}

type NullableBeneficiarySetupNotificationContent struct {
	value *BeneficiarySetupNotificationContent
	isSet bool
}

func (v NullableBeneficiarySetupNotificationContent) Get() *BeneficiarySetupNotificationContent {
	return v.value
}

func (v *NullableBeneficiarySetupNotificationContent) Set(val *BeneficiarySetupNotificationContent) {
	v.value = val
	v.isSet = true
}

func (v NullableBeneficiarySetupNotificationContent) IsSet() bool {
	return v.isSet
}

func (v *NullableBeneficiarySetupNotificationContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeneficiarySetupNotificationContent(val *BeneficiarySetupNotificationContent) *NullableBeneficiarySetupNotificationContent {
	return &NullableBeneficiarySetupNotificationContent{value: val, isSet: true}
}

func (v NullableBeneficiarySetupNotificationContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeneficiarySetupNotificationContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
