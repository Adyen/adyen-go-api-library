/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
)

// DirectDebitInitiatedNotificationContent struct for DirectDebitInitiatedNotificationContent
type DirectDebitInitiatedNotificationContent struct {
	// The code of the account.
	AccountCode         string     `json:"accountCode"`
	Amount              Amount     `json:"amount"`
	DebitInitiationDate *LocalDate `json:"debitInitiationDate,omitempty"`
	// The code of the merchant account.
	MerchantAccountCode string           `json:"merchantAccountCode"`
	Status              *OperationStatus `json:"status,omitempty"`
}

// NewDirectDebitInitiatedNotificationContent instantiates a new DirectDebitInitiatedNotificationContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectDebitInitiatedNotificationContent(accountCode string, amount Amount, merchantAccountCode string) *DirectDebitInitiatedNotificationContent {
	this := DirectDebitInitiatedNotificationContent{}
	this.AccountCode = accountCode
	this.Amount = amount
	this.MerchantAccountCode = merchantAccountCode
	return &this
}

// NewDirectDebitInitiatedNotificationContentWithDefaults instantiates a new DirectDebitInitiatedNotificationContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectDebitInitiatedNotificationContentWithDefaults() *DirectDebitInitiatedNotificationContent {
	this := DirectDebitInitiatedNotificationContent{}
	return &this
}

// GetAccountCode returns the AccountCode field value
func (o *DirectDebitInitiatedNotificationContent) GetAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountCode
}

// GetAccountCodeOk returns a tuple with the AccountCode field value
// and a boolean to check if the value has been set.
func (o *DirectDebitInitiatedNotificationContent) GetAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountCode, true
}

// SetAccountCode sets field value
func (o *DirectDebitInitiatedNotificationContent) SetAccountCode(v string) {
	o.AccountCode = v
}

// GetAmount returns the Amount field value
func (o *DirectDebitInitiatedNotificationContent) GetAmount() Amount {
	if o == nil {
		var ret Amount
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *DirectDebitInitiatedNotificationContent) GetAmountOk() (*Amount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *DirectDebitInitiatedNotificationContent) SetAmount(v Amount) {
	o.Amount = v
}

// GetDebitInitiationDate returns the DebitInitiationDate field value if set, zero value otherwise.
func (o *DirectDebitInitiatedNotificationContent) GetDebitInitiationDate() LocalDate {
	if o == nil || o.DebitInitiationDate == nil {
		var ret LocalDate
		return ret
	}
	return *o.DebitInitiationDate
}

// GetDebitInitiationDateOk returns a tuple with the DebitInitiationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDebitInitiatedNotificationContent) GetDebitInitiationDateOk() (*LocalDate, bool) {
	if o == nil || o.DebitInitiationDate == nil {
		return nil, false
	}
	return o.DebitInitiationDate, true
}

// HasDebitInitiationDate returns a boolean if a field has been set.
func (o *DirectDebitInitiatedNotificationContent) HasDebitInitiationDate() bool {
	if o != nil && o.DebitInitiationDate != nil {
		return true
	}

	return false
}

// SetDebitInitiationDate gets a reference to the given LocalDate and assigns it to the DebitInitiationDate field.
func (o *DirectDebitInitiatedNotificationContent) SetDebitInitiationDate(v LocalDate) {
	o.DebitInitiationDate = &v
}

// GetMerchantAccountCode returns the MerchantAccountCode field value
func (o *DirectDebitInitiatedNotificationContent) GetMerchantAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantAccountCode
}

// GetMerchantAccountCodeOk returns a tuple with the MerchantAccountCode field value
// and a boolean to check if the value has been set.
func (o *DirectDebitInitiatedNotificationContent) GetMerchantAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantAccountCode, true
}

// SetMerchantAccountCode sets field value
func (o *DirectDebitInitiatedNotificationContent) SetMerchantAccountCode(v string) {
	o.MerchantAccountCode = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DirectDebitInitiatedNotificationContent) GetStatus() OperationStatus {
	if o == nil || o.Status == nil {
		var ret OperationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectDebitInitiatedNotificationContent) GetStatusOk() (*OperationStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DirectDebitInitiatedNotificationContent) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OperationStatus and assigns it to the Status field.
func (o *DirectDebitInitiatedNotificationContent) SetStatus(v OperationStatus) {
	o.Status = &v
}

func (o DirectDebitInitiatedNotificationContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountCode"] = o.AccountCode
	}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if o.DebitInitiationDate != nil {
		toSerialize["debitInitiationDate"] = o.DebitInitiationDate
	}
	if true {
		toSerialize["merchantAccountCode"] = o.MerchantAccountCode
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableDirectDebitInitiatedNotificationContent struct {
	value *DirectDebitInitiatedNotificationContent
	isSet bool
}

func (v NullableDirectDebitInitiatedNotificationContent) Get() *DirectDebitInitiatedNotificationContent {
	return v.value
}

func (v *NullableDirectDebitInitiatedNotificationContent) Set(val *DirectDebitInitiatedNotificationContent) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectDebitInitiatedNotificationContent) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectDebitInitiatedNotificationContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectDebitInitiatedNotificationContent(val *DirectDebitInitiatedNotificationContent) *NullableDirectDebitInitiatedNotificationContent {
	return &NullableDirectDebitInitiatedNotificationContent{value: val, isSet: true}
}

func (v NullableDirectDebitInitiatedNotificationContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectDebitInitiatedNotificationContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
