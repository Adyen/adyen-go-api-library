/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
)

// AccountHolderVerificationNotificationContent struct for AccountHolderVerificationNotificationContent
type AccountHolderVerificationNotificationContent struct {
	// The code of the account holder.
	AccountHolderCode  string              `json:"accountHolderCode"`
	KycCheckStatusData *KYCCheckStatusData `json:"kycCheckStatusData,omitempty"`
	// The unique code of the payout method that has been verified.
	PayoutMethodCode *string `json:"payoutMethodCode,omitempty"`
	// The code of the shareholder that has been verified.
	ShareholderCode *string `json:"shareholderCode,omitempty"`
}

// NewAccountHolderVerificationNotificationContent instantiates a new AccountHolderVerificationNotificationContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountHolderVerificationNotificationContent(accountHolderCode string) *AccountHolderVerificationNotificationContent {
	this := AccountHolderVerificationNotificationContent{}
	this.AccountHolderCode = accountHolderCode
	return &this
}

// NewAccountHolderVerificationNotificationContentWithDefaults instantiates a new AccountHolderVerificationNotificationContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountHolderVerificationNotificationContentWithDefaults() *AccountHolderVerificationNotificationContent {
	this := AccountHolderVerificationNotificationContent{}
	return &this
}

// GetAccountHolderCode returns the AccountHolderCode field value
func (o *AccountHolderVerificationNotificationContent) GetAccountHolderCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountHolderCode
}

// GetAccountHolderCodeOk returns a tuple with the AccountHolderCode field value
// and a boolean to check if the value has been set.
func (o *AccountHolderVerificationNotificationContent) GetAccountHolderCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountHolderCode, true
}

// SetAccountHolderCode sets field value
func (o *AccountHolderVerificationNotificationContent) SetAccountHolderCode(v string) {
	o.AccountHolderCode = v
}

// GetKycCheckStatusData returns the KycCheckStatusData field value if set, zero value otherwise.
func (o *AccountHolderVerificationNotificationContent) GetKycCheckStatusData() KYCCheckStatusData {
	if o == nil || o.KycCheckStatusData == nil {
		var ret KYCCheckStatusData
		return ret
	}
	return *o.KycCheckStatusData
}

// GetKycCheckStatusDataOk returns a tuple with the KycCheckStatusData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderVerificationNotificationContent) GetKycCheckStatusDataOk() (*KYCCheckStatusData, bool) {
	if o == nil || o.KycCheckStatusData == nil {
		return nil, false
	}
	return o.KycCheckStatusData, true
}

// HasKycCheckStatusData returns a boolean if a field has been set.
func (o *AccountHolderVerificationNotificationContent) HasKycCheckStatusData() bool {
	if o != nil && o.KycCheckStatusData != nil {
		return true
	}

	return false
}

// SetKycCheckStatusData gets a reference to the given KYCCheckStatusData and assigns it to the KycCheckStatusData field.
func (o *AccountHolderVerificationNotificationContent) SetKycCheckStatusData(v KYCCheckStatusData) {
	o.KycCheckStatusData = &v
}

// GetPayoutMethodCode returns the PayoutMethodCode field value if set, zero value otherwise.
func (o *AccountHolderVerificationNotificationContent) GetPayoutMethodCode() string {
	if o == nil || o.PayoutMethodCode == nil {
		var ret string
		return ret
	}
	return *o.PayoutMethodCode
}

// GetPayoutMethodCodeOk returns a tuple with the PayoutMethodCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderVerificationNotificationContent) GetPayoutMethodCodeOk() (*string, bool) {
	if o == nil || o.PayoutMethodCode == nil {
		return nil, false
	}
	return o.PayoutMethodCode, true
}

// HasPayoutMethodCode returns a boolean if a field has been set.
func (o *AccountHolderVerificationNotificationContent) HasPayoutMethodCode() bool {
	if o != nil && o.PayoutMethodCode != nil {
		return true
	}

	return false
}

// SetPayoutMethodCode gets a reference to the given string and assigns it to the PayoutMethodCode field.
func (o *AccountHolderVerificationNotificationContent) SetPayoutMethodCode(v string) {
	o.PayoutMethodCode = &v
}

// GetShareholderCode returns the ShareholderCode field value if set, zero value otherwise.
func (o *AccountHolderVerificationNotificationContent) GetShareholderCode() string {
	if o == nil || o.ShareholderCode == nil {
		var ret string
		return ret
	}
	return *o.ShareholderCode
}

// GetShareholderCodeOk returns a tuple with the ShareholderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderVerificationNotificationContent) GetShareholderCodeOk() (*string, bool) {
	if o == nil || o.ShareholderCode == nil {
		return nil, false
	}
	return o.ShareholderCode, true
}

// HasShareholderCode returns a boolean if a field has been set.
func (o *AccountHolderVerificationNotificationContent) HasShareholderCode() bool {
	if o != nil && o.ShareholderCode != nil {
		return true
	}

	return false
}

// SetShareholderCode gets a reference to the given string and assigns it to the ShareholderCode field.
func (o *AccountHolderVerificationNotificationContent) SetShareholderCode(v string) {
	o.ShareholderCode = &v
}

func (o AccountHolderVerificationNotificationContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountHolderCode"] = o.AccountHolderCode
	}
	if o.KycCheckStatusData != nil {
		toSerialize["kycCheckStatusData"] = o.KycCheckStatusData
	}
	if o.PayoutMethodCode != nil {
		toSerialize["payoutMethodCode"] = o.PayoutMethodCode
	}
	if o.ShareholderCode != nil {
		toSerialize["shareholderCode"] = o.ShareholderCode
	}
	return json.Marshal(toSerialize)
}

type NullableAccountHolderVerificationNotificationContent struct {
	value *AccountHolderVerificationNotificationContent
	isSet bool
}

func (v NullableAccountHolderVerificationNotificationContent) Get() *AccountHolderVerificationNotificationContent {
	return v.value
}

func (v *NullableAccountHolderVerificationNotificationContent) Set(val *AccountHolderVerificationNotificationContent) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountHolderVerificationNotificationContent) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountHolderVerificationNotificationContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountHolderVerificationNotificationContent(val *AccountHolderVerificationNotificationContent) *NullableAccountHolderVerificationNotificationContent {
	return &NullableAccountHolderVerificationNotificationContent{value: val, isSet: true}
}

func (v NullableAccountHolderVerificationNotificationContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountHolderVerificationNotificationContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
