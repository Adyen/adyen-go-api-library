/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
)

// PaymentFailureNotificationContent struct for PaymentFailureNotificationContent
type PaymentFailureNotificationContent struct {
	// Missing or invalid fields that caused the payment error.
	ErrorFields  []ErrorFieldType `json:"errorFields"`
	ErrorMessage Message          `json:"errorMessage"`
}

// NewPaymentFailureNotificationContent instantiates a new PaymentFailureNotificationContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaymentFailureNotificationContent(errorFields []ErrorFieldType, errorMessage Message) *PaymentFailureNotificationContent {
	this := PaymentFailureNotificationContent{}
	this.ErrorFields = errorFields
	this.ErrorMessage = errorMessage
	return &this
}

// NewPaymentFailureNotificationContentWithDefaults instantiates a new PaymentFailureNotificationContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaymentFailureNotificationContentWithDefaults() *PaymentFailureNotificationContent {
	this := PaymentFailureNotificationContent{}
	return &this
}

// GetErrorFields returns the ErrorFields field value
func (o *PaymentFailureNotificationContent) GetErrorFields() []ErrorFieldType {
	if o == nil {
		var ret []ErrorFieldType
		return ret
	}

	return o.ErrorFields
}

// GetErrorFieldsOk returns a tuple with the ErrorFields field value
// and a boolean to check if the value has been set.
func (o *PaymentFailureNotificationContent) GetErrorFieldsOk() (*[]ErrorFieldType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorFields, true
}

// SetErrorFields sets field value
func (o *PaymentFailureNotificationContent) SetErrorFields(v []ErrorFieldType) {
	o.ErrorFields = v
}

// GetErrorMessage returns the ErrorMessage field value
func (o *PaymentFailureNotificationContent) GetErrorMessage() Message {
	if o == nil {
		var ret Message
		return ret
	}

	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
func (o *PaymentFailureNotificationContent) GetErrorMessageOk() (*Message, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// SetErrorMessage sets field value
func (o *PaymentFailureNotificationContent) SetErrorMessage(v Message) {
	o.ErrorMessage = v
}

func (o PaymentFailureNotificationContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["errorFields"] = o.ErrorFields
	}
	if true {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return json.Marshal(toSerialize)
}

type NullablePaymentFailureNotificationContent struct {
	value *PaymentFailureNotificationContent
	isSet bool
}

func (v NullablePaymentFailureNotificationContent) Get() *PaymentFailureNotificationContent {
	return v.value
}

func (v *NullablePaymentFailureNotificationContent) Set(val *PaymentFailureNotificationContent) {
	v.value = val
	v.isSet = true
}

func (v NullablePaymentFailureNotificationContent) IsSet() bool {
	return v.isSet
}

func (v *NullablePaymentFailureNotificationContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaymentFailureNotificationContent(val *PaymentFailureNotificationContent) *NullablePaymentFailureNotificationContent {
	return &NullablePaymentFailureNotificationContent{value: val, isSet: true}
}

func (v NullablePaymentFailureNotificationContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaymentFailureNotificationContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
