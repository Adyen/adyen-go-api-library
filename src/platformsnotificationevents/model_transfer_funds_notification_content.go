/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
)

// TransferFundsNotificationContent struct for TransferFundsNotificationContent
type TransferFundsNotificationContent struct {
	Amount Amount `json:"amount"`
	// The code of the Account to which funds were credited.
	DestinationAccountCode string `json:"destinationAccountCode"`
	// Invalid fields list.
	InvalidFields *[]ErrorFieldType `json:"invalidFields,omitempty"`
	// The reference provided by the merchant.
	MerchantReference *string `json:"merchantReference,omitempty"`
	// The code of the Account from which funds were debited.
	SourceAccountCode string           `json:"sourceAccountCode"`
	Status            *OperationStatus `json:"status,omitempty"`
	// The transfer code.
	TransferCode string `json:"transferCode"`
}

// NewTransferFundsNotificationContent instantiates a new TransferFundsNotificationContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferFundsNotificationContent(amount Amount, destinationAccountCode string, sourceAccountCode string, transferCode string) *TransferFundsNotificationContent {
	this := TransferFundsNotificationContent{}
	this.Amount = amount
	this.DestinationAccountCode = destinationAccountCode
	this.SourceAccountCode = sourceAccountCode
	this.TransferCode = transferCode
	return &this
}

// NewTransferFundsNotificationContentWithDefaults instantiates a new TransferFundsNotificationContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferFundsNotificationContentWithDefaults() *TransferFundsNotificationContent {
	this := TransferFundsNotificationContent{}
	return &this
}

// GetAmount returns the Amount field value
func (o *TransferFundsNotificationContent) GetAmount() Amount {
	if o == nil {
		var ret Amount
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *TransferFundsNotificationContent) GetAmountOk() (*Amount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *TransferFundsNotificationContent) SetAmount(v Amount) {
	o.Amount = v
}

// GetDestinationAccountCode returns the DestinationAccountCode field value
func (o *TransferFundsNotificationContent) GetDestinationAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationAccountCode
}

// GetDestinationAccountCodeOk returns a tuple with the DestinationAccountCode field value
// and a boolean to check if the value has been set.
func (o *TransferFundsNotificationContent) GetDestinationAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationAccountCode, true
}

// SetDestinationAccountCode sets field value
func (o *TransferFundsNotificationContent) SetDestinationAccountCode(v string) {
	o.DestinationAccountCode = v
}

// GetInvalidFields returns the InvalidFields field value if set, zero value otherwise.
func (o *TransferFundsNotificationContent) GetInvalidFields() []ErrorFieldType {
	if o == nil || o.InvalidFields == nil {
		var ret []ErrorFieldType
		return ret
	}
	return *o.InvalidFields
}

// GetInvalidFieldsOk returns a tuple with the InvalidFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferFundsNotificationContent) GetInvalidFieldsOk() (*[]ErrorFieldType, bool) {
	if o == nil || o.InvalidFields == nil {
		return nil, false
	}
	return o.InvalidFields, true
}

// HasInvalidFields returns a boolean if a field has been set.
func (o *TransferFundsNotificationContent) HasInvalidFields() bool {
	if o != nil && o.InvalidFields != nil {
		return true
	}

	return false
}

// SetInvalidFields gets a reference to the given []ErrorFieldType and assigns it to the InvalidFields field.
func (o *TransferFundsNotificationContent) SetInvalidFields(v []ErrorFieldType) {
	o.InvalidFields = &v
}

// GetMerchantReference returns the MerchantReference field value if set, zero value otherwise.
func (o *TransferFundsNotificationContent) GetMerchantReference() string {
	if o == nil || o.MerchantReference == nil {
		var ret string
		return ret
	}
	return *o.MerchantReference
}

// GetMerchantReferenceOk returns a tuple with the MerchantReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferFundsNotificationContent) GetMerchantReferenceOk() (*string, bool) {
	if o == nil || o.MerchantReference == nil {
		return nil, false
	}
	return o.MerchantReference, true
}

// HasMerchantReference returns a boolean if a field has been set.
func (o *TransferFundsNotificationContent) HasMerchantReference() bool {
	if o != nil && o.MerchantReference != nil {
		return true
	}

	return false
}

// SetMerchantReference gets a reference to the given string and assigns it to the MerchantReference field.
func (o *TransferFundsNotificationContent) SetMerchantReference(v string) {
	o.MerchantReference = &v
}

// GetSourceAccountCode returns the SourceAccountCode field value
func (o *TransferFundsNotificationContent) GetSourceAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceAccountCode
}

// GetSourceAccountCodeOk returns a tuple with the SourceAccountCode field value
// and a boolean to check if the value has been set.
func (o *TransferFundsNotificationContent) GetSourceAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceAccountCode, true
}

// SetSourceAccountCode sets field value
func (o *TransferFundsNotificationContent) SetSourceAccountCode(v string) {
	o.SourceAccountCode = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TransferFundsNotificationContent) GetStatus() OperationStatus {
	if o == nil || o.Status == nil {
		var ret OperationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferFundsNotificationContent) GetStatusOk() (*OperationStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TransferFundsNotificationContent) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OperationStatus and assigns it to the Status field.
func (o *TransferFundsNotificationContent) SetStatus(v OperationStatus) {
	o.Status = &v
}

// GetTransferCode returns the TransferCode field value
func (o *TransferFundsNotificationContent) GetTransferCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TransferCode
}

// GetTransferCodeOk returns a tuple with the TransferCode field value
// and a boolean to check if the value has been set.
func (o *TransferFundsNotificationContent) GetTransferCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransferCode, true
}

// SetTransferCode sets field value
func (o *TransferFundsNotificationContent) SetTransferCode(v string) {
	o.TransferCode = v
}

func (o TransferFundsNotificationContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["amount"] = o.Amount
	}
	if true {
		toSerialize["destinationAccountCode"] = o.DestinationAccountCode
	}
	if o.InvalidFields != nil {
		toSerialize["invalidFields"] = o.InvalidFields
	}
	if o.MerchantReference != nil {
		toSerialize["merchantReference"] = o.MerchantReference
	}
	if true {
		toSerialize["sourceAccountCode"] = o.SourceAccountCode
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["transferCode"] = o.TransferCode
	}
	return json.Marshal(toSerialize)
}

type NullableTransferFundsNotificationContent struct {
	value *TransferFundsNotificationContent
	isSet bool
}

func (v NullableTransferFundsNotificationContent) Get() *TransferFundsNotificationContent {
	return v.value
}

func (v *NullableTransferFundsNotificationContent) Set(val *TransferFundsNotificationContent) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferFundsNotificationContent) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferFundsNotificationContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferFundsNotificationContent(val *TransferFundsNotificationContent) *NullableTransferFundsNotificationContent {
	return &NullableTransferFundsNotificationContent{value: val, isSet: true}
}

func (v NullableTransferFundsNotificationContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferFundsNotificationContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
