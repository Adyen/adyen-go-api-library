/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
)

// ScheduledRefundsNotificationContent struct for ScheduledRefundsNotificationContent
type ScheduledRefundsNotificationContent struct {
	// The code of the account.
	AccountCode string `json:"accountCode"`
	// The code of the Account Holder.
	AccountHolderCode string `json:"accountHolderCode"`
	// Invalid fields list.
	InvalidFields *[]ErrorFieldType `json:"invalidFields,omitempty"`
	LastPayout    Transaction       `json:"lastPayout"`
	// A list of the refunds that have been scheduled and their results.
	RefundResults []RefundResult `json:"refundResults"`
}

// NewScheduledRefundsNotificationContent instantiates a new ScheduledRefundsNotificationContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduledRefundsNotificationContent(accountCode string, accountHolderCode string, lastPayout Transaction, refundResults []RefundResult) *ScheduledRefundsNotificationContent {
	this := ScheduledRefundsNotificationContent{}
	this.AccountCode = accountCode
	this.AccountHolderCode = accountHolderCode
	this.LastPayout = lastPayout
	this.RefundResults = refundResults
	return &this
}

// NewScheduledRefundsNotificationContentWithDefaults instantiates a new ScheduledRefundsNotificationContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduledRefundsNotificationContentWithDefaults() *ScheduledRefundsNotificationContent {
	this := ScheduledRefundsNotificationContent{}
	return &this
}

// GetAccountCode returns the AccountCode field value
func (o *ScheduledRefundsNotificationContent) GetAccountCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountCode
}

// GetAccountCodeOk returns a tuple with the AccountCode field value
// and a boolean to check if the value has been set.
func (o *ScheduledRefundsNotificationContent) GetAccountCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountCode, true
}

// SetAccountCode sets field value
func (o *ScheduledRefundsNotificationContent) SetAccountCode(v string) {
	o.AccountCode = v
}

// GetAccountHolderCode returns the AccountHolderCode field value
func (o *ScheduledRefundsNotificationContent) GetAccountHolderCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountHolderCode
}

// GetAccountHolderCodeOk returns a tuple with the AccountHolderCode field value
// and a boolean to check if the value has been set.
func (o *ScheduledRefundsNotificationContent) GetAccountHolderCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountHolderCode, true
}

// SetAccountHolderCode sets field value
func (o *ScheduledRefundsNotificationContent) SetAccountHolderCode(v string) {
	o.AccountHolderCode = v
}

// GetInvalidFields returns the InvalidFields field value if set, zero value otherwise.
func (o *ScheduledRefundsNotificationContent) GetInvalidFields() []ErrorFieldType {
	if o == nil || o.InvalidFields == nil {
		var ret []ErrorFieldType
		return ret
	}
	return *o.InvalidFields
}

// GetInvalidFieldsOk returns a tuple with the InvalidFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduledRefundsNotificationContent) GetInvalidFieldsOk() (*[]ErrorFieldType, bool) {
	if o == nil || o.InvalidFields == nil {
		return nil, false
	}
	return o.InvalidFields, true
}

// HasInvalidFields returns a boolean if a field has been set.
func (o *ScheduledRefundsNotificationContent) HasInvalidFields() bool {
	if o != nil && o.InvalidFields != nil {
		return true
	}

	return false
}

// SetInvalidFields gets a reference to the given []ErrorFieldType and assigns it to the InvalidFields field.
func (o *ScheduledRefundsNotificationContent) SetInvalidFields(v []ErrorFieldType) {
	o.InvalidFields = &v
}

// GetLastPayout returns the LastPayout field value
func (o *ScheduledRefundsNotificationContent) GetLastPayout() Transaction {
	if o == nil {
		var ret Transaction
		return ret
	}

	return o.LastPayout
}

// GetLastPayoutOk returns a tuple with the LastPayout field value
// and a boolean to check if the value has been set.
func (o *ScheduledRefundsNotificationContent) GetLastPayoutOk() (*Transaction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastPayout, true
}

// SetLastPayout sets field value
func (o *ScheduledRefundsNotificationContent) SetLastPayout(v Transaction) {
	o.LastPayout = v
}

// GetRefundResults returns the RefundResults field value
func (o *ScheduledRefundsNotificationContent) GetRefundResults() []RefundResult {
	if o == nil {
		var ret []RefundResult
		return ret
	}

	return o.RefundResults
}

// GetRefundResultsOk returns a tuple with the RefundResults field value
// and a boolean to check if the value has been set.
func (o *ScheduledRefundsNotificationContent) GetRefundResultsOk() (*[]RefundResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RefundResults, true
}

// SetRefundResults sets field value
func (o *ScheduledRefundsNotificationContent) SetRefundResults(v []RefundResult) {
	o.RefundResults = v
}

func (o ScheduledRefundsNotificationContent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accountCode"] = o.AccountCode
	}
	if true {
		toSerialize["accountHolderCode"] = o.AccountHolderCode
	}
	if o.InvalidFields != nil {
		toSerialize["invalidFields"] = o.InvalidFields
	}
	if true {
		toSerialize["lastPayout"] = o.LastPayout
	}
	if true {
		toSerialize["refundResults"] = o.RefundResults
	}
	return json.Marshal(toSerialize)
}

type NullableScheduledRefundsNotificationContent struct {
	value *ScheduledRefundsNotificationContent
	isSet bool
}

func (v NullableScheduledRefundsNotificationContent) Get() *ScheduledRefundsNotificationContent {
	return v.value
}

func (v *NullableScheduledRefundsNotificationContent) Set(val *ScheduledRefundsNotificationContent) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduledRefundsNotificationContent) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduledRefundsNotificationContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduledRefundsNotificationContent(val *ScheduledRefundsNotificationContent) *NullableScheduledRefundsNotificationContent {
	return &NullableScheduledRefundsNotificationContent{value: val, isSet: true}
}

func (v NullableScheduledRefundsNotificationContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduledRefundsNotificationContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
