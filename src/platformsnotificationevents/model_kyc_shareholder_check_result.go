/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
)

// KYCShareholderCheckResult struct for KYCShareholderCheckResult
type KYCShareholderCheckResult struct {
	// A list of the checks and their statuses.
	Checks *[]KYCCheckStatusData `json:"checks,omitempty"`
	// The code of the shareholder to which the check applies.
	ShareholderCode *string `json:"shareholderCode,omitempty"`
}

// NewKYCShareholderCheckResult instantiates a new KYCShareholderCheckResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKYCShareholderCheckResult() *KYCShareholderCheckResult {
	this := KYCShareholderCheckResult{}
	return &this
}

// NewKYCShareholderCheckResultWithDefaults instantiates a new KYCShareholderCheckResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKYCShareholderCheckResultWithDefaults() *KYCShareholderCheckResult {
	this := KYCShareholderCheckResult{}
	return &this
}

// GetChecks returns the Checks field value if set, zero value otherwise.
func (o *KYCShareholderCheckResult) GetChecks() []KYCCheckStatusData {
	if o == nil || o.Checks == nil {
		var ret []KYCCheckStatusData
		return ret
	}
	return *o.Checks
}

// GetChecksOk returns a tuple with the Checks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCShareholderCheckResult) GetChecksOk() (*[]KYCCheckStatusData, bool) {
	if o == nil || o.Checks == nil {
		return nil, false
	}
	return o.Checks, true
}

// HasChecks returns a boolean if a field has been set.
func (o *KYCShareholderCheckResult) HasChecks() bool {
	if o != nil && o.Checks != nil {
		return true
	}

	return false
}

// SetChecks gets a reference to the given []KYCCheckStatusData and assigns it to the Checks field.
func (o *KYCShareholderCheckResult) SetChecks(v []KYCCheckStatusData) {
	o.Checks = &v
}

// GetShareholderCode returns the ShareholderCode field value if set, zero value otherwise.
func (o *KYCShareholderCheckResult) GetShareholderCode() string {
	if o == nil || o.ShareholderCode == nil {
		var ret string
		return ret
	}
	return *o.ShareholderCode
}

// GetShareholderCodeOk returns a tuple with the ShareholderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCShareholderCheckResult) GetShareholderCodeOk() (*string, bool) {
	if o == nil || o.ShareholderCode == nil {
		return nil, false
	}
	return o.ShareholderCode, true
}

// HasShareholderCode returns a boolean if a field has been set.
func (o *KYCShareholderCheckResult) HasShareholderCode() bool {
	if o != nil && o.ShareholderCode != nil {
		return true
	}

	return false
}

// SetShareholderCode gets a reference to the given string and assigns it to the ShareholderCode field.
func (o *KYCShareholderCheckResult) SetShareholderCode(v string) {
	o.ShareholderCode = &v
}

func (o KYCShareholderCheckResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Checks != nil {
		toSerialize["checks"] = o.Checks
	}
	if o.ShareholderCode != nil {
		toSerialize["shareholderCode"] = o.ShareholderCode
	}
	return json.Marshal(toSerialize)
}

type NullableKYCShareholderCheckResult struct {
	value *KYCShareholderCheckResult
	isSet bool
}

func (v NullableKYCShareholderCheckResult) Get() *KYCShareholderCheckResult {
	return v.value
}

func (v *NullableKYCShareholderCheckResult) Set(val *KYCShareholderCheckResult) {
	v.value = val
	v.isSet = true
}

func (v NullableKYCShareholderCheckResult) IsSet() bool {
	return v.isSet
}

func (v *NullableKYCShareholderCheckResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKYCShareholderCheckResult(val *KYCShareholderCheckResult) *NullableKYCShareholderCheckResult {
	return &NullableKYCShareholderCheckResult{value: val, isSet: true}
}

func (v NullableKYCShareholderCheckResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKYCShareholderCheckResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
