/*
 * Adyen for Platforms: Notifications
 *
 * The Notification API sends notifications to the endpoints specified in a given subscription. Subscriptions are managed through the Notification Configuration API. The API specifications listed here detail the format of each notification.  For more information, refer to our [documentation](https://docs.adyen.com/platforms/notifications).
 *
 * API version: 6
 * Contact: support@adyen.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformsnotificationevents

import (
	"encoding/json"
)

// KYCCheckSummary struct for KYCCheckSummary
type KYCCheckSummary struct {
	// The code of the check.
	KycCheckCode *int32 `json:"kycCheckCode,omitempty"`
	// A description of the check.
	KycCheckDescription *string `json:"kycCheckDescription,omitempty"`
}

// NewKYCCheckSummary instantiates a new KYCCheckSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKYCCheckSummary() *KYCCheckSummary {
	this := KYCCheckSummary{}
	return &this
}

// NewKYCCheckSummaryWithDefaults instantiates a new KYCCheckSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKYCCheckSummaryWithDefaults() *KYCCheckSummary {
	this := KYCCheckSummary{}
	return &this
}

// GetKycCheckCode returns the KycCheckCode field value if set, zero value otherwise.
func (o *KYCCheckSummary) GetKycCheckCode() int32 {
	if o == nil || o.KycCheckCode == nil {
		var ret int32
		return ret
	}
	return *o.KycCheckCode
}

// GetKycCheckCodeOk returns a tuple with the KycCheckCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCCheckSummary) GetKycCheckCodeOk() (*int32, bool) {
	if o == nil || o.KycCheckCode == nil {
		return nil, false
	}
	return o.KycCheckCode, true
}

// HasKycCheckCode returns a boolean if a field has been set.
func (o *KYCCheckSummary) HasKycCheckCode() bool {
	if o != nil && o.KycCheckCode != nil {
		return true
	}

	return false
}

// SetKycCheckCode gets a reference to the given int32 and assigns it to the KycCheckCode field.
func (o *KYCCheckSummary) SetKycCheckCode(v int32) {
	o.KycCheckCode = &v
}

// GetKycCheckDescription returns the KycCheckDescription field value if set, zero value otherwise.
func (o *KYCCheckSummary) GetKycCheckDescription() string {
	if o == nil || o.KycCheckDescription == nil {
		var ret string
		return ret
	}
	return *o.KycCheckDescription
}

// GetKycCheckDescriptionOk returns a tuple with the KycCheckDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KYCCheckSummary) GetKycCheckDescriptionOk() (*string, bool) {
	if o == nil || o.KycCheckDescription == nil {
		return nil, false
	}
	return o.KycCheckDescription, true
}

// HasKycCheckDescription returns a boolean if a field has been set.
func (o *KYCCheckSummary) HasKycCheckDescription() bool {
	if o != nil && o.KycCheckDescription != nil {
		return true
	}

	return false
}

// SetKycCheckDescription gets a reference to the given string and assigns it to the KycCheckDescription field.
func (o *KYCCheckSummary) SetKycCheckDescription(v string) {
	o.KycCheckDescription = &v
}

func (o KYCCheckSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KycCheckCode != nil {
		toSerialize["kycCheckCode"] = o.KycCheckCode
	}
	if o.KycCheckDescription != nil {
		toSerialize["kycCheckDescription"] = o.KycCheckDescription
	}
	return json.Marshal(toSerialize)
}

type NullableKYCCheckSummary struct {
	value *KYCCheckSummary
	isSet bool
}

func (v NullableKYCCheckSummary) Get() *KYCCheckSummary {
	return v.value
}

func (v *NullableKYCCheckSummary) Set(val *KYCCheckSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableKYCCheckSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableKYCCheckSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKYCCheckSummary(val *KYCCheckSummary) *NullableKYCCheckSummary {
	return &NullableKYCCheckSummary{value: val, isSet: true}
}

func (v NullableKYCCheckSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKYCCheckSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
