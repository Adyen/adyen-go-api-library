/*
Transfer webhooks

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transferwebhook

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v7/src/common"
)

// checks if the transferwebhookValidationFact type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &transferwebhookValidationFact{}

// transferwebhookValidationFact struct for transferwebhookValidationFact
type transferwebhookValidationFact struct {
	// The evaluation result of the validation fact.
	Result *string `json:"result,omitempty"`
	// The type of the validation fact.
	Type *string `json:"type,omitempty"`
}

// NewtransferwebhookValidationFact instantiates a new transferwebhookValidationFact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewtransferwebhookValidationFact() *transferwebhookValidationFact {
	this := transferwebhookValidationFact{}
	return &this
}

// NewtransferwebhookValidationFactWithDefaults instantiates a new transferwebhookValidationFact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewtransferwebhookValidationFactWithDefaults() *transferwebhookValidationFact {
	this := transferwebhookValidationFact{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *transferwebhookValidationFact) GetResult() string {
	if o == nil || common.IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *transferwebhookValidationFact) GetResultOk() (*string, bool) {
	if o == nil || common.IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *transferwebhookValidationFact) HasResult() bool {
	if o != nil && !common.IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *transferwebhookValidationFact) SetResult(v string) {
	o.Result = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *transferwebhookValidationFact) GetType() string {
	if o == nil || common.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *transferwebhookValidationFact) GetTypeOk() (*string, bool) {
	if o == nil || common.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *transferwebhookValidationFact) HasType() bool {
	if o != nil && !common.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *transferwebhookValidationFact) SetType(v string) {
	o.Type = &v
}

func (o transferwebhookValidationFact) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o transferwebhookValidationFact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !common.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullabletransferwebhookValidationFact struct {
	value *transferwebhookValidationFact
	isSet bool
}

func (v NullabletransferwebhookValidationFact) Get() *transferwebhookValidationFact {
	return v.value
}

func (v *NullabletransferwebhookValidationFact) Set(val *transferwebhookValidationFact) {
	v.value = val
	v.isSet = true
}

func (v NullabletransferwebhookValidationFact) IsSet() bool {
	return v.isSet
}

func (v *NullabletransferwebhookValidationFact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullabletransferwebhookValidationFact(val *transferwebhookValidationFact) *NullabletransferwebhookValidationFact {
	return &NullabletransferwebhookValidationFact{value: val, isSet: true}
}

func (v NullabletransferwebhookValidationFact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullabletransferwebhookValidationFact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
