/*
Accounting notifications

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatformaccountingnotification

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v6/src/common"
)

// checks if the RelayedAuthorisationData2 type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &RelayedAuthorisationData2{}

// RelayedAuthorisationData2 struct for RelayedAuthorisationData2
type RelayedAuthorisationData2 struct {
	// Contains key-value pairs of your references and descriptions, for example, `customId`:`your-own-custom-field-12345`.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// Your reference for the relayed authorisation data.
	Reference *string `json:"reference,omitempty"`
}

// NewRelayedAuthorisationData2 instantiates a new RelayedAuthorisationData2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRelayedAuthorisationData2() *RelayedAuthorisationData2 {
	this := RelayedAuthorisationData2{}
	return &this
}

// NewRelayedAuthorisationData2WithDefaults instantiates a new RelayedAuthorisationData2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRelayedAuthorisationData2WithDefaults() *RelayedAuthorisationData2 {
	this := RelayedAuthorisationData2{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RelayedAuthorisationData2) GetMetadata() map[string]string {
	if o == nil || common.IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelayedAuthorisationData2) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || common.IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RelayedAuthorisationData2) HasMetadata() bool {
	if o != nil && !common.IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *RelayedAuthorisationData2) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *RelayedAuthorisationData2) GetReference() string {
	if o == nil || common.IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RelayedAuthorisationData2) GetReferenceOk() (*string, bool) {
	if o == nil || common.IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *RelayedAuthorisationData2) HasReference() bool {
	if o != nil && !common.IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *RelayedAuthorisationData2) SetReference(v string) {
	o.Reference = &v
}

func (o RelayedAuthorisationData2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RelayedAuthorisationData2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !common.IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	return toSerialize, nil
}

type NullableRelayedAuthorisationData2 struct {
	value *RelayedAuthorisationData2
	isSet bool
}

func (v NullableRelayedAuthorisationData2) Get() *RelayedAuthorisationData2 {
	return v.value
}

func (v *NullableRelayedAuthorisationData2) Set(val *RelayedAuthorisationData2) {
	v.value = val
	v.isSet = true
}

func (v NullableRelayedAuthorisationData2) IsSet() bool {
	return v.isSet
}

func (v *NullableRelayedAuthorisationData2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRelayedAuthorisationData2(val *RelayedAuthorisationData2) *NullableRelayedAuthorisationData2 {
	return &NullableRelayedAuthorisationData2{value: val, isSet: true}
}

func (v NullableRelayedAuthorisationData2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRelayedAuthorisationData2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
