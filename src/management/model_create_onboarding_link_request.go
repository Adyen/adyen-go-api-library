/*
Management API

Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```

API version: 1
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Management

import (
	"encoding/json"
)

// CreateOnboardingLinkRequest struct for CreateOnboardingLinkRequest
type CreateOnboardingLinkRequest struct {
	AdminUser User2 `json:"adminUser"`
	// Id of the company to be onboarded
	CompanyId *string `json:"companyId,omitempty"`
	// Contacts
	Contacts []Contact2 `json:"contacts,omitempty"`
	// Country
	Country string `json:"country"`
	// Id of the merchant to be onboarded
	MerchantId *string `json:"merchantId,omitempty"`
	// Pricing Plan for the merchant
	PricingPlan *string `json:"pricingPlan,omitempty"`
	// If supplied, merchant will be redirected to this URL after onboarding form submission
	ReturnUrl *string `json:"returnUrl,omitempty"`
	// Terms and conditions URL
	TermsAndConditionsUrl *string `json:"termsAndConditionsUrl,omitempty"`
	// Web address
	WebAddress *string `json:"webAddress,omitempty"`
	Webhook *Webhook2 `json:"webhook,omitempty"`
}

// NewCreateOnboardingLinkRequest instantiates a new CreateOnboardingLinkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOnboardingLinkRequest(adminUser User2, country string) *CreateOnboardingLinkRequest {
	this := CreateOnboardingLinkRequest{}
	this.AdminUser = adminUser
	this.Country = country
	return &this
}

// NewCreateOnboardingLinkRequestWithDefaults instantiates a new CreateOnboardingLinkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOnboardingLinkRequestWithDefaults() *CreateOnboardingLinkRequest {
	this := CreateOnboardingLinkRequest{}
	return &this
}

// GetAdminUser returns the AdminUser field value
func (o *CreateOnboardingLinkRequest) GetAdminUser() User2 {
	if o == nil {
		var ret User2
		return ret
	}

	return o.AdminUser
}

// GetAdminUserOk returns a tuple with the AdminUser field value
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetAdminUserOk() (*User2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminUser, true
}

// SetAdminUser sets field value
func (o *CreateOnboardingLinkRequest) SetAdminUser(v User2) {
	o.AdminUser = v
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetCompanyId() string {
	if o == nil || isNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetCompanyIdOk() (*string, bool) {
	if o == nil || isNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasCompanyId() bool {
	if o != nil && !isNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *CreateOnboardingLinkRequest) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetContacts returns the Contacts field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetContacts() []Contact2 {
	if o == nil || isNil(o.Contacts) {
		var ret []Contact2
		return ret
	}
	return o.Contacts
}

// GetContactsOk returns a tuple with the Contacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetContactsOk() ([]Contact2, bool) {
	if o == nil || isNil(o.Contacts) {
		return nil, false
	}
	return o.Contacts, true
}

// HasContacts returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasContacts() bool {
	if o != nil && !isNil(o.Contacts) {
		return true
	}

	return false
}

// SetContacts gets a reference to the given []Contact2 and assigns it to the Contacts field.
func (o *CreateOnboardingLinkRequest) SetContacts(v []Contact2) {
	o.Contacts = v
}

// GetCountry returns the Country field value
func (o *CreateOnboardingLinkRequest) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *CreateOnboardingLinkRequest) SetCountry(v string) {
	o.Country = v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetMerchantId() string {
	if o == nil || isNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetMerchantIdOk() (*string, bool) {
	if o == nil || isNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasMerchantId() bool {
	if o != nil && !isNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *CreateOnboardingLinkRequest) SetMerchantId(v string) {
	o.MerchantId = &v
}

// GetPricingPlan returns the PricingPlan field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetPricingPlan() string {
	if o == nil || isNil(o.PricingPlan) {
		var ret string
		return ret
	}
	return *o.PricingPlan
}

// GetPricingPlanOk returns a tuple with the PricingPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetPricingPlanOk() (*string, bool) {
	if o == nil || isNil(o.PricingPlan) {
		return nil, false
	}
	return o.PricingPlan, true
}

// HasPricingPlan returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasPricingPlan() bool {
	if o != nil && !isNil(o.PricingPlan) {
		return true
	}

	return false
}

// SetPricingPlan gets a reference to the given string and assigns it to the PricingPlan field.
func (o *CreateOnboardingLinkRequest) SetPricingPlan(v string) {
	o.PricingPlan = &v
}

// GetReturnUrl returns the ReturnUrl field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetReturnUrl() string {
	if o == nil || isNil(o.ReturnUrl) {
		var ret string
		return ret
	}
	return *o.ReturnUrl
}

// GetReturnUrlOk returns a tuple with the ReturnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetReturnUrlOk() (*string, bool) {
	if o == nil || isNil(o.ReturnUrl) {
		return nil, false
	}
	return o.ReturnUrl, true
}

// HasReturnUrl returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasReturnUrl() bool {
	if o != nil && !isNil(o.ReturnUrl) {
		return true
	}

	return false
}

// SetReturnUrl gets a reference to the given string and assigns it to the ReturnUrl field.
func (o *CreateOnboardingLinkRequest) SetReturnUrl(v string) {
	o.ReturnUrl = &v
}

// GetTermsAndConditionsUrl returns the TermsAndConditionsUrl field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetTermsAndConditionsUrl() string {
	if o == nil || isNil(o.TermsAndConditionsUrl) {
		var ret string
		return ret
	}
	return *o.TermsAndConditionsUrl
}

// GetTermsAndConditionsUrlOk returns a tuple with the TermsAndConditionsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetTermsAndConditionsUrlOk() (*string, bool) {
	if o == nil || isNil(o.TermsAndConditionsUrl) {
		return nil, false
	}
	return o.TermsAndConditionsUrl, true
}

// HasTermsAndConditionsUrl returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasTermsAndConditionsUrl() bool {
	if o != nil && !isNil(o.TermsAndConditionsUrl) {
		return true
	}

	return false
}

// SetTermsAndConditionsUrl gets a reference to the given string and assigns it to the TermsAndConditionsUrl field.
func (o *CreateOnboardingLinkRequest) SetTermsAndConditionsUrl(v string) {
	o.TermsAndConditionsUrl = &v
}

// GetWebAddress returns the WebAddress field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetWebAddress() string {
	if o == nil || isNil(o.WebAddress) {
		var ret string
		return ret
	}
	return *o.WebAddress
}

// GetWebAddressOk returns a tuple with the WebAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetWebAddressOk() (*string, bool) {
	if o == nil || isNil(o.WebAddress) {
		return nil, false
	}
	return o.WebAddress, true
}

// HasWebAddress returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasWebAddress() bool {
	if o != nil && !isNil(o.WebAddress) {
		return true
	}

	return false
}

// SetWebAddress gets a reference to the given string and assigns it to the WebAddress field.
func (o *CreateOnboardingLinkRequest) SetWebAddress(v string) {
	o.WebAddress = &v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *CreateOnboardingLinkRequest) GetWebhook() Webhook2 {
	if o == nil || isNil(o.Webhook) {
		var ret Webhook2
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOnboardingLinkRequest) GetWebhookOk() (*Webhook2, bool) {
	if o == nil || isNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *CreateOnboardingLinkRequest) HasWebhook() bool {
	if o != nil && !isNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given Webhook2 and assigns it to the Webhook field.
func (o *CreateOnboardingLinkRequest) SetWebhook(v Webhook2) {
	o.Webhook = &v
}

func (o CreateOnboardingLinkRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["adminUser"] = o.AdminUser
	}
	if !isNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !isNil(o.Contacts) {
		toSerialize["contacts"] = o.Contacts
	}
	if true {
		toSerialize["country"] = o.Country
	}
	if !isNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	if !isNil(o.PricingPlan) {
		toSerialize["pricingPlan"] = o.PricingPlan
	}
	if !isNil(o.ReturnUrl) {
		toSerialize["returnUrl"] = o.ReturnUrl
	}
	if !isNil(o.TermsAndConditionsUrl) {
		toSerialize["termsAndConditionsUrl"] = o.TermsAndConditionsUrl
	}
	if !isNil(o.WebAddress) {
		toSerialize["webAddress"] = o.WebAddress
	}
	if !isNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	return json.Marshal(toSerialize)
}

type NullableCreateOnboardingLinkRequest struct {
	value *CreateOnboardingLinkRequest
	isSet bool
}

func (v NullableCreateOnboardingLinkRequest) Get() *CreateOnboardingLinkRequest {
	return v.value
}

func (v *NullableCreateOnboardingLinkRequest) Set(val *CreateOnboardingLinkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOnboardingLinkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOnboardingLinkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOnboardingLinkRequest(val *CreateOnboardingLinkRequest) *NullableCreateOnboardingLinkRequest {
	return &NullableCreateOnboardingLinkRequest{value: val, isSet: true}
}

func (v NullableCreateOnboardingLinkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOnboardingLinkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


