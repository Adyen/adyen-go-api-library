/*
Management API

Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```

API version: 1
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Management

import (
	"encoding/json"
)

// GooglePayInfo struct for GooglePayInfo
type GooglePayInfo struct {
	// Google Pay [Merchant ID](https://support.google.com/paymentscenter/answer/7163092?hl=en). Character length and limitations: 16 alphanumeric characters or 20 numeric characters.
	MerchantId string `json:"merchantId"`
}

// NewGooglePayInfo instantiates a new GooglePayInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGooglePayInfo(merchantId string) *GooglePayInfo {
	this := GooglePayInfo{}
	this.MerchantId = merchantId
	return &this
}

// NewGooglePayInfoWithDefaults instantiates a new GooglePayInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGooglePayInfoWithDefaults() *GooglePayInfo {
	this := GooglePayInfo{}
	return &this
}

// GetMerchantId returns the MerchantId field value
func (o *GooglePayInfo) GetMerchantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value
// and a boolean to check if the value has been set.
func (o *GooglePayInfo) GetMerchantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantId, true
}

// SetMerchantId sets field value
func (o *GooglePayInfo) SetMerchantId(v string) {
	o.MerchantId = v
}

func (o GooglePayInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["merchantId"] = o.MerchantId
	}
	return json.Marshal(toSerialize)
}

type NullableGooglePayInfo struct {
	value *GooglePayInfo
	isSet bool
}

func (v NullableGooglePayInfo) Get() *GooglePayInfo {
	return v.value
}

func (v *NullableGooglePayInfo) Set(val *GooglePayInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableGooglePayInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableGooglePayInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGooglePayInfo(val *GooglePayInfo) *NullableGooglePayInfo {
	return &NullableGooglePayInfo{value: val, isSet: true}
}

func (v NullableGooglePayInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGooglePayInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


