/*
Management API

Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```

API version: 1
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Management

import (
	"encoding/json"
)

// TerminalOrderRequest struct for TerminalOrderRequest
type TerminalOrderRequest struct {
	// The identification of the billing entity to use for the order.
	BillingEntityId *string `json:"billingEntityId,omitempty"`
	// The merchant-defined purchase order reference.
	CustomerOrderReference *string `json:"customerOrderReference,omitempty"`
	// The products included in the order.
	Items []OrderItem `json:"items,omitempty"`
	// The identification of the shipping location to use for the order.
	ShippingLocationId *string `json:"shippingLocationId,omitempty"`
	// The tax number of the billing entity.
	TaxId *string `json:"taxId,omitempty"`
}

// NewTerminalOrderRequest instantiates a new TerminalOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTerminalOrderRequest() *TerminalOrderRequest {
	this := TerminalOrderRequest{}
	return &this
}

// NewTerminalOrderRequestWithDefaults instantiates a new TerminalOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTerminalOrderRequestWithDefaults() *TerminalOrderRequest {
	this := TerminalOrderRequest{}
	return &this
}

// GetBillingEntityId returns the BillingEntityId field value if set, zero value otherwise.
func (o *TerminalOrderRequest) GetBillingEntityId() string {
	if o == nil || isNil(o.BillingEntityId) {
		var ret string
		return ret
	}
	return *o.BillingEntityId
}

// GetBillingEntityIdOk returns a tuple with the BillingEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalOrderRequest) GetBillingEntityIdOk() (*string, bool) {
	if o == nil || isNil(o.BillingEntityId) {
		return nil, false
	}
	return o.BillingEntityId, true
}

// HasBillingEntityId returns a boolean if a field has been set.
func (o *TerminalOrderRequest) HasBillingEntityId() bool {
	if o != nil && !isNil(o.BillingEntityId) {
		return true
	}

	return false
}

// SetBillingEntityId gets a reference to the given string and assigns it to the BillingEntityId field.
func (o *TerminalOrderRequest) SetBillingEntityId(v string) {
	o.BillingEntityId = &v
}

// GetCustomerOrderReference returns the CustomerOrderReference field value if set, zero value otherwise.
func (o *TerminalOrderRequest) GetCustomerOrderReference() string {
	if o == nil || isNil(o.CustomerOrderReference) {
		var ret string
		return ret
	}
	return *o.CustomerOrderReference
}

// GetCustomerOrderReferenceOk returns a tuple with the CustomerOrderReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalOrderRequest) GetCustomerOrderReferenceOk() (*string, bool) {
	if o == nil || isNil(o.CustomerOrderReference) {
		return nil, false
	}
	return o.CustomerOrderReference, true
}

// HasCustomerOrderReference returns a boolean if a field has been set.
func (o *TerminalOrderRequest) HasCustomerOrderReference() bool {
	if o != nil && !isNil(o.CustomerOrderReference) {
		return true
	}

	return false
}

// SetCustomerOrderReference gets a reference to the given string and assigns it to the CustomerOrderReference field.
func (o *TerminalOrderRequest) SetCustomerOrderReference(v string) {
	o.CustomerOrderReference = &v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *TerminalOrderRequest) GetItems() []OrderItem {
	if o == nil || isNil(o.Items) {
		var ret []OrderItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalOrderRequest) GetItemsOk() ([]OrderItem, bool) {
	if o == nil || isNil(o.Items) {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *TerminalOrderRequest) HasItems() bool {
	if o != nil && !isNil(o.Items) {
		return true
	}

	return false
}

// SetItems gets a reference to the given []OrderItem and assigns it to the Items field.
func (o *TerminalOrderRequest) SetItems(v []OrderItem) {
	o.Items = v
}

// GetShippingLocationId returns the ShippingLocationId field value if set, zero value otherwise.
func (o *TerminalOrderRequest) GetShippingLocationId() string {
	if o == nil || isNil(o.ShippingLocationId) {
		var ret string
		return ret
	}
	return *o.ShippingLocationId
}

// GetShippingLocationIdOk returns a tuple with the ShippingLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalOrderRequest) GetShippingLocationIdOk() (*string, bool) {
	if o == nil || isNil(o.ShippingLocationId) {
		return nil, false
	}
	return o.ShippingLocationId, true
}

// HasShippingLocationId returns a boolean if a field has been set.
func (o *TerminalOrderRequest) HasShippingLocationId() bool {
	if o != nil && !isNil(o.ShippingLocationId) {
		return true
	}

	return false
}

// SetShippingLocationId gets a reference to the given string and assigns it to the ShippingLocationId field.
func (o *TerminalOrderRequest) SetShippingLocationId(v string) {
	o.ShippingLocationId = &v
}

// GetTaxId returns the TaxId field value if set, zero value otherwise.
func (o *TerminalOrderRequest) GetTaxId() string {
	if o == nil || isNil(o.TaxId) {
		var ret string
		return ret
	}
	return *o.TaxId
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TerminalOrderRequest) GetTaxIdOk() (*string, bool) {
	if o == nil || isNil(o.TaxId) {
		return nil, false
	}
	return o.TaxId, true
}

// HasTaxId returns a boolean if a field has been set.
func (o *TerminalOrderRequest) HasTaxId() bool {
	if o != nil && !isNil(o.TaxId) {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given string and assigns it to the TaxId field.
func (o *TerminalOrderRequest) SetTaxId(v string) {
	o.TaxId = &v
}

func (o TerminalOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BillingEntityId) {
		toSerialize["billingEntityId"] = o.BillingEntityId
	}
	if !isNil(o.CustomerOrderReference) {
		toSerialize["customerOrderReference"] = o.CustomerOrderReference
	}
	if !isNil(o.Items) {
		toSerialize["items"] = o.Items
	}
	if !isNil(o.ShippingLocationId) {
		toSerialize["shippingLocationId"] = o.ShippingLocationId
	}
	if !isNil(o.TaxId) {
		toSerialize["taxId"] = o.TaxId
	}
	return json.Marshal(toSerialize)
}

type NullableTerminalOrderRequest struct {
	value *TerminalOrderRequest
	isSet bool
}

func (v NullableTerminalOrderRequest) Get() *TerminalOrderRequest {
	return v.value
}

func (v *NullableTerminalOrderRequest) Set(val *TerminalOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTerminalOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTerminalOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTerminalOrderRequest(val *TerminalOrderRequest) *NullableTerminalOrderRequest {
	return &NullableTerminalOrderRequest{value: val, isSet: true}
}

func (v NullableTerminalOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTerminalOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


