/*
Management API

Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```

API version: 1
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Management

import (
	"encoding/json"
)

// ReleaseUpdateDetails struct for ReleaseUpdateDetails
type ReleaseUpdateDetails struct {
	// Type of terminal action: Update Release.
	Type *string `json:"type,omitempty"`
	// Boolean flag that tells if the terminal should update at the first next maintenance call. If false, terminal will update on its configured reboot time.
	UpdateAtFirstMaintenanceCall *bool `json:"updateAtFirstMaintenanceCall,omitempty"`
}

// NewReleaseUpdateDetails instantiates a new ReleaseUpdateDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleaseUpdateDetails() *ReleaseUpdateDetails {
	this := ReleaseUpdateDetails{}
	var type_ string = "ReleaseUpdate"
	this.Type = &type_
	return &this
}

// NewReleaseUpdateDetailsWithDefaults instantiates a new ReleaseUpdateDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleaseUpdateDetailsWithDefaults() *ReleaseUpdateDetails {
	this := ReleaseUpdateDetails{}
	var type_ string = "ReleaseUpdate"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ReleaseUpdateDetails) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseUpdateDetails) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ReleaseUpdateDetails) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ReleaseUpdateDetails) SetType(v string) {
	o.Type = &v
}

// GetUpdateAtFirstMaintenanceCall returns the UpdateAtFirstMaintenanceCall field value if set, zero value otherwise.
func (o *ReleaseUpdateDetails) GetUpdateAtFirstMaintenanceCall() bool {
	if o == nil || isNil(o.UpdateAtFirstMaintenanceCall) {
		var ret bool
		return ret
	}
	return *o.UpdateAtFirstMaintenanceCall
}

// GetUpdateAtFirstMaintenanceCallOk returns a tuple with the UpdateAtFirstMaintenanceCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseUpdateDetails) GetUpdateAtFirstMaintenanceCallOk() (*bool, bool) {
	if o == nil || isNil(o.UpdateAtFirstMaintenanceCall) {
		return nil, false
	}
	return o.UpdateAtFirstMaintenanceCall, true
}

// HasUpdateAtFirstMaintenanceCall returns a boolean if a field has been set.
func (o *ReleaseUpdateDetails) HasUpdateAtFirstMaintenanceCall() bool {
	if o != nil && !isNil(o.UpdateAtFirstMaintenanceCall) {
		return true
	}

	return false
}

// SetUpdateAtFirstMaintenanceCall gets a reference to the given bool and assigns it to the UpdateAtFirstMaintenanceCall field.
func (o *ReleaseUpdateDetails) SetUpdateAtFirstMaintenanceCall(v bool) {
	o.UpdateAtFirstMaintenanceCall = &v
}

func (o ReleaseUpdateDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.UpdateAtFirstMaintenanceCall) {
		toSerialize["updateAtFirstMaintenanceCall"] = o.UpdateAtFirstMaintenanceCall
	}
	return json.Marshal(toSerialize)
}

type NullableReleaseUpdateDetails struct {
	value *ReleaseUpdateDetails
	isSet bool
}

func (v NullableReleaseUpdateDetails) Get() *ReleaseUpdateDetails {
	return v.value
}

func (v *NullableReleaseUpdateDetails) Set(val *ReleaseUpdateDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableReleaseUpdateDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableReleaseUpdateDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleaseUpdateDetails(val *ReleaseUpdateDetails) *NullableReleaseUpdateDetails {
	return &NullableReleaseUpdateDetails{value: val, isSet: true}
}

func (v NullableReleaseUpdateDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleaseUpdateDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


