/*
Management API

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"context"
	_context "context"
	_nethttp "net/http"
	"net/url"
	"strings"

	"github.com/adyen/adyen-go-api-library/v7/src/common"
)

// WebhooksCompanyLevelApi WebhooksCompanyLevelApi service
type WebhooksCompanyLevelApi common.Service

type WebhooksCompanyLevelApiGenerateHmacKeyConfig struct {
	ctx       context.Context
	companyId string
	webhookId string
}

/*
GenerateHmacKey Generate an HMAC key

Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).

To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
* Management API—Webhooks read and write

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param companyId The unique identifier of the company account.
 @param webhookId Unique identifier of the webhook configuration.
 @return WebhooksCompanyLevelApiGenerateHmacKeyConfig
*/
func (a *WebhooksCompanyLevelApi) GenerateHmacKeyConfig(ctx context.Context, companyId string, webhookId string) WebhooksCompanyLevelApiGenerateHmacKeyConfig {
	return WebhooksCompanyLevelApiGenerateHmacKeyConfig{
		ctx:       ctx,
		companyId: companyId,
		webhookId: webhookId,
	}
}

/*
Generate an HMAC key
Returns an [HMAC key](https://en.wikipedia.org/wiki/HMAC) for the webhook identified in the path. This key allows you to check the integrity and the origin of the notifications you receive.By creating an HMAC key, you start receiving [HMAC-signed notifications](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures#enable-hmac-signatures) from Adyen. Find out more about how to [verify HMAC signatures](https://docs.adyen.com/development-resources/webhooks/verify-hmac-signatures).  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
 * @param companyId The unique identifier of the company account.
 * @param webhookId Unique identifier of the webhook configuration.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return GenerateHmacKeyResponse
*/

func (a *WebhooksCompanyLevelApi) GenerateHmacKey(r WebhooksCompanyLevelApiGenerateHmacKeyConfig) (GenerateHmacKeyResponse, *_nethttp.Response, error) {
	res := &GenerateHmacKeyResponse{}
	path := "/companies/{companyId}/webhooks/{webhookId}/generateHmac"
	path = strings.Replace(path, "{"+"companyId"+"}", url.PathEscape(common.ParameterValueToString(r.companyId, "companyId")), -1)
	path = strings.Replace(path, "{"+"webhookId"+"}", url.PathEscape(common.ParameterValueToString(r.webhookId, "webhookId")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodPost, nil, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}

type WebhooksCompanyLevelApiGetWebhookConfig struct {
	ctx       context.Context
	companyId string
	webhookId string
}

/*
GetWebhook Get a webhook

Returns the configuration for the webhook identified in the path.

To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
* Management API—Webhooks read
* Management API—Webhooks read and write

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
 @param webhookId Unique identifier of the webhook configuration.
 @return WebhooksCompanyLevelApiGetWebhookConfig
*/
func (a *WebhooksCompanyLevelApi) GetWebhookConfig(ctx context.Context, companyId string, webhookId string) WebhooksCompanyLevelApiGetWebhookConfig {
	return WebhooksCompanyLevelApiGetWebhookConfig{
		ctx:       ctx,
		companyId: companyId,
		webhookId: webhookId,
	}
}

/*
Get a webhook
Returns the configuration for the webhook identified in the path.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
 * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
 * @param webhookId Unique identifier of the webhook configuration.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return Webhook
*/

func (a *WebhooksCompanyLevelApi) GetWebhook(r WebhooksCompanyLevelApiGetWebhookConfig) (Webhook, *_nethttp.Response, error) {
	res := &Webhook{}
	path := "/companies/{companyId}/webhooks/{webhookId}"
	path = strings.Replace(path, "{"+"companyId"+"}", url.PathEscape(common.ParameterValueToString(r.companyId, "companyId")), -1)
	path = strings.Replace(path, "{"+"webhookId"+"}", url.PathEscape(common.ParameterValueToString(r.webhookId, "webhookId")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodGet, nil, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}

type WebhooksCompanyLevelApiListAllWebhooksConfig struct {
	ctx        context.Context
	companyId  string
	pageNumber *int32
	pageSize   *int32
}

// The number of the page to fetch.
func (r WebhooksCompanyLevelApiListAllWebhooksConfig) PageNumber(pageNumber int32) WebhooksCompanyLevelApiListAllWebhooksConfig {
	r.pageNumber = &pageNumber
	return r
}

// The number of items to have on a page, maximum 100. The default is 10 items on a page.
func (r WebhooksCompanyLevelApiListAllWebhooksConfig) PageSize(pageSize int32) WebhooksCompanyLevelApiListAllWebhooksConfig {
	r.pageSize = &pageSize
	return r
}

/*
ListAllWebhooks List all webhooks

Lists all webhook configurations for the company account.

To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
* Management API—Webhooks read
* Management API—Webhooks read and write

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
 @return WebhooksCompanyLevelApiListAllWebhooksConfig
*/
func (a *WebhooksCompanyLevelApi) ListAllWebhooksConfig(ctx context.Context, companyId string) WebhooksCompanyLevelApiListAllWebhooksConfig {
	return WebhooksCompanyLevelApiListAllWebhooksConfig{
		ctx:       ctx,
		companyId: companyId,
	}
}

/*
List all webhooks
Lists all webhook configurations for the company account.  To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read * Management API—Webhooks read and write
 * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return ListWebhooksResponse
*/

func (a *WebhooksCompanyLevelApi) ListAllWebhooks(r WebhooksCompanyLevelApiListAllWebhooksConfig) (ListWebhooksResponse, *_nethttp.Response, error) {
	res := &ListWebhooksResponse{}
	path := "/companies/{companyId}/webhooks"
	path = strings.Replace(path, "{"+"companyId"+"}", url.PathEscape(common.ParameterValueToString(r.companyId, "companyId")), -1)
	queryString := url.Values{}
	if r.pageNumber != nil {
		common.ParameterAddToQuery(queryString, "pageNumber", r.pageNumber, "")
	}
	if r.pageSize != nil {
		common.ParameterAddToQuery(queryString, "pageSize", r.pageSize, "")
	}
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodGet, nil, res, a.BasePath()+path+"?"+queryString.Encode(), []_context.Context{r.ctx})
	return *res, httpRes, err
}

type WebhooksCompanyLevelApiRemoveWebhookConfig struct {
	ctx       context.Context
	companyId string
	webhookId string
}

/*
RemoveWebhook Remove a webhook

Remove the configuration for the webhook identified in the path.

To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
* Management API—Webhooks read and write

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param companyId The unique identifier of the company account.
 @param webhookId Unique identifier of the webhook configuration.
 @return WebhooksCompanyLevelApiRemoveWebhookConfig
*/
func (a *WebhooksCompanyLevelApi) RemoveWebhookConfig(ctx context.Context, companyId string, webhookId string) WebhooksCompanyLevelApiRemoveWebhookConfig {
	return WebhooksCompanyLevelApiRemoveWebhookConfig{
		ctx:       ctx,
		companyId: companyId,
		webhookId: webhookId,
	}
}

/*
Remove a webhook
Remove the configuration for the webhook identified in the path.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
 * @param companyId The unique identifier of the company account.
 * @param webhookId Unique identifier of the webhook configuration.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
*/

func (a *WebhooksCompanyLevelApi) RemoveWebhook(r WebhooksCompanyLevelApiRemoveWebhookConfig) (*_nethttp.Response, error) {
	var res interface{}
	path := "/companies/{companyId}/webhooks/{webhookId}"
	path = strings.Replace(path, "{"+"companyId"+"}", url.PathEscape(common.ParameterValueToString(r.companyId, "companyId")), -1)
	path = strings.Replace(path, "{"+"webhookId"+"}", url.PathEscape(common.ParameterValueToString(r.webhookId, "webhookId")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodDelete, nil, res, a.BasePath()+path, []_context.Context{r.ctx})
	return httpRes, err
}

type WebhooksCompanyLevelApiSetUpWebhookConfig struct {
	ctx                         context.Context
	companyId                   string
	createCompanyWebhookRequest *CreateCompanyWebhookRequest
}

func (r WebhooksCompanyLevelApiSetUpWebhookConfig) CreateCompanyWebhookRequest(createCompanyWebhookRequest CreateCompanyWebhookRequest) WebhooksCompanyLevelApiSetUpWebhookConfig {
	r.createCompanyWebhookRequest = &createCompanyWebhookRequest
	return r
}

/*
SetUpWebhook Set up a webhook

Subscribe to receive webhook notifications about events related to your company account. You can add basic authentication to make sure the data is secure.

To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
* Management API—Webhooks read and write

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
 @return WebhooksCompanyLevelApiSetUpWebhookConfig
*/
func (a *WebhooksCompanyLevelApi) SetUpWebhookConfig(ctx context.Context, companyId string) WebhooksCompanyLevelApiSetUpWebhookConfig {
	return WebhooksCompanyLevelApiSetUpWebhookConfig{
		ctx:       ctx,
		companyId: companyId,
	}
}

/*
Set up a webhook
Subscribe to receive webhook notifications about events related to your company account. You can add basic authentication to make sure the data is secure.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
 * @param companyId Unique identifier of the [company account](https://docs.adyen.com/account/account-structure#company-account).
 * @param req CreateCompanyWebhookRequest - reference of CreateCompanyWebhookRequest).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return Webhook
*/

func (a *WebhooksCompanyLevelApi) SetUpWebhook(r WebhooksCompanyLevelApiSetUpWebhookConfig) (Webhook, *_nethttp.Response, error) {
	res := &Webhook{}
	path := "/companies/{companyId}/webhooks"
	path = strings.Replace(path, "{"+"companyId"+"}", url.PathEscape(common.ParameterValueToString(r.companyId, "companyId")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodPost, r.createCompanyWebhookRequest, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}

type WebhooksCompanyLevelApiTestWebhookConfig struct {
	ctx                       context.Context
	companyId                 string
	webhookId                 string
	testCompanyWebhookRequest *TestCompanyWebhookRequest
}

func (r WebhooksCompanyLevelApiTestWebhookConfig) TestCompanyWebhookRequest(testCompanyWebhookRequest TestCompanyWebhookRequest) WebhooksCompanyLevelApiTestWebhookConfig {
	r.testCompanyWebhookRequest = &testCompanyWebhookRequest
	return r
}

/*
TestWebhook Test a webhook

Sends sample notifications to test if the webhook is set up correctly.

We send sample notifications for maximum 20 of the merchant accounts that the webhook is configured for. If the webhook is configured for more than 20 merchant accounts, use the `merchantIds` array to specify a subset of the merchant accounts for which to send test notifications.

We send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.

The response describes the result of the test. The `status` field tells you if the test was successful or not. You can use the other response fields to troubleshoot unsuccessful tests.

To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
* Management API—Webhooks read and write

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param companyId The unique identifier of the company account.
 @param webhookId Unique identifier of the webhook configuration.
 @return WebhooksCompanyLevelApiTestWebhookConfig
*/
func (a *WebhooksCompanyLevelApi) TestWebhookConfig(ctx context.Context, companyId string, webhookId string) WebhooksCompanyLevelApiTestWebhookConfig {
	return WebhooksCompanyLevelApiTestWebhookConfig{
		ctx:       ctx,
		companyId: companyId,
		webhookId: webhookId,
	}
}

/*
Test a webhook
Sends sample notifications to test if the webhook is set up correctly.  We send sample notifications for maximum 20 of the merchant accounts that the webhook is configured for. If the webhook is configured for more than 20 merchant accounts, use the &#x60;merchantIds&#x60; array to specify a subset of the merchant accounts for which to send test notifications.  We send four test notifications for each event code you choose. They cover success and failure scenarios for the hard-coded currencies EUR and GBP, regardless of the currencies configured in the merchant accounts. For custom notifications, we only send the specified custom notification.  The response describes the result of the test. The &#x60;status&#x60; field tells you if the test was successful or not. You can use the other response fields to troubleshoot unsuccessful tests.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
 * @param companyId The unique identifier of the company account.
 * @param webhookId Unique identifier of the webhook configuration.
 * @param req TestCompanyWebhookRequest - reference of TestCompanyWebhookRequest).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return TestWebhookResponse
*/

func (a *WebhooksCompanyLevelApi) TestWebhook(r WebhooksCompanyLevelApiTestWebhookConfig) (TestWebhookResponse, *_nethttp.Response, error) {
	res := &TestWebhookResponse{}
	path := "/companies/{companyId}/webhooks/{webhookId}/test"
	path = strings.Replace(path, "{"+"companyId"+"}", url.PathEscape(common.ParameterValueToString(r.companyId, "companyId")), -1)
	path = strings.Replace(path, "{"+"webhookId"+"}", url.PathEscape(common.ParameterValueToString(r.webhookId, "webhookId")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodPost, r.testCompanyWebhookRequest, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}

type WebhooksCompanyLevelApiUpdateWebhookConfig struct {
	ctx                         context.Context
	companyId                   string
	webhookId                   string
	updateCompanyWebhookRequest *UpdateCompanyWebhookRequest
}

func (r WebhooksCompanyLevelApiUpdateWebhookConfig) UpdateCompanyWebhookRequest(updateCompanyWebhookRequest UpdateCompanyWebhookRequest) WebhooksCompanyLevelApiUpdateWebhookConfig {
	r.updateCompanyWebhookRequest = &updateCompanyWebhookRequest
	return r
}

/*
UpdateWebhook Update a webhook

Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.

To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
* Management API—Webhooks read and write

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param companyId The unique identifier of the company account.
 @param webhookId Unique identifier of the webhook configuration.
 @return WebhooksCompanyLevelApiUpdateWebhookConfig
*/
func (a *WebhooksCompanyLevelApi) UpdateWebhookConfig(ctx context.Context, companyId string, webhookId string) WebhooksCompanyLevelApiUpdateWebhookConfig {
	return WebhooksCompanyLevelApiUpdateWebhookConfig{
		ctx:       ctx,
		companyId: companyId,
		webhookId: webhookId,
	}
}

/*
Update a webhook
Make changes to the configuration of the webhook identified in the path. The request contains the new values you want to have in the webhook configuration. The response contains the full configuration for the webhook, which includes the new values from the request.  To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions): * Management API—Webhooks read and write
 * @param companyId The unique identifier of the company account.
 * @param webhookId Unique identifier of the webhook configuration.
 * @param req UpdateCompanyWebhookRequest - reference of UpdateCompanyWebhookRequest).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return Webhook
*/

func (a *WebhooksCompanyLevelApi) UpdateWebhook(r WebhooksCompanyLevelApiUpdateWebhookConfig) (Webhook, *_nethttp.Response, error) {
	res := &Webhook{}
	path := "/companies/{companyId}/webhooks/{webhookId}"
	path = strings.Replace(path, "{"+"companyId"+"}", url.PathEscape(common.ParameterValueToString(r.companyId, "companyId")), -1)
	path = strings.Replace(path, "{"+"webhookId"+"}", url.PathEscape(common.ParameterValueToString(r.webhookId, "webhookId")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodPatch, r.updateCompanyWebhookRequest, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}
