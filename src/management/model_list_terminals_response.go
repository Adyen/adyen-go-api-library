/*
Management API

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v6/src/common"
)

// checks if the ListTerminalsResponse type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &ListTerminalsResponse{}

// ListTerminalsResponse struct for ListTerminalsResponse
type ListTerminalsResponse struct {
	// The list of terminals.
	Data []Terminal `json:"data,omitempty"`
}

// NewListTerminalsResponse instantiates a new ListTerminalsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListTerminalsResponse() *ListTerminalsResponse {
	this := ListTerminalsResponse{}
	return &this
}

// NewListTerminalsResponseWithDefaults instantiates a new ListTerminalsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListTerminalsResponseWithDefaults() *ListTerminalsResponse {
	this := ListTerminalsResponse{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ListTerminalsResponse) GetData() []Terminal {
	if o == nil || common.IsNil(o.Data) {
		var ret []Terminal
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListTerminalsResponse) GetDataOk() ([]Terminal, bool) {
	if o == nil || common.IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ListTerminalsResponse) HasData() bool {
	if o != nil && !common.IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []Terminal and assigns it to the Data field.
func (o *ListTerminalsResponse) SetData(v []Terminal) {
	o.Data = v
}

func (o ListTerminalsResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListTerminalsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableListTerminalsResponse struct {
	value *ListTerminalsResponse
	isSet bool
}

func (v NullableListTerminalsResponse) Get() *ListTerminalsResponse {
	return v.value
}

func (v *NullableListTerminalsResponse) Set(val *ListTerminalsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListTerminalsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListTerminalsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListTerminalsResponse(val *ListTerminalsResponse) *NullableListTerminalsResponse {
	return &NullableListTerminalsResponse{value: val, isSet: true}
}

func (v NullableListTerminalsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListTerminalsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
