/*
Management API

Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```

API version: 1
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Management

import (
	"encoding/json"
)

// RequestActivationResponse struct for RequestActivationResponse
type RequestActivationResponse struct {
	// The unique identifier of the company account.
	CompanyId *string `json:"companyId,omitempty"`
	// The unique identifier of the merchant account you requested to activate.
	MerchantId *string `json:"merchantId,omitempty"`
}

// NewRequestActivationResponse instantiates a new RequestActivationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestActivationResponse() *RequestActivationResponse {
	this := RequestActivationResponse{}
	return &this
}

// NewRequestActivationResponseWithDefaults instantiates a new RequestActivationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestActivationResponseWithDefaults() *RequestActivationResponse {
	this := RequestActivationResponse{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *RequestActivationResponse) GetCompanyId() string {
	if o == nil || isNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestActivationResponse) GetCompanyIdOk() (*string, bool) {
	if o == nil || isNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *RequestActivationResponse) HasCompanyId() bool {
	if o != nil && !isNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *RequestActivationResponse) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetMerchantId returns the MerchantId field value if set, zero value otherwise.
func (o *RequestActivationResponse) GetMerchantId() string {
	if o == nil || isNil(o.MerchantId) {
		var ret string
		return ret
	}
	return *o.MerchantId
}

// GetMerchantIdOk returns a tuple with the MerchantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestActivationResponse) GetMerchantIdOk() (*string, bool) {
	if o == nil || isNil(o.MerchantId) {
		return nil, false
	}
	return o.MerchantId, true
}

// HasMerchantId returns a boolean if a field has been set.
func (o *RequestActivationResponse) HasMerchantId() bool {
	if o != nil && !isNil(o.MerchantId) {
		return true
	}

	return false
}

// SetMerchantId gets a reference to the given string and assigns it to the MerchantId field.
func (o *RequestActivationResponse) SetMerchantId(v string) {
	o.MerchantId = &v
}

func (o RequestActivationResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !isNil(o.MerchantId) {
		toSerialize["merchantId"] = o.MerchantId
	}
	return json.Marshal(toSerialize)
}

type NullableRequestActivationResponse struct {
	value *RequestActivationResponse
	isSet bool
}

func (v NullableRequestActivationResponse) Get() *RequestActivationResponse {
	return v.value
}

func (v *NullableRequestActivationResponse) Set(val *RequestActivationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestActivationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestActivationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestActivationResponse(val *RequestActivationResponse) *NullableRequestActivationResponse {
	return &NullableRequestActivationResponse{value: val, isSet: true}
}

func (v NullableRequestActivationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestActivationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


