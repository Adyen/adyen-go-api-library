/*
Management API

Configure and manage your Adyen company and merchant accounts, stores, and payment terminals. ## Authentication Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.  To access the live endpoints, you need to generate a new API key in your live Customer Area. ## Versioning  Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:  ```text https://management-test.adyen.com/v1/companies/{companyId}/webhooks ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:  ```text https://management-live.adyen.com/v1 ```

API version: 1
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package Management

import (
	"encoding/json"
)

// CreateCompanyResponse struct for CreateCompanyResponse
type CreateCompanyResponse struct {
	// Parent company ID
	CompanyId *string `json:"companyId,omitempty"`
	// Your description for the company account, maximum 300 characters
	Description *string `json:"description,omitempty"`
	// Legal Entity ID
	LegalEntityId *string `json:"legalEntityId,omitempty"`
	// Your reference for the account.
	Reference *string `json:"reference,omitempty"`
}

// NewCreateCompanyResponse instantiates a new CreateCompanyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCompanyResponse() *CreateCompanyResponse {
	this := CreateCompanyResponse{}
	return &this
}

// NewCreateCompanyResponseWithDefaults instantiates a new CreateCompanyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCompanyResponseWithDefaults() *CreateCompanyResponse {
	this := CreateCompanyResponse{}
	return &this
}

// GetCompanyId returns the CompanyId field value if set, zero value otherwise.
func (o *CreateCompanyResponse) GetCompanyId() string {
	if o == nil || isNil(o.CompanyId) {
		var ret string
		return ret
	}
	return *o.CompanyId
}

// GetCompanyIdOk returns a tuple with the CompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyResponse) GetCompanyIdOk() (*string, bool) {
	if o == nil || isNil(o.CompanyId) {
		return nil, false
	}
	return o.CompanyId, true
}

// HasCompanyId returns a boolean if a field has been set.
func (o *CreateCompanyResponse) HasCompanyId() bool {
	if o != nil && !isNil(o.CompanyId) {
		return true
	}

	return false
}

// SetCompanyId gets a reference to the given string and assigns it to the CompanyId field.
func (o *CreateCompanyResponse) SetCompanyId(v string) {
	o.CompanyId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CreateCompanyResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateCompanyResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CreateCompanyResponse) SetDescription(v string) {
	o.Description = &v
}

// GetLegalEntityId returns the LegalEntityId field value if set, zero value otherwise.
func (o *CreateCompanyResponse) GetLegalEntityId() string {
	if o == nil || isNil(o.LegalEntityId) {
		var ret string
		return ret
	}
	return *o.LegalEntityId
}

// GetLegalEntityIdOk returns a tuple with the LegalEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyResponse) GetLegalEntityIdOk() (*string, bool) {
	if o == nil || isNil(o.LegalEntityId) {
		return nil, false
	}
	return o.LegalEntityId, true
}

// HasLegalEntityId returns a boolean if a field has been set.
func (o *CreateCompanyResponse) HasLegalEntityId() bool {
	if o != nil && !isNil(o.LegalEntityId) {
		return true
	}

	return false
}

// SetLegalEntityId gets a reference to the given string and assigns it to the LegalEntityId field.
func (o *CreateCompanyResponse) SetLegalEntityId(v string) {
	o.LegalEntityId = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *CreateCompanyResponse) GetReference() string {
	if o == nil || isNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCompanyResponse) GetReferenceOk() (*string, bool) {
	if o == nil || isNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *CreateCompanyResponse) HasReference() bool {
	if o != nil && !isNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *CreateCompanyResponse) SetReference(v string) {
	o.Reference = &v
}

func (o CreateCompanyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CompanyId) {
		toSerialize["companyId"] = o.CompanyId
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.LegalEntityId) {
		toSerialize["legalEntityId"] = o.LegalEntityId
	}
	if !isNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	return json.Marshal(toSerialize)
}

type NullableCreateCompanyResponse struct {
	value *CreateCompanyResponse
	isSet bool
}

func (v NullableCreateCompanyResponse) Get() *CreateCompanyResponse {
	return v.value
}

func (v *NullableCreateCompanyResponse) Set(val *CreateCompanyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCompanyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCompanyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCompanyResponse(val *CreateCompanyResponse) *NullableCreateCompanyResponse {
	return &NullableCreateCompanyResponse{value: val, isSet: true}
}

func (v NullableCreateCompanyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCompanyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


