/*
 * Adyen Payment API
 *
 * A set of API endpoints that allow you to initiate, settle, and modify payments on the Adyen payments platform. You can use the API to accept card payments (including One-Click and 3D Secure), bank transfers, ewallets, and many other payment methods.  To learn more about the API, visit [Classic integration](https://docs.adyen.com/classic-integration).  ## Authentication To connect to the Payments API, you must use your basic authentication credentials. For this, create your web service user, as described in [How to get the WS user password](https://docs.adyen.com/user-management/how-to-get-the-web-service-ws-user-password). Then use its credentials to authenticate your request, for example:  ``` curl -U \"ws@Company.YourCompany\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Payments API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://pal-test.adyen.com/pal/servlet/Payment/v64/authorise ```
 *
 * API version: 64
 * Contact: support@adyen.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package payments
// AdditionalDataOpenInvoice struct for AdditionalDataOpenInvoice
type AdditionalDataOpenInvoice struct {
	// Holds different merchant data points like product, purchase, customer, and so on. It takes data in a Base64 encoded string.  The `merchantData` parameter needs to be added to the `openinvoicedata` signature at the end.  Since the field is optional, if it's not included it does not impact computing the merchant signature.  Applies only to Klarna.  You can contact Klarna for the format and structure of the string.
	OpeninvoicedataMerchantData string `json:"openinvoicedata.merchantData,omitempty"`
	// The number of invoice lines included in `openinvoicedata`.  There needs to be at least one line, so `numberOfLines` needs to be at least 1.
	OpeninvoicedataNumberOfLines string `json:"openinvoicedata.numberOfLines,omitempty"`
	// The three-character ISO currency code.
	OpeninvoicedataLineItemNrCurrencyCode string `json:"openinvoicedataLine[itemNr].currencyCode,omitempty"`
	// A text description of the product the invoice line refers to.
	OpeninvoicedataLineItemNrDescription string `json:"openinvoicedataLine[itemNr].description,omitempty"`
	// The price for one item in the invoice line, represented in minor units.  The due amount for the item, VAT excluded.
	OpeninvoicedataLineItemNrItemAmount string `json:"openinvoicedataLine[itemNr].itemAmount,omitempty"`
	// A unique id for this item. Required for RatePay if the description of each item is not unique.
	OpeninvoicedataLineItemNrItemId string `json:"openinvoicedataLine[itemNr].itemId,omitempty"`
	// The VAT due for one item in the invoice line, represented in minor units.
	OpeninvoicedataLineItemNrItemVatAmount string `json:"openinvoicedataLine[itemNr].itemVatAmount,omitempty"`
	// The VAT percentage for one item in the invoice line, represented in minor units.  For example, 19% VAT is specified as 1900.
	OpeninvoicedataLineItemNrItemVatPercentage string `json:"openinvoicedataLine[itemNr].itemVatPercentage,omitempty"`
	// The number of units purchased of a specific product.
	OpeninvoicedataLineItemNrNumberOfItems string `json:"openinvoicedataLine[itemNr].numberOfItems,omitempty"`
	// Required for AfterPay. The country-specific VAT category a product falls under.  Allowed values: * High * Low * None.
	OpeninvoicedataLineItemNrVatCategory string `json:"openinvoicedataLine[itemNr].vatCategory,omitempty"`
}
