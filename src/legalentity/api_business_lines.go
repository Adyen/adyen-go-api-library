/*
Legal Entity Management API

API version: 3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package legalentity

import (
	"context"
	_context "context"
	_nethttp "net/http"
	"net/url"
	"strings"

	"github.com/adyen/adyen-go-api-library/v6/src/common"
)

// BusinessLinesApi BusinessLinesApi service
type BusinessLinesApi common.Service

type BusinessLinesApiCreateBusinessLineConfig struct {
	ctx              context.Context
	businessLineInfo *BusinessLineInfo
}

func (r BusinessLinesApiCreateBusinessLineConfig) BusinessLineInfo(businessLineInfo BusinessLineInfo) BusinessLinesApiCreateBusinessLineConfig {
	r.businessLineInfo = &businessLineInfo
	return r
}

/*
CreateBusinessLine Create a business line

Creates a business line.

This resource contains information about your user's line of business, including their industry and their source of funds. Adyen uses this information to verify your users as required by payment industry regulations. Adyen informs you of the verification results through webhooks or API responses.

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @return BusinessLinesApiCreateBusinessLineConfig
*/
func (a *BusinessLinesApi) CreateBusinessLineConfig(ctx context.Context) BusinessLinesApiCreateBusinessLineConfig {
	return BusinessLinesApiCreateBusinessLineConfig{
		ctx: ctx,
	}
}

/*
Create a business line
Creates a business line.   This resource contains information about your user&#39;s line of business, including their industry and their source of funds. Adyen uses this information to verify your users as required by payment industry regulations. Adyen informs you of the verification results through webhooks or API responses.
 * @param req BusinessLineInfo - reference of BusinessLineInfo).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return BusinessLine
*/

func (a *BusinessLinesApi) CreateBusinessLine(r BusinessLinesApiCreateBusinessLineConfig) (BusinessLine, *_nethttp.Response, error) {
	res := &BusinessLine{}
	path := "/businessLines"
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodPost, r.businessLineInfo, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}

type BusinessLinesApiDeleteBusinessLineConfig struct {
	ctx context.Context
	id  string
}

/*
DeleteBusinessLine Delete a business line

Deletes a business line.

 >If you delete a business line linked to a [payment method](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api), it can affect your merchant account's ability to use the [payment method](https://docs.adyen.com/api-explorer/Management/latest/post/merchants/_merchantId_/paymentMethodSettings). The business line is removed from all linked merchant accounts.

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param id The unique identifier of the business line to be deleted.
 @return BusinessLinesApiDeleteBusinessLineConfig
*/
func (a *BusinessLinesApi) DeleteBusinessLineConfig(ctx context.Context, id string) BusinessLinesApiDeleteBusinessLineConfig {
	return BusinessLinesApiDeleteBusinessLineConfig{
		ctx: ctx,
		id:  id,
	}
}

/*
Delete a business line
Deletes a business line.   &gt;If you delete a business line linked to a [payment method](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api), it can affect your merchant account&#39;s ability to use the [payment method](https://docs.adyen.com/api-explorer/Management/latest/post/merchants/_merchantId_/paymentMethodSettings). The business line is removed from all linked merchant accounts.
 * @param id The unique identifier of the business line to be deleted.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
*/

func (a *BusinessLinesApi) DeleteBusinessLine(r BusinessLinesApiDeleteBusinessLineConfig) (*_nethttp.Response, error) {
	var res interface{}
	path := "/businessLines/{id}"
	path = strings.Replace(path, "{"+"id"+"}", url.PathEscape(common.ParameterValueToString(r.id, "id")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodDelete, nil, res, a.BasePath()+path, []_context.Context{r.ctx})
	return httpRes, err
}

type BusinessLinesApiGetBusinessLineConfig struct {
	ctx context.Context
	id  string
}

/*
GetBusinessLine Get a business line

Returns the detail of a business line.

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param id The unique identifier of the business line.
 @return BusinessLinesApiGetBusinessLineConfig
*/
func (a *BusinessLinesApi) GetBusinessLineConfig(ctx context.Context, id string) BusinessLinesApiGetBusinessLineConfig {
	return BusinessLinesApiGetBusinessLineConfig{
		ctx: ctx,
		id:  id,
	}
}

/*
Get a business line
Returns the detail of a business line.
 * @param id The unique identifier of the business line.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return BusinessLine
*/

func (a *BusinessLinesApi) GetBusinessLine(r BusinessLinesApiGetBusinessLineConfig) (BusinessLine, *_nethttp.Response, error) {
	res := &BusinessLine{}
	path := "/businessLines/{id}"
	path = strings.Replace(path, "{"+"id"+"}", url.PathEscape(common.ParameterValueToString(r.id, "id")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodGet, nil, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}

type BusinessLinesApiUpdateBusinessLineConfig struct {
	ctx                    context.Context
	id                     string
	businessLineInfoUpdate *BusinessLineInfoUpdate
}

func (r BusinessLinesApiUpdateBusinessLineConfig) BusinessLineInfoUpdate(businessLineInfoUpdate BusinessLineInfoUpdate) BusinessLinesApiUpdateBusinessLineConfig {
	r.businessLineInfoUpdate = &businessLineInfoUpdate
	return r
}

/*
UpdateBusinessLine Update a business line

Updates a business line.

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param id The unique identifier of the business line.
 @return BusinessLinesApiUpdateBusinessLineConfig
*/
func (a *BusinessLinesApi) UpdateBusinessLineConfig(ctx context.Context, id string) BusinessLinesApiUpdateBusinessLineConfig {
	return BusinessLinesApiUpdateBusinessLineConfig{
		ctx: ctx,
		id:  id,
	}
}

/*
Update a business line
Updates a business line.
 * @param id The unique identifier of the business line.
 * @param req BusinessLineInfoUpdate - reference of BusinessLineInfoUpdate).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return BusinessLine
*/

func (a *BusinessLinesApi) UpdateBusinessLine(r BusinessLinesApiUpdateBusinessLineConfig) (BusinessLine, *_nethttp.Response, error) {
	res := &BusinessLine{}
	path := "/businessLines/{id}"
	path = strings.Replace(path, "{"+"id"+"}", url.PathEscape(common.ParameterValueToString(r.id, "id")), -1)
	httpRes, err := common.CreateHTTPRequest(a.Client, _nethttp.MethodPatch, r.businessLineInfoUpdate, res, a.BasePath()+path, []_context.Context{r.ctx})
	return *res, httpRes, err
}
