/*
Legal Entity Management API

The Legal Entity Management API enables you to manage legal entities that contain information required for verification.  ## Authentication To connect to the Legal Entity Management API, you must use the basic authentication credentials of your web service user. If you don't have one, contact the [Adyen Support Team](https://www.adyen.help/hc/en-us/requests/new). Use the web service user credentials to authenticate your request, for example:  ``` curl -U \"ws12345@Scope.BalancePlatform_YourBalancePlatform\":\"YourWsPassword\" \\ -H \"Content-Type: application/json\" \\ ... ``` Note that when going live, you need to generate new web service user credentials to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning The Legal Entity Management API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://kyc-test.adyen.com/lem/v2/legalEntities ``` ## Going live When going live, your Adyen contact will provide your API credential for the live environment. You can then use the username and password to send requests to `https://kyc-live.adyen.com/lem/v2`.  

API version: 2
Contact: developer-experience@adyen.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package legalentity

import (
	"encoding/json"
)

// checks if the BusinessLine type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BusinessLine{}

// BusinessLine struct for BusinessLine
type BusinessLine struct {
	// The capability for which you are creating the business line. For example, **receivePayments**.
	Capability string `json:"capability"`
	// The unique identifier of the business line.
	Id string `json:"id"`
	// A code that represents the industry of the legal entity. For example, **4431A** for computer software stores.
	IndustryCode string `json:"industryCode"`
	// Unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) that owns the business line.
	LegalEntityId string `json:"legalEntityId"`
	// A list of channels where goods or services are sold. You cannot combine point of sale and ecommerce in one business line.  Possible values and combinations:  - For point of sale: **pos** and **posMoto**  - For ecommerce: **eCommerce** and **ecomMoto**  - For Pay by Link: **payByLink**  Required only in combination with the `capability` to **receivePayments** or **receiveFromPlatformPayments**.
	SalesChannels []string `json:"salesChannels,omitempty"`
	SourceOfFunds *SourceOfFunds `json:"sourceOfFunds,omitempty"`
	// List of website URLs where your user's goods or services are sold. When this is required for a capability but your user does not have an online presence, provide the reason in the `webDataExemption` object.
	WebData []WebData `json:"webData,omitempty"`
	WebDataExemption *WebDataExemption `json:"webDataExemption,omitempty"`
}

// NewBusinessLine instantiates a new BusinessLine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBusinessLine(capability string, id string, industryCode string, legalEntityId string) *BusinessLine {
	this := BusinessLine{}
	this.Capability = capability
	this.Id = id
	this.IndustryCode = industryCode
	this.LegalEntityId = legalEntityId
	return &this
}

// NewBusinessLineWithDefaults instantiates a new BusinessLine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBusinessLineWithDefaults() *BusinessLine {
	this := BusinessLine{}
	return &this
}

// GetCapability returns the Capability field value
func (o *BusinessLine) GetCapability() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetCapabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capability, true
}

// SetCapability sets field value
func (o *BusinessLine) SetCapability(v string) {
	o.Capability = v
}

// GetId returns the Id field value
func (o *BusinessLine) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BusinessLine) SetId(v string) {
	o.Id = v
}

// GetIndustryCode returns the IndustryCode field value
func (o *BusinessLine) GetIndustryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IndustryCode
}

// GetIndustryCodeOk returns a tuple with the IndustryCode field value
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetIndustryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IndustryCode, true
}

// SetIndustryCode sets field value
func (o *BusinessLine) SetIndustryCode(v string) {
	o.IndustryCode = v
}

// GetLegalEntityId returns the LegalEntityId field value
func (o *BusinessLine) GetLegalEntityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LegalEntityId
}

// GetLegalEntityIdOk returns a tuple with the LegalEntityId field value
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetLegalEntityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LegalEntityId, true
}

// SetLegalEntityId sets field value
func (o *BusinessLine) SetLegalEntityId(v string) {
	o.LegalEntityId = v
}

// GetSalesChannels returns the SalesChannels field value if set, zero value otherwise.
func (o *BusinessLine) GetSalesChannels() []string {
	if o == nil || IsNil(o.SalesChannels) {
		var ret []string
		return ret
	}
	return o.SalesChannels
}

// GetSalesChannelsOk returns a tuple with the SalesChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetSalesChannelsOk() ([]string, bool) {
	if o == nil || IsNil(o.SalesChannels) {
		return nil, false
	}
	return o.SalesChannels, true
}

// HasSalesChannels returns a boolean if a field has been set.
func (o *BusinessLine) HasSalesChannels() bool {
	if o != nil && !IsNil(o.SalesChannels) {
		return true
	}

	return false
}

// SetSalesChannels gets a reference to the given []string and assigns it to the SalesChannels field.
func (o *BusinessLine) SetSalesChannels(v []string) {
	o.SalesChannels = v
}

// GetSourceOfFunds returns the SourceOfFunds field value if set, zero value otherwise.
func (o *BusinessLine) GetSourceOfFunds() SourceOfFunds {
	if o == nil || IsNil(o.SourceOfFunds) {
		var ret SourceOfFunds
		return ret
	}
	return *o.SourceOfFunds
}

// GetSourceOfFundsOk returns a tuple with the SourceOfFunds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetSourceOfFundsOk() (*SourceOfFunds, bool) {
	if o == nil || IsNil(o.SourceOfFunds) {
		return nil, false
	}
	return o.SourceOfFunds, true
}

// HasSourceOfFunds returns a boolean if a field has been set.
func (o *BusinessLine) HasSourceOfFunds() bool {
	if o != nil && !IsNil(o.SourceOfFunds) {
		return true
	}

	return false
}

// SetSourceOfFunds gets a reference to the given SourceOfFunds and assigns it to the SourceOfFunds field.
func (o *BusinessLine) SetSourceOfFunds(v SourceOfFunds) {
	o.SourceOfFunds = &v
}

// GetWebData returns the WebData field value if set, zero value otherwise.
func (o *BusinessLine) GetWebData() []WebData {
	if o == nil || IsNil(o.WebData) {
		var ret []WebData
		return ret
	}
	return o.WebData
}

// GetWebDataOk returns a tuple with the WebData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetWebDataOk() ([]WebData, bool) {
	if o == nil || IsNil(o.WebData) {
		return nil, false
	}
	return o.WebData, true
}

// HasWebData returns a boolean if a field has been set.
func (o *BusinessLine) HasWebData() bool {
	if o != nil && !IsNil(o.WebData) {
		return true
	}

	return false
}

// SetWebData gets a reference to the given []WebData and assigns it to the WebData field.
func (o *BusinessLine) SetWebData(v []WebData) {
	o.WebData = v
}

// GetWebDataExemption returns the WebDataExemption field value if set, zero value otherwise.
func (o *BusinessLine) GetWebDataExemption() WebDataExemption {
	if o == nil || IsNil(o.WebDataExemption) {
		var ret WebDataExemption
		return ret
	}
	return *o.WebDataExemption
}

// GetWebDataExemptionOk returns a tuple with the WebDataExemption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BusinessLine) GetWebDataExemptionOk() (*WebDataExemption, bool) {
	if o == nil || IsNil(o.WebDataExemption) {
		return nil, false
	}
	return o.WebDataExemption, true
}

// HasWebDataExemption returns a boolean if a field has been set.
func (o *BusinessLine) HasWebDataExemption() bool {
	if o != nil && !IsNil(o.WebDataExemption) {
		return true
	}

	return false
}

// SetWebDataExemption gets a reference to the given WebDataExemption and assigns it to the WebDataExemption field.
func (o *BusinessLine) SetWebDataExemption(v WebDataExemption) {
	o.WebDataExemption = &v
}

func (o BusinessLine) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BusinessLine) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["capability"] = o.Capability
	// skip: id is readOnly
	toSerialize["industryCode"] = o.IndustryCode
	toSerialize["legalEntityId"] = o.LegalEntityId
	if !IsNil(o.SalesChannels) {
		toSerialize["salesChannels"] = o.SalesChannels
	}
	if !IsNil(o.SourceOfFunds) {
		toSerialize["sourceOfFunds"] = o.SourceOfFunds
	}
	if !IsNil(o.WebData) {
		toSerialize["webData"] = o.WebData
	}
	if !IsNil(o.WebDataExemption) {
		toSerialize["webDataExemption"] = o.WebDataExemption
	}
	return toSerialize, nil
}

type NullableBusinessLine struct {
	value *BusinessLine
	isSet bool
}

func (v NullableBusinessLine) Get() *BusinessLine {
	return v.value
}

func (v *NullableBusinessLine) Set(val *BusinessLine) {
	v.value = val
	v.isSet = true
}

func (v NullableBusinessLine) IsSet() bool {
	return v.isSet
}

func (v *NullableBusinessLine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBusinessLine(val *BusinessLine) *NullableBusinessLine {
	return &NullableBusinessLine{value: val, isSet: true}
}

func (v NullableBusinessLine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBusinessLine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


