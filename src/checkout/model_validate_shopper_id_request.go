/*
Adyen Checkout API

API version: 71
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package checkout

import (
	"encoding/json"
    "github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the ValidateShopperIdRequest type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &ValidateShopperIdRequest{}

// ValidateShopperIdRequest struct for ValidateShopperIdRequest
type ValidateShopperIdRequest struct {
	// The merchant account identifier, with which you want to process the transaction.
	MerchantAccount string `json:"merchantAccount"`
	PaymentMethod ShopperIdPaymentMethod `json:"paymentMethod"`
	ShopperEmail *string `json:"shopperEmail,omitempty"`
	ShopperIP *string `json:"shopperIP,omitempty"`
	ShopperReference *string `json:"shopperReference,omitempty"`
}

// NewValidateShopperIdRequest instantiates a new ValidateShopperIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateShopperIdRequest(merchantAccount string, paymentMethod ShopperIdPaymentMethod) *ValidateShopperIdRequest {
	this := ValidateShopperIdRequest{}
	this.MerchantAccount = merchantAccount
	this.PaymentMethod = paymentMethod
	return &this
}

// NewValidateShopperIdRequestWithDefaults instantiates a new ValidateShopperIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateShopperIdRequestWithDefaults() *ValidateShopperIdRequest {
	this := ValidateShopperIdRequest{}
	return &this
}

// GetMerchantAccount returns the MerchantAccount field value
func (o *ValidateShopperIdRequest) GetMerchantAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantAccount
}

// GetMerchantAccountOk returns a tuple with the MerchantAccount field value
// and a boolean to check if the value has been set.
func (o *ValidateShopperIdRequest) GetMerchantAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantAccount, true
}

// SetMerchantAccount sets field value
func (o *ValidateShopperIdRequest) SetMerchantAccount(v string) {
	o.MerchantAccount = v
}

// GetPaymentMethod returns the PaymentMethod field value
func (o *ValidateShopperIdRequest) GetPaymentMethod() ShopperIdPaymentMethod {
	if o == nil {
		var ret ShopperIdPaymentMethod
		return ret
	}

	return o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value
// and a boolean to check if the value has been set.
func (o *ValidateShopperIdRequest) GetPaymentMethodOk() (*ShopperIdPaymentMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentMethod, true
}

// SetPaymentMethod sets field value
func (o *ValidateShopperIdRequest) SetPaymentMethod(v ShopperIdPaymentMethod) {
	o.PaymentMethod = v
}

// GetShopperEmail returns the ShopperEmail field value if set, zero value otherwise.
func (o *ValidateShopperIdRequest) GetShopperEmail() string {
	if o == nil || common.IsNil(o.ShopperEmail) {
		var ret string
		return ret
	}
	return *o.ShopperEmail
}

// GetShopperEmailOk returns a tuple with the ShopperEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateShopperIdRequest) GetShopperEmailOk() (*string, bool) {
	if o == nil || common.IsNil(o.ShopperEmail) {
		return nil, false
	}
	return o.ShopperEmail, true
}

// HasShopperEmail returns a boolean if a field has been set.
func (o *ValidateShopperIdRequest) HasShopperEmail() bool {
	if o != nil && !common.IsNil(o.ShopperEmail) {
		return true
	}

	return false
}

// SetShopperEmail gets a reference to the given string and assigns it to the ShopperEmail field.
func (o *ValidateShopperIdRequest) SetShopperEmail(v string) {
	o.ShopperEmail = &v
}

// GetShopperIP returns the ShopperIP field value if set, zero value otherwise.
func (o *ValidateShopperIdRequest) GetShopperIP() string {
	if o == nil || common.IsNil(o.ShopperIP) {
		var ret string
		return ret
	}
	return *o.ShopperIP
}

// GetShopperIPOk returns a tuple with the ShopperIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateShopperIdRequest) GetShopperIPOk() (*string, bool) {
	if o == nil || common.IsNil(o.ShopperIP) {
		return nil, false
	}
	return o.ShopperIP, true
}

// HasShopperIP returns a boolean if a field has been set.
func (o *ValidateShopperIdRequest) HasShopperIP() bool {
	if o != nil && !common.IsNil(o.ShopperIP) {
		return true
	}

	return false
}

// SetShopperIP gets a reference to the given string and assigns it to the ShopperIP field.
func (o *ValidateShopperIdRequest) SetShopperIP(v string) {
	o.ShopperIP = &v
}

// GetShopperReference returns the ShopperReference field value if set, zero value otherwise.
func (o *ValidateShopperIdRequest) GetShopperReference() string {
	if o == nil || common.IsNil(o.ShopperReference) {
		var ret string
		return ret
	}
	return *o.ShopperReference
}

// GetShopperReferenceOk returns a tuple with the ShopperReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateShopperIdRequest) GetShopperReferenceOk() (*string, bool) {
	if o == nil || common.IsNil(o.ShopperReference) {
		return nil, false
	}
	return o.ShopperReference, true
}

// HasShopperReference returns a boolean if a field has been set.
func (o *ValidateShopperIdRequest) HasShopperReference() bool {
	if o != nil && !common.IsNil(o.ShopperReference) {
		return true
	}

	return false
}

// SetShopperReference gets a reference to the given string and assigns it to the ShopperReference field.
func (o *ValidateShopperIdRequest) SetShopperReference(v string) {
	o.ShopperReference = &v
}

func (o ValidateShopperIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateShopperIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["merchantAccount"] = o.MerchantAccount
	toSerialize["paymentMethod"] = o.PaymentMethod
	if !common.IsNil(o.ShopperEmail) {
		toSerialize["shopperEmail"] = o.ShopperEmail
	}
	if !common.IsNil(o.ShopperIP) {
		toSerialize["shopperIP"] = o.ShopperIP
	}
	if !common.IsNil(o.ShopperReference) {
		toSerialize["shopperReference"] = o.ShopperReference
	}
	return toSerialize, nil
}

type NullableValidateShopperIdRequest struct {
	value *ValidateShopperIdRequest
	isSet bool
}

func (v NullableValidateShopperIdRequest) Get() *ValidateShopperIdRequest {
	return v.value
}

func (v *NullableValidateShopperIdRequest) Set(val *ValidateShopperIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateShopperIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateShopperIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateShopperIdRequest(val *ValidateShopperIdRequest) *NullableValidateShopperIdRequest {
	return &NullableValidateShopperIdRequest{value: val, isSet: true}
}

func (v NullableValidateShopperIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateShopperIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



