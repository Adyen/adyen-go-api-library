/*
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v69/payments ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=69) to find out what changed in this version!
 *
 * API version: 69
 * Contact: developer-experience@adyen.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package checkout

import (
	_context "context"
    _nethttp "net/http"
)


/*
GetPaymentLink Get a payment link
Retrieves the payment link details using the payment link &#x60;id&#x60;.
 * @param linkId Unique identifier of the payment link.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentLinkResponse
*/
func (a Checkout) GetPaymentLink(linkId string, ctxs ..._context.Context) (PaymentLinkResponse, *_nethttp.Response, error) {
    res := &PaymentLinkResponse{}
    httpRes, err := a.Client.MakeHTTPGetRequest(res, a.BasePath() + "/paymentLinks/" + linkId, ctxs...)
    return *res, httpRes, err
}


/*
UpdatePaymentLink Update the status of a payment link
Updates the status of a payment link. Use this endpoint to [force the expiry of a payment link](https://docs.adyen.com/online-payments/pay-by-link#update-payment-link-status).
 * @param linkId Unique identifier of the payment link.
 * @param req UpdatePaymentLinkRequest - reference of UpdatePaymentLinkRequest). 
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentLinkResponse
*/
func (a Checkout) UpdatePaymentLink(linkId string, req *UpdatePaymentLinkRequest, ctxs ..._context.Context) (PaymentLinkResponse, *_nethttp.Response, error) {
    res := &PaymentLinkResponse{}
    httpRes, err := a.Client.MakeHTTPPatchRequest(req, res, a.BasePath() + "/paymentLinks/" + linkId, ctxs...)
    return *res, httpRes, err
}


/*
PaymentLinks Create a payment link
Creates a payment link to our hosted payment form where shoppers can pay. The list of payment methods presented to the shopper depends on the &#x60;currency&#x60; and &#x60;country&#x60; parameters sent in the request.  For more information, refer to [Pay by Link documentation](https://docs.adyen.com/online-payments/pay-by-link#create-payment-links-through-api).
 * @param req CreatePaymentLinkRequest - reference of CreatePaymentLinkRequest). 
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentLinkResponse
*/
func (a Checkout) PaymentLinks(req *CreatePaymentLinkRequest, ctxs ..._context.Context) (PaymentLinkResponse, *_nethttp.Response, error) {
    res := &PaymentLinkResponse{}
    httpRes, err := a.Client.MakeHTTPPostRequest(req, res, a.BasePath() + "/paymentLinks", ctxs...)
    return *res, httpRes, err
}

