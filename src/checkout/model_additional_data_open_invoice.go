/*
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including One-Click and 3D Secure), mobile wallets, and local payment methods (e.g. iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/checkout).  ## Authentication Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v51/payments ```
 *
 * API version: 51
 * Contact: support@adyen.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package checkout
// AdditionalDataOpenInvoice struct for AdditionalDataOpenInvoice
type AdditionalDataOpenInvoice struct {
	// The number of invoice lines included in `openinvoicedata`.  There needs to be at least one line, so `numberOfLines` needs to be at least 1.
	OpeninvoicedataNumberOfLines int32 `json:"openinvoicedata.numberOfLines,omitempty"`
	// Holds different merchant data points like product, purchase, customer, and so on. It takes data in a Base64 encoded string.  The `merchantData` parameter needs to be added to the `openinvoicedata` signature at the end.  Since the field is optional, if it's not included it does not impact computing the merchant signature.  Applies only to Klarna.  You can contact Klarna for the format and structure of the string.
	OpeninvoicedataMerchantData string `json:"openinvoicedata.merchantData,omitempty"`
	// The three-character ISO currency code.
	OpeninvoicedataLineItemNrCurrencyCode string `json:"openinvoicedata.line[itemNr].currencyCode,omitempty"`
	// A text description of the product the invoice line refers to.
	OpeninvoicedataLineItemNrDescription string `json:"openinvoicedata.line[itemNr].description,omitempty"`
	// The price for one item in the invoice line, represented in minor units.  The due amount for the item, VAT excluded.
	OpeninvoicedataLineItemNrItemAmount int32 `json:"openinvoicedata.line[itemNr].itemAmount,omitempty"`
	// The VAT due for one item in the invoice line, represented in minor units.
	OpeninvoicedataLineItemNrItemVatAmount int32 `json:"openinvoicedata.line[itemNr].itemVatAmount,omitempty"`
	// The VAT percentage for one item in the invoice line, represented in minor units.  For example, 19% VAT is specified as 1900.
	OpeninvoicedataLineItemNrItemVatPercentage int32 `json:"openinvoicedata.line[itemNr].itemVatPercentage,omitempty"`
	// A unique id for this item. Required for RatePay if the description of each item is not unique.
	OpeninvoicedataLineItemNrItemId string `json:"openinvoicedata.line[itemNr].itemId,omitempty"`
	// The number of units purchased of a specific product.
	OpeninvoicedataLineItemNrNumberOfItems int32 `json:"openinvoicedata.line[itemNr].numberOfItems,omitempty"`
	// Required for AfterPay. The country-specific VAT category a product falls under.  Allowed values: * High * Low * None.
	OpeninvoicedataLineItemNrVatCategory string `json:"openinvoicedata.line[itemNr].vatCategory,omitempty"`
}
