/*
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/checkout).  ## Authentication Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/user-management/how-to-get-the-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Checkout API supports versioning of its endpoints through a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v65/payments ```
 *
 * API version: 65
 * Contact: support@adyen.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package checkout
// SubscriptionDetails struct for SubscriptionDetails
type SubscriptionDetails struct {
	// The billing amount of the recurring transactions.
	Amount string `json:"amount"`
	// The limitation rule of the billing amount.  Possible values:  * `max`: The transaction amount can not exceed the `amount`.  * `exact`: The transaction amount should be the same as the `amount`.
	AmountRule string `json:"amountRule,omitempty"`
	// The rule to specify the period, within which the recurring debit can happen, relative to the mandate recurring date.  Possible values:  * `on`: On a specific date. * `before`:  Before and on a specific date. * `after`: On and after a specific date.
	BillingAttemptsRule string `json:"billingAttemptsRule,omitempty"`
	// The number of the day, on which the recurring debit can happen. Should be within the same calendar month as the mandate recurring date.  Possible values: 1-31 based on the `frequency`.
	BillingDay string `json:"billingDay,omitempty"`
	// End date of the billing plan, in YYYY-MM-DD format.
	EndAt string `json:"endAt"`
	// The frequency with which a shopper should be charged.  Possible values: daily, weekly, biWeekly, monthly, quarterly, halfYearly, yearly.
	Frequency string `json:"frequency"`
	// The message shown by UPI to the shopper on the approval screen.
	Remarks string `json:"remarks,omitempty"`
	// Start date of the billing plan, in YYYY-MM-DD format. By default, the transaction date.
	StartAt string `json:"startAt,omitempty"`
}
