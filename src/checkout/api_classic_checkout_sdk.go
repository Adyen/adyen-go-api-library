/*
Adyen Checkout API

API version: 70
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package checkout

import (
	"context"
	_nethttp "net/http"
	"net/url"

	"github.com/adyen/adyen-go-api-library/v7/src/common"
)

// ClassicCheckoutSDKApi ClassicCheckoutSDKApi service
type ClassicCheckoutSDKApi common.Service

type ClassicCheckoutSDKApiPaymentSessionConfig struct {
	ctx                 context.Context
	idempotencyKey      *string
	paymentSetupRequest *PaymentSetupRequest
}

// A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
func (r ClassicCheckoutSDKApiPaymentSessionConfig) IdempotencyKey(idempotencyKey string) ClassicCheckoutSDKApiPaymentSessionConfig {
	r.idempotencyKey = &idempotencyKey
	return r
}

func (r ClassicCheckoutSDKApiPaymentSessionConfig) PaymentSetupRequest(paymentSetupRequest PaymentSetupRequest) ClassicCheckoutSDKApiPaymentSessionConfig {
	r.paymentSetupRequest = &paymentSetupRequest
	return r
}

/*
PaymentSession Create a payment session

Provides the data object that can be used to start the Checkout SDK. To set up the payment, pass its amount, currency, and other required parameters. We use this to optimise the payment flow and perform better risk assessment of the transaction.

For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @return ClassicCheckoutSDKApiPaymentSessionConfig

Deprecated
*/
func (a *ClassicCheckoutSDKApi) PaymentSessionConfig(ctx context.Context) ClassicCheckoutSDKApiPaymentSessionConfig {
	return ClassicCheckoutSDKApiPaymentSessionConfig{
		ctx: ctx,
	}
}

/*
Create a payment session
Provides the data object that can be used to start the Checkout SDK. To set up the payment, pass its amount, currency, and other required parameters. We use this to optimise the payment flow and perform better risk assessment of the transaction.  For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).
 * @param req PaymentSetupRequest - reference of PaymentSetupRequest).
 * @param ctxs ...context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentSetupResponse
*/

func (a *ClassicCheckoutSDKApi) PaymentSession(r ClassicCheckoutSDKApiPaymentSessionConfig) (PaymentSetupResponse, *_nethttp.Response, error) {
	res := &PaymentSetupResponse{}
	path := "/paymentSession"
	queryParams := url.Values{}
	headerParams := make(map[string]string)
	if r.idempotencyKey != nil {
		common.ParameterAddToHeaderOrQuery(headerParams, "Idempotency-Key", r.idempotencyKey, "")
	}
	httpRes, err := common.SendAPIRequest(
		r.ctx,
		a.Client,
		r.paymentSetupRequest,
		res,
		_nethttp.MethodPost,
		a.BasePath()+path,
		queryParams,
		headerParams,
	)

	return *res, httpRes, err
}

type ClassicCheckoutSDKApiVerifyPaymentResultConfig struct {
	ctx                        context.Context
	idempotencyKey             *string
	paymentVerificationRequest *PaymentVerificationRequest
}

// A unique identifier for the message with a maximum of 64 characters (we recommend a UUID).
func (r ClassicCheckoutSDKApiVerifyPaymentResultConfig) IdempotencyKey(idempotencyKey string) ClassicCheckoutSDKApiVerifyPaymentResultConfig {
	r.idempotencyKey = &idempotencyKey
	return r
}

func (r ClassicCheckoutSDKApiVerifyPaymentResultConfig) PaymentVerificationRequest(paymentVerificationRequest PaymentVerificationRequest) ClassicCheckoutSDKApiVerifyPaymentResultConfig {
	r.paymentVerificationRequest = &paymentVerificationRequest
	return r
}

/*
VerifyPaymentResult Verify a payment result

Verifies the payment result using the payload returned from the Checkout SDK.

For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @return ClassicCheckoutSDKApiVerifyPaymentResultConfig

Deprecated
*/
func (a *ClassicCheckoutSDKApi) VerifyPaymentResultConfig(ctx context.Context) ClassicCheckoutSDKApiVerifyPaymentResultConfig {
	return ClassicCheckoutSDKApiVerifyPaymentResultConfig{
		ctx: ctx,
	}
}

/*
Verify a payment result
Verifies the payment result using the payload returned from the Checkout SDK.  For more information, refer to [How it works](https://docs.adyen.com/online-payments#howitworks).
 * @param req PaymentVerificationRequest - reference of PaymentVerificationRequest).
 * @param ctxs ...context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentVerificationResponse
*/

func (a *ClassicCheckoutSDKApi) VerifyPaymentResult(r ClassicCheckoutSDKApiVerifyPaymentResultConfig) (PaymentVerificationResponse, *_nethttp.Response, error) {
	res := &PaymentVerificationResponse{}
	path := "/payments/result"
	queryParams := url.Values{}
	headerParams := make(map[string]string)
	if r.idempotencyKey != nil {
		common.ParameterAddToHeaderOrQuery(headerParams, "Idempotency-Key", r.idempotencyKey, "")
	}
	httpRes, err := common.SendAPIRequest(
		r.ctx,
		a.Client,
		r.paymentVerificationRequest,
		res,
		_nethttp.MethodPost,
		a.BasePath()+path,
		queryParams,
		headerParams,
	)

	return *res, httpRes, err
}
