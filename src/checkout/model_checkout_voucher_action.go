/*
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [online payments documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to Checkout API must be signed with an API key. For this, [get your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) from your Customer Area, and set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: YOUR_API_KEY\" \\ ... ``` ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v69/payments ```  ## Going live  To access the live endpoints, you need an API key from your live Customer Area.  The live endpoint URLs contain a prefix which is unique to your company account, for example: ``` https://{PREFIX}-checkout-live.adyenpayments.com/checkout/v69/payments ```  Get your `{PREFIX}` from your live Customer Area under **Developers** > **API URLs** > **Prefix**.  When preparing to do live transactions with Checkout API, follow the [go-live checklist](https://docs.adyen.com/online-payments/go-live-checklist) to make sure you've got all the required configuration in place.  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=69) to find out what changed in this version!
 *
 * API version: 69
 * Contact: developer-experience@adyen.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package checkout

// CheckoutVoucherAction struct for CheckoutVoucherAction
type CheckoutVoucherAction struct {
	// The voucher alternative reference code.
	AlternativeReference string `json:"alternativeReference,omitempty"`
	// A collection institution number (store number) for Econtext Pay-Easy ATM.
	CollectionInstitutionNumber string `json:"collectionInstitutionNumber,omitempty"`
	// The URL to download the voucher.
	DownloadUrl string `json:"downloadUrl,omitempty"`
	// An entity number of Multibanco.
	Entity string `json:"entity,omitempty"`
	// The date time of the voucher expiry.
	ExpiresAt     string  `json:"expiresAt,omitempty"`
	InitialAmount *Amount `json:"initialAmount,omitempty"`
	// The URL to the detailed instructions to make payment using the voucher.
	InstructionsUrl string `json:"instructionsUrl,omitempty"`
	// The issuer of the voucher.
	Issuer string `json:"issuer,omitempty"`
	// The shopper telephone number (partially masked).
	MaskedTelephoneNumber string `json:"maskedTelephoneNumber,omitempty"`
	// The merchant name.
	MerchantName string `json:"merchantName,omitempty"`
	// The merchant reference.
	MerchantReference string `json:"merchantReference,omitempty"`
	// A value that must be submitted to the `/payments/details` endpoint to verify this payment.
	PaymentData string `json:"paymentData,omitempty"`
	// Specifies the payment method.
	PaymentMethodType string `json:"paymentMethodType,omitempty"`
	// The voucher reference code.
	Reference string `json:"reference,omitempty"`
	// The shopper email.
	ShopperEmail string `json:"shopperEmail,omitempty"`
	// The shopper name.
	ShopperName string  `json:"shopperName,omitempty"`
	Surcharge   *Amount `json:"surcharge,omitempty"`
	TotalAmount *Amount `json:"totalAmount,omitempty"`
	// **voucher**
	Type string `json:"type"`
	// Specifies the URL to redirect to.
	Url string `json:"url,omitempty"`
}
