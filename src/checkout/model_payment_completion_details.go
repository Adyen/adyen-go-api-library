/*
 * Adyen Checkout API
 *
 * Adyen Checkout API provides a simple and flexible way to initiate and authorise online payments. You can use the same integration for payments made with cards (including 3D Secure), mobile wallets, and local payment methods (for example, iDEAL and Sofort).  This API reference provides information on available endpoints and how to interact with them. To learn more about the API, visit [Checkout documentation](https://docs.adyen.com/online-payments).  ## Authentication Each request to the Checkout API must be signed with an API key. For this, obtain an API Key from your Customer Area, as described in [How to get the API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key). Then set this key to the `X-API-Key` header value, for example:  ``` curl -H \"Content-Type: application/json\" \\ -H \"X-API-Key: Your_Checkout_API_key\" \\ ... ``` Note that when going live, you need to generate a new API Key to access the [live endpoints](https://docs.adyen.com/development-resources/live-endpoints).  ## Versioning Checkout API supports [versioning](https://docs.adyen.com/development-resources/versioning) using a version suffix in the endpoint URL. This suffix has the following format: \"vXX\", where XX is the version number.  For example: ``` https://checkout-test.adyen.com/v69/payments ```  ## Release notes Have a look at the [release notes](https://docs.adyen.com/online-payments/release-notes?integration_type=api&version=69) to find out what changed in this version!
 *
 * API version: 69
 * Contact: developer-experience@adyen.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package checkout
// PaymentCompletionDetails struct for PaymentCompletionDetails
type PaymentCompletionDetails struct {
	// A payment session identifier returned by the card issuer.
	MD string `json:"MD,omitempty"`
	// (3D) Payment Authentication Request data for the card issuer.
	PaReq string `json:"PaReq,omitempty"`
	// (3D) Payment Authentication Response data by the card issuer.
	PaRes string `json:"PaRes,omitempty"`
	// PayPal-generated token for recurring payments.
	BillingToken string `json:"billingToken,omitempty"`
	// The SMS verification code collected from the shopper.
	CupsecureplusSmscode string `json:"cupsecureplus.smscode,omitempty"`
	// PayPal-generated third party access token.
	FacilitatorAccessToken string `json:"facilitatorAccessToken,omitempty"`
	// A random number sent to the mobile phone number of the shopper to verify the payment.
	OneTimePasscode string `json:"oneTimePasscode,omitempty"`
	// PayPal-assigned ID for the order.
	OrderID string `json:"orderID,omitempty"`
	// PayPal-assigned ID for the payer (shopper).
	PayerID string `json:"payerID,omitempty"`
	// Payload appended to the `returnURL` as a result of the redirect.
	Payload string `json:"payload,omitempty"`
	// PayPal-generated ID for the payment.
	PaymentID string `json:"paymentID,omitempty"`
	// Value passed from the WeChat MiniProgram `wx.requestPayment` **complete** callback. Possible values: any value starting with `requestPayment:`.
	PaymentStatus string `json:"paymentStatus,omitempty"`
	// The result of the redirect as appended to the `returnURL`.
	RedirectResult string `json:"redirectResult,omitempty"`
	// Base64-encoded string returned by the Component after the challenge flow. It contains the following parameters: `transStatus`, `authorisationToken`.
	ThreeDSResult string `json:"threeDSResult,omitempty"`
	// Base64-encoded string returned by the Component after the challenge flow. It contains the following parameter: `transStatus`.
	Threeds2ChallengeResult string `json:"threeds2.challengeResult,omitempty"`
	// Base64-encoded string returned by the Component after the challenge flow. It contains the following parameter: `threeDSCompInd`.
	Threeds2Fingerprint string `json:"threeds2.fingerprint,omitempty"`
}
