/*
Tokenization webhooks

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tokenizationwebhook

import (
	"encoding/json"
    "github.com/adyen/adyen-go-api-library/v21/src/common"
	"time"
)

// checks if the TokenizationDisabledDetailsNotificationRequest type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &TokenizationDisabledDetailsNotificationRequest{}

// TokenizationDisabledDetailsNotificationRequest struct for TokenizationDisabledDetailsNotificationRequest
type TokenizationDisabledDetailsNotificationRequest struct {
	// The date and time when the event happened, in ISO 8601 extended format.
	CreatedAt time.Time `json:"createdAt"`
	Data RecurringToken `json:"data"`
	// The environment from which the webhook originated.  Possible values: **test**, **live**.
	Environment string `json:"environment"`
	// The PSP reference of the event that triggered the webhook.
	EventId string `json:"eventId"`
	// The type of webhook.
	Type string `json:"type"`
	// The version of this entity.
	Version *string `json:"version,omitempty"`
}

// NewTokenizationDisabledDetailsNotificationRequest instantiates a new TokenizationDisabledDetailsNotificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenizationDisabledDetailsNotificationRequest(createdAt time.Time, data RecurringToken, environment string, eventId string, type_ string) *TokenizationDisabledDetailsNotificationRequest {
	this := TokenizationDisabledDetailsNotificationRequest{}
	this.CreatedAt = createdAt
	this.Data = data
	this.Environment = environment
	this.EventId = eventId
	this.Type = type_
	return &this
}

// NewTokenizationDisabledDetailsNotificationRequestWithDefaults instantiates a new TokenizationDisabledDetailsNotificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenizationDisabledDetailsNotificationRequestWithDefaults() *TokenizationDisabledDetailsNotificationRequest {
	this := TokenizationDisabledDetailsNotificationRequest{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value
func (o *TokenizationDisabledDetailsNotificationRequest) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TokenizationDisabledDetailsNotificationRequest) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TokenizationDisabledDetailsNotificationRequest) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetData returns the Data field value
func (o *TokenizationDisabledDetailsNotificationRequest) GetData() RecurringToken {
	if o == nil {
		var ret RecurringToken
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *TokenizationDisabledDetailsNotificationRequest) GetDataOk() (*RecurringToken, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *TokenizationDisabledDetailsNotificationRequest) SetData(v RecurringToken) {
	o.Data = v
}

// GetEnvironment returns the Environment field value
func (o *TokenizationDisabledDetailsNotificationRequest) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *TokenizationDisabledDetailsNotificationRequest) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *TokenizationDisabledDetailsNotificationRequest) SetEnvironment(v string) {
	o.Environment = v
}

// GetEventId returns the EventId field value
func (o *TokenizationDisabledDetailsNotificationRequest) GetEventId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *TokenizationDisabledDetailsNotificationRequest) GetEventIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *TokenizationDisabledDetailsNotificationRequest) SetEventId(v string) {
	o.EventId = v
}

// GetType returns the Type field value
func (o *TokenizationDisabledDetailsNotificationRequest) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TokenizationDisabledDetailsNotificationRequest) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TokenizationDisabledDetailsNotificationRequest) SetType(v string) {
	o.Type = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *TokenizationDisabledDetailsNotificationRequest) GetVersion() string {
	if o == nil || common.IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenizationDisabledDetailsNotificationRequest) GetVersionOk() (*string, bool) {
	if o == nil || common.IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *TokenizationDisabledDetailsNotificationRequest) HasVersion() bool {
	if o != nil && !common.IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *TokenizationDisabledDetailsNotificationRequest) SetVersion(v string) {
	o.Version = &v
}

func (o TokenizationDisabledDetailsNotificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenizationDisabledDetailsNotificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["data"] = o.Data
	toSerialize["environment"] = o.Environment
	toSerialize["eventId"] = o.EventId
	toSerialize["type"] = o.Type
	if !common.IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableTokenizationDisabledDetailsNotificationRequest struct {
	value *TokenizationDisabledDetailsNotificationRequest
	isSet bool
}

func (v NullableTokenizationDisabledDetailsNotificationRequest) Get() *TokenizationDisabledDetailsNotificationRequest {
	return v.value
}

func (v *NullableTokenizationDisabledDetailsNotificationRequest) Set(val *TokenizationDisabledDetailsNotificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenizationDisabledDetailsNotificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenizationDisabledDetailsNotificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenizationDisabledDetailsNotificationRequest(val *TokenizationDisabledDetailsNotificationRequest) *NullableTokenizationDisabledDetailsNotificationRequest {
	return &NullableTokenizationDisabledDetailsNotificationRequest{value: val, isSet: true}
}

func (v NullableTokenizationDisabledDetailsNotificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenizationDisabledDetailsNotificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


func (o *TokenizationDisabledDetailsNotificationRequest) isValidEnvironment() bool {
    var allowedEnumValues = []string{ "test", "live" }
    for _, allowed := range allowedEnumValues {
        if o.GetEnvironment() == allowed {
            return true
        }
    }
    return false
}
func (o *TokenizationDisabledDetailsNotificationRequest) isValidType() bool {
    var allowedEnumValues = []string{ "recurring.token.disabled" }
    for _, allowed := range allowedEnumValues {
        if o.GetType() == allowed {
            return true
        }
    }
    return false
}

