/*
Configuration webhooks

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationwebhook

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v8/src/common"
)

// checks if the Contact type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &Contact{}

// Contact struct for Contact
type Contact struct {
	Address *Address `json:"address,omitempty"`
	// The e-mail address of the contact.
	Email *string `json:"email,omitempty"`
	// The phone number of the contact provided as a single string.  It will be handled as a landline phone. **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\"
	FullPhoneNumber *string       `json:"fullPhoneNumber,omitempty"`
	Name            *Name         `json:"name,omitempty"`
	PersonalData    *PersonalData `json:"personalData,omitempty"`
	PhoneNumber     *PhoneNumber  `json:"phoneNumber,omitempty"`
	// The URL of the website of the contact.
	WebAddress *string `json:"webAddress,omitempty"`
}

// NewContact instantiates a new Contact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContact() *Contact {
	this := Contact{}
	return &this
}

// NewContactWithDefaults instantiates a new Contact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactWithDefaults() *Contact {
	this := Contact{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *Contact) GetAddress() Address {
	if o == nil || common.IsNil(o.Address) {
		var ret Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetAddressOk() (*Address, bool) {
	if o == nil || common.IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *Contact) HasAddress() bool {
	if o != nil && !common.IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address and assigns it to the Address field.
func (o *Contact) SetAddress(v Address) {
	o.Address = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Contact) GetEmail() string {
	if o == nil || common.IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetEmailOk() (*string, bool) {
	if o == nil || common.IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Contact) HasEmail() bool {
	if o != nil && !common.IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Contact) SetEmail(v string) {
	o.Email = &v
}

// GetFullPhoneNumber returns the FullPhoneNumber field value if set, zero value otherwise.
func (o *Contact) GetFullPhoneNumber() string {
	if o == nil || common.IsNil(o.FullPhoneNumber) {
		var ret string
		return ret
	}
	return *o.FullPhoneNumber
}

// GetFullPhoneNumberOk returns a tuple with the FullPhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetFullPhoneNumberOk() (*string, bool) {
	if o == nil || common.IsNil(o.FullPhoneNumber) {
		return nil, false
	}
	return o.FullPhoneNumber, true
}

// HasFullPhoneNumber returns a boolean if a field has been set.
func (o *Contact) HasFullPhoneNumber() bool {
	if o != nil && !common.IsNil(o.FullPhoneNumber) {
		return true
	}

	return false
}

// SetFullPhoneNumber gets a reference to the given string and assigns it to the FullPhoneNumber field.
func (o *Contact) SetFullPhoneNumber(v string) {
	o.FullPhoneNumber = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Contact) GetName() Name {
	if o == nil || common.IsNil(o.Name) {
		var ret Name
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetNameOk() (*Name, bool) {
	if o == nil || common.IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Contact) HasName() bool {
	if o != nil && !common.IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given Name and assigns it to the Name field.
func (o *Contact) SetName(v Name) {
	o.Name = &v
}

// GetPersonalData returns the PersonalData field value if set, zero value otherwise.
func (o *Contact) GetPersonalData() PersonalData {
	if o == nil || common.IsNil(o.PersonalData) {
		var ret PersonalData
		return ret
	}
	return *o.PersonalData
}

// GetPersonalDataOk returns a tuple with the PersonalData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPersonalDataOk() (*PersonalData, bool) {
	if o == nil || common.IsNil(o.PersonalData) {
		return nil, false
	}
	return o.PersonalData, true
}

// HasPersonalData returns a boolean if a field has been set.
func (o *Contact) HasPersonalData() bool {
	if o != nil && !common.IsNil(o.PersonalData) {
		return true
	}

	return false
}

// SetPersonalData gets a reference to the given PersonalData and assigns it to the PersonalData field.
func (o *Contact) SetPersonalData(v PersonalData) {
	o.PersonalData = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *Contact) GetPhoneNumber() PhoneNumber {
	if o == nil || common.IsNil(o.PhoneNumber) {
		var ret PhoneNumber
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetPhoneNumberOk() (*PhoneNumber, bool) {
	if o == nil || common.IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *Contact) HasPhoneNumber() bool {
	if o != nil && !common.IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given PhoneNumber and assigns it to the PhoneNumber field.
func (o *Contact) SetPhoneNumber(v PhoneNumber) {
	o.PhoneNumber = &v
}

// GetWebAddress returns the WebAddress field value if set, zero value otherwise.
func (o *Contact) GetWebAddress() string {
	if o == nil || common.IsNil(o.WebAddress) {
		var ret string
		return ret
	}
	return *o.WebAddress
}

// GetWebAddressOk returns a tuple with the WebAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contact) GetWebAddressOk() (*string, bool) {
	if o == nil || common.IsNil(o.WebAddress) {
		return nil, false
	}
	return o.WebAddress, true
}

// HasWebAddress returns a boolean if a field has been set.
func (o *Contact) HasWebAddress() bool {
	if o != nil && !common.IsNil(o.WebAddress) {
		return true
	}

	return false
}

// SetWebAddress gets a reference to the given string and assigns it to the WebAddress field.
func (o *Contact) SetWebAddress(v string) {
	o.WebAddress = &v
}

func (o Contact) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Contact) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !common.IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !common.IsNil(o.FullPhoneNumber) {
		toSerialize["fullPhoneNumber"] = o.FullPhoneNumber
	}
	if !common.IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !common.IsNil(o.PersonalData) {
		toSerialize["personalData"] = o.PersonalData
	}
	if !common.IsNil(o.PhoneNumber) {
		toSerialize["phoneNumber"] = o.PhoneNumber
	}
	if !common.IsNil(o.WebAddress) {
		toSerialize["webAddress"] = o.WebAddress
	}
	return toSerialize, nil
}

type NullableContact struct {
	value *Contact
	isSet bool
}

func (v NullableContact) Get() *Contact {
	return v.value
}

func (v *NullableContact) Set(val *Contact) {
	v.value = val
	v.isSet = true
}

func (v NullableContact) IsSet() bool {
	return v.isSet
}

func (v *NullableContact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContact(val *Contact) *NullableContact {
	return &NullableContact{value: val, isSet: true}
}

func (v NullableContact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
