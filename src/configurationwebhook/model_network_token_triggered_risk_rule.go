/*
Configuration webhooks

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationwebhook

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the NetworkTokenTriggeredRiskRule type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &NetworkTokenTriggeredRiskRule{}

// NetworkTokenTriggeredRiskRule struct for NetworkTokenTriggeredRiskRule
type NetworkTokenTriggeredRiskRule struct {
	// Explains why the transaction rule failed.
	Reason                *string                     `json:"reason,omitempty"`
	TransactionRule       *NetworkTokenRiskRuleData   `json:"transactionRule,omitempty"`
	TransactionRuleSource *NetworkTokenRiskRuleSource `json:"transactionRuleSource,omitempty"`
}

// NewNetworkTokenTriggeredRiskRule instantiates a new NetworkTokenTriggeredRiskRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkTokenTriggeredRiskRule() *NetworkTokenTriggeredRiskRule {
	this := NetworkTokenTriggeredRiskRule{}
	return &this
}

// NewNetworkTokenTriggeredRiskRuleWithDefaults instantiates a new NetworkTokenTriggeredRiskRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkTokenTriggeredRiskRuleWithDefaults() *NetworkTokenTriggeredRiskRule {
	this := NetworkTokenTriggeredRiskRule{}
	return &this
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *NetworkTokenTriggeredRiskRule) GetReason() string {
	if o == nil || common.IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenTriggeredRiskRule) GetReasonOk() (*string, bool) {
	if o == nil || common.IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *NetworkTokenTriggeredRiskRule) HasReason() bool {
	if o != nil && !common.IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *NetworkTokenTriggeredRiskRule) SetReason(v string) {
	o.Reason = &v
}

// GetTransactionRule returns the TransactionRule field value if set, zero value otherwise.
func (o *NetworkTokenTriggeredRiskRule) GetTransactionRule() NetworkTokenRiskRuleData {
	if o == nil || common.IsNil(o.TransactionRule) {
		var ret NetworkTokenRiskRuleData
		return ret
	}
	return *o.TransactionRule
}

// GetTransactionRuleOk returns a tuple with the TransactionRule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenTriggeredRiskRule) GetTransactionRuleOk() (*NetworkTokenRiskRuleData, bool) {
	if o == nil || common.IsNil(o.TransactionRule) {
		return nil, false
	}
	return o.TransactionRule, true
}

// HasTransactionRule returns a boolean if a field has been set.
func (o *NetworkTokenTriggeredRiskRule) HasTransactionRule() bool {
	if o != nil && !common.IsNil(o.TransactionRule) {
		return true
	}

	return false
}

// SetTransactionRule gets a reference to the given NetworkTokenRiskRuleData and assigns it to the TransactionRule field.
func (o *NetworkTokenTriggeredRiskRule) SetTransactionRule(v NetworkTokenRiskRuleData) {
	o.TransactionRule = &v
}

// GetTransactionRuleSource returns the TransactionRuleSource field value if set, zero value otherwise.
func (o *NetworkTokenTriggeredRiskRule) GetTransactionRuleSource() NetworkTokenRiskRuleSource {
	if o == nil || common.IsNil(o.TransactionRuleSource) {
		var ret NetworkTokenRiskRuleSource
		return ret
	}
	return *o.TransactionRuleSource
}

// GetTransactionRuleSourceOk returns a tuple with the TransactionRuleSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenTriggeredRiskRule) GetTransactionRuleSourceOk() (*NetworkTokenRiskRuleSource, bool) {
	if o == nil || common.IsNil(o.TransactionRuleSource) {
		return nil, false
	}
	return o.TransactionRuleSource, true
}

// HasTransactionRuleSource returns a boolean if a field has been set.
func (o *NetworkTokenTriggeredRiskRule) HasTransactionRuleSource() bool {
	if o != nil && !common.IsNil(o.TransactionRuleSource) {
		return true
	}

	return false
}

// SetTransactionRuleSource gets a reference to the given NetworkTokenRiskRuleSource and assigns it to the TransactionRuleSource field.
func (o *NetworkTokenTriggeredRiskRule) SetTransactionRuleSource(v NetworkTokenRiskRuleSource) {
	o.TransactionRuleSource = &v
}

func (o NetworkTokenTriggeredRiskRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkTokenTriggeredRiskRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !common.IsNil(o.TransactionRule) {
		toSerialize["transactionRule"] = o.TransactionRule
	}
	if !common.IsNil(o.TransactionRuleSource) {
		toSerialize["transactionRuleSource"] = o.TransactionRuleSource
	}
	return toSerialize, nil
}

type NullableNetworkTokenTriggeredRiskRule struct {
	value *NetworkTokenTriggeredRiskRule
	isSet bool
}

func (v NullableNetworkTokenTriggeredRiskRule) Get() *NetworkTokenTriggeredRiskRule {
	return v.value
}

func (v *NullableNetworkTokenTriggeredRiskRule) Set(val *NetworkTokenTriggeredRiskRule) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkTokenTriggeredRiskRule) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkTokenTriggeredRiskRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkTokenTriggeredRiskRule(val *NetworkTokenTriggeredRiskRule) *NullableNetworkTokenTriggeredRiskRule {
	return &NullableNetworkTokenTriggeredRiskRule{value: val, isSet: true}
}

func (v NullableNetworkTokenTriggeredRiskRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkTokenTriggeredRiskRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
