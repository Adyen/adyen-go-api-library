/*
Configuration webhooks

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationwebhook

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the NetworkTokenRiskRuleSource type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &NetworkTokenRiskRuleSource{}

// NetworkTokenRiskRuleSource struct for NetworkTokenRiskRuleSource
type NetworkTokenRiskRuleSource struct {
	// The unique identifier of the resource to which the transaction rule applies.
	Id *string `json:"id,omitempty"`
	// Indicates the type of resource for which the transaction rule is defined.  Possible values:   * **PaymentInstrumentGroup**  * **PaymentInstrument**  * **BalancePlatform**  * **EntityUsageConfiguration**  * **PlatformRule**: The transaction rule is a platform-wide rule imposed by Adyen.
	Type *string `json:"type,omitempty"`
}

// NewNetworkTokenRiskRuleSource instantiates a new NetworkTokenRiskRuleSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkTokenRiskRuleSource() *NetworkTokenRiskRuleSource {
	this := NetworkTokenRiskRuleSource{}
	return &this
}

// NewNetworkTokenRiskRuleSourceWithDefaults instantiates a new NetworkTokenRiskRuleSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkTokenRiskRuleSourceWithDefaults() *NetworkTokenRiskRuleSource {
	this := NetworkTokenRiskRuleSource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NetworkTokenRiskRuleSource) GetId() string {
	if o == nil || common.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenRiskRuleSource) GetIdOk() (*string, bool) {
	if o == nil || common.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NetworkTokenRiskRuleSource) HasId() bool {
	if o != nil && !common.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NetworkTokenRiskRuleSource) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *NetworkTokenRiskRuleSource) GetType() string {
	if o == nil || common.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkTokenRiskRuleSource) GetTypeOk() (*string, bool) {
	if o == nil || common.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *NetworkTokenRiskRuleSource) HasType() bool {
	if o != nil && !common.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *NetworkTokenRiskRuleSource) SetType(v string) {
	o.Type = &v
}

func (o NetworkTokenRiskRuleSource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkTokenRiskRuleSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !common.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableNetworkTokenRiskRuleSource struct {
	value *NetworkTokenRiskRuleSource
	isSet bool
}

func (v NullableNetworkTokenRiskRuleSource) Get() *NetworkTokenRiskRuleSource {
	return v.value
}

func (v *NullableNetworkTokenRiskRuleSource) Set(val *NetworkTokenRiskRuleSource) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkTokenRiskRuleSource) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkTokenRiskRuleSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkTokenRiskRuleSource(val *NetworkTokenRiskRuleSource) *NullableNetworkTokenRiskRuleSource {
	return &NullableNetworkTokenRiskRuleSource{value: val, isSet: true}
}

func (v NullableNetworkTokenRiskRuleSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkTokenRiskRuleSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
