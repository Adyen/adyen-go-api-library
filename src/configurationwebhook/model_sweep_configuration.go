/*
Configuration webhooks

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationwebhook

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v8/src/common"
)

// checks if the SweepConfiguration type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &SweepConfiguration{}

// SweepConfiguration struct for SweepConfiguration
type SweepConfiguration struct {
	// The unique identifier of the destination or source [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id).   You can only use this for periodic sweep schedules such as `schedule.type` **daily** or **monthly**.
	BalanceAccountId *string `json:"balanceAccountId,omitempty"`
	// The unique identifier of the sweep.
	Id string `json:"id"`
	// The merchant account that will be the source of funds. You can only use this if you are processing payments with Adyen. This can only be used for sweeps of `type` **pull** and `schedule.type` **balance**.
	MerchantAccount *string       `json:"merchantAccount,omitempty"`
	Schedule        SweepSchedule `json:"schedule"`
	// The status of the sweep. If not provided, by default, this is set to **active**.  Possible values:    * **active**:  the sweep is enabled and funds will be pulled in or pushed out based on the defined configuration.    * **inactive**: the sweep is disabled and cannot be triggered.
	Status       *string `json:"status,omitempty"`
	SweepAmount  *Amount `json:"sweepAmount,omitempty"`
	TargetAmount *Amount `json:"targetAmount,omitempty"`
	// The unique identifier of the destination or source [transfer instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/transferInstruments__resParam_id).  You can also use this in combination with a `merchantAccount` and a `type` **pull** to start a direct debit request from the source transfer instrument. To use this feature, reach out to your Adyen contact.
	TransferInstrumentId *string `json:"transferInstrumentId,omitempty"`
	TriggerAmount        *Amount `json:"triggerAmount,omitempty"`
	// The direction of sweep, whether pushing out or pulling in funds to the balance account. If not provided, by default, this is set to **push**.  Possible values:   * **push**: _push out funds_ to a destination balance account or transfer instrument.   * **pull**: _pull in funds_ from a source merchant account, transfer instrument, or balance account.
	Type *string `json:"type,omitempty"`
}

// NewSweepConfiguration instantiates a new SweepConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSweepConfiguration(id string, schedule SweepSchedule) *SweepConfiguration {
	this := SweepConfiguration{}
	this.Id = id
	this.Schedule = schedule
	var type_ string = "push"
	this.Type = &type_
	return &this
}

// NewSweepConfigurationWithDefaults instantiates a new SweepConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSweepConfigurationWithDefaults() *SweepConfiguration {
	this := SweepConfiguration{}
	var type_ string = "push"
	this.Type = &type_
	return &this
}

// GetBalanceAccountId returns the BalanceAccountId field value if set, zero value otherwise.
func (o *SweepConfiguration) GetBalanceAccountId() string {
	if o == nil || common.IsNil(o.BalanceAccountId) {
		var ret string
		return ret
	}
	return *o.BalanceAccountId
}

// GetBalanceAccountIdOk returns a tuple with the BalanceAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetBalanceAccountIdOk() (*string, bool) {
	if o == nil || common.IsNil(o.BalanceAccountId) {
		return nil, false
	}
	return o.BalanceAccountId, true
}

// HasBalanceAccountId returns a boolean if a field has been set.
func (o *SweepConfiguration) HasBalanceAccountId() bool {
	if o != nil && !common.IsNil(o.BalanceAccountId) {
		return true
	}

	return false
}

// SetBalanceAccountId gets a reference to the given string and assigns it to the BalanceAccountId field.
func (o *SweepConfiguration) SetBalanceAccountId(v string) {
	o.BalanceAccountId = &v
}

// GetId returns the Id field value
func (o *SweepConfiguration) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SweepConfiguration) SetId(v string) {
	o.Id = v
}

// GetMerchantAccount returns the MerchantAccount field value if set, zero value otherwise.
func (o *SweepConfiguration) GetMerchantAccount() string {
	if o == nil || common.IsNil(o.MerchantAccount) {
		var ret string
		return ret
	}
	return *o.MerchantAccount
}

// GetMerchantAccountOk returns a tuple with the MerchantAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetMerchantAccountOk() (*string, bool) {
	if o == nil || common.IsNil(o.MerchantAccount) {
		return nil, false
	}
	return o.MerchantAccount, true
}

// HasMerchantAccount returns a boolean if a field has been set.
func (o *SweepConfiguration) HasMerchantAccount() bool {
	if o != nil && !common.IsNil(o.MerchantAccount) {
		return true
	}

	return false
}

// SetMerchantAccount gets a reference to the given string and assigns it to the MerchantAccount field.
func (o *SweepConfiguration) SetMerchantAccount(v string) {
	o.MerchantAccount = &v
}

// GetSchedule returns the Schedule field value
func (o *SweepConfiguration) GetSchedule() SweepSchedule {
	if o == nil {
		var ret SweepSchedule
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetScheduleOk() (*SweepSchedule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *SweepConfiguration) SetSchedule(v SweepSchedule) {
	o.Schedule = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SweepConfiguration) GetStatus() string {
	if o == nil || common.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetStatusOk() (*string, bool) {
	if o == nil || common.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SweepConfiguration) HasStatus() bool {
	if o != nil && !common.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SweepConfiguration) SetStatus(v string) {
	o.Status = &v
}

// GetSweepAmount returns the SweepAmount field value if set, zero value otherwise.
func (o *SweepConfiguration) GetSweepAmount() Amount {
	if o == nil || common.IsNil(o.SweepAmount) {
		var ret Amount
		return ret
	}
	return *o.SweepAmount
}

// GetSweepAmountOk returns a tuple with the SweepAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetSweepAmountOk() (*Amount, bool) {
	if o == nil || common.IsNil(o.SweepAmount) {
		return nil, false
	}
	return o.SweepAmount, true
}

// HasSweepAmount returns a boolean if a field has been set.
func (o *SweepConfiguration) HasSweepAmount() bool {
	if o != nil && !common.IsNil(o.SweepAmount) {
		return true
	}

	return false
}

// SetSweepAmount gets a reference to the given Amount and assigns it to the SweepAmount field.
func (o *SweepConfiguration) SetSweepAmount(v Amount) {
	o.SweepAmount = &v
}

// GetTargetAmount returns the TargetAmount field value if set, zero value otherwise.
func (o *SweepConfiguration) GetTargetAmount() Amount {
	if o == nil || common.IsNil(o.TargetAmount) {
		var ret Amount
		return ret
	}
	return *o.TargetAmount
}

// GetTargetAmountOk returns a tuple with the TargetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetTargetAmountOk() (*Amount, bool) {
	if o == nil || common.IsNil(o.TargetAmount) {
		return nil, false
	}
	return o.TargetAmount, true
}

// HasTargetAmount returns a boolean if a field has been set.
func (o *SweepConfiguration) HasTargetAmount() bool {
	if o != nil && !common.IsNil(o.TargetAmount) {
		return true
	}

	return false
}

// SetTargetAmount gets a reference to the given Amount and assigns it to the TargetAmount field.
func (o *SweepConfiguration) SetTargetAmount(v Amount) {
	o.TargetAmount = &v
}

// GetTransferInstrumentId returns the TransferInstrumentId field value if set, zero value otherwise.
func (o *SweepConfiguration) GetTransferInstrumentId() string {
	if o == nil || common.IsNil(o.TransferInstrumentId) {
		var ret string
		return ret
	}
	return *o.TransferInstrumentId
}

// GetTransferInstrumentIdOk returns a tuple with the TransferInstrumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetTransferInstrumentIdOk() (*string, bool) {
	if o == nil || common.IsNil(o.TransferInstrumentId) {
		return nil, false
	}
	return o.TransferInstrumentId, true
}

// HasTransferInstrumentId returns a boolean if a field has been set.
func (o *SweepConfiguration) HasTransferInstrumentId() bool {
	if o != nil && !common.IsNil(o.TransferInstrumentId) {
		return true
	}

	return false
}

// SetTransferInstrumentId gets a reference to the given string and assigns it to the TransferInstrumentId field.
func (o *SweepConfiguration) SetTransferInstrumentId(v string) {
	o.TransferInstrumentId = &v
}

// GetTriggerAmount returns the TriggerAmount field value if set, zero value otherwise.
func (o *SweepConfiguration) GetTriggerAmount() Amount {
	if o == nil || common.IsNil(o.TriggerAmount) {
		var ret Amount
		return ret
	}
	return *o.TriggerAmount
}

// GetTriggerAmountOk returns a tuple with the TriggerAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetTriggerAmountOk() (*Amount, bool) {
	if o == nil || common.IsNil(o.TriggerAmount) {
		return nil, false
	}
	return o.TriggerAmount, true
}

// HasTriggerAmount returns a boolean if a field has been set.
func (o *SweepConfiguration) HasTriggerAmount() bool {
	if o != nil && !common.IsNil(o.TriggerAmount) {
		return true
	}

	return false
}

// SetTriggerAmount gets a reference to the given Amount and assigns it to the TriggerAmount field.
func (o *SweepConfiguration) SetTriggerAmount(v Amount) {
	o.TriggerAmount = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SweepConfiguration) GetType() string {
	if o == nil || common.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SweepConfiguration) GetTypeOk() (*string, bool) {
	if o == nil || common.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SweepConfiguration) HasType() bool {
	if o != nil && !common.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SweepConfiguration) SetType(v string) {
	o.Type = &v
}

func (o SweepConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SweepConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.BalanceAccountId) {
		toSerialize["balanceAccountId"] = o.BalanceAccountId
	}
	toSerialize["id"] = o.Id
	if !common.IsNil(o.MerchantAccount) {
		toSerialize["merchantAccount"] = o.MerchantAccount
	}
	toSerialize["schedule"] = o.Schedule
	if !common.IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !common.IsNil(o.SweepAmount) {
		toSerialize["sweepAmount"] = o.SweepAmount
	}
	if !common.IsNil(o.TargetAmount) {
		toSerialize["targetAmount"] = o.TargetAmount
	}
	if !common.IsNil(o.TransferInstrumentId) {
		toSerialize["transferInstrumentId"] = o.TransferInstrumentId
	}
	if !common.IsNil(o.TriggerAmount) {
		toSerialize["triggerAmount"] = o.TriggerAmount
	}
	if !common.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableSweepConfiguration struct {
	value *SweepConfiguration
	isSet bool
}

func (v NullableSweepConfiguration) Get() *SweepConfiguration {
	return v.value
}

func (v *NullableSweepConfiguration) Set(val *SweepConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableSweepConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableSweepConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSweepConfiguration(val *SweepConfiguration) *NullableSweepConfiguration {
	return &NullableSweepConfiguration{value: val, isSet: true}
}

func (v NullableSweepConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSweepConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

func (o *SweepConfiguration) isValidStatus() bool {
	var allowedEnumValues = []string{"active", "inactive"}
	for _, allowed := range allowedEnumValues {
		if o.GetStatus() == allowed {
			return true
		}
	}
	return false
}
func (o *SweepConfiguration) isValidType() bool {
	var allowedEnumValues = []string{"pull", "push"}
	for _, allowed := range allowedEnumValues {
		if o.GetType() == allowed {
			return true
		}
	}
	return false
}
