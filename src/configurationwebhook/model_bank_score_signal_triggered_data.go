/*
Configuration webhooks

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationwebhook

import (
	"encoding/json"
	"time"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the BankScoreSignalTriggeredData type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &BankScoreSignalTriggeredData{}

// BankScoreSignalTriggeredData struct for BankScoreSignalTriggeredData
type BankScoreSignalTriggeredData struct {
	AccountHolder *ResourceReference `json:"accountHolder,omitempty"`
	// The status of the account holder.
	AccountHolderStatus *string `json:"accountHolderStatus,omitempty"`
	// The automated action(s) taken as a result of the score signals that were triggered.
	AutomatedActions []string `json:"automatedActions,omitempty"`
	// The unique identifier of the balance platform.
	BalancePlatform *string `json:"balancePlatform,omitempty"`
	// The date and time when the event was triggered, in ISO 8601 extended format. For example, **2025-03-19T10:15:30+01:00**.
	CreationDate *time.Time `json:"creationDate,omitempty"`
	// The ID of the resource.
	Id *string `json:"id,omitempty"`
	// The score of the identity resulting from the signal(s) that were triggered.
	RiskScore *int32 `json:"riskScore,omitempty"`
	// The name(s) of the score signals that were triggered.
	ScoreSignalsTriggered []string `json:"scoreSignalsTriggered,omitempty"`
	// The type(s) of the score signals that were triggered.
	SignalSourceTypes []string `json:"signalSourceTypes,omitempty"`
}

// NewBankScoreSignalTriggeredData instantiates a new BankScoreSignalTriggeredData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankScoreSignalTriggeredData() *BankScoreSignalTriggeredData {
	this := BankScoreSignalTriggeredData{}
	return &this
}

// NewBankScoreSignalTriggeredDataWithDefaults instantiates a new BankScoreSignalTriggeredData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankScoreSignalTriggeredDataWithDefaults() *BankScoreSignalTriggeredData {
	this := BankScoreSignalTriggeredData{}
	return &this
}

// GetAccountHolder returns the AccountHolder field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetAccountHolder() ResourceReference {
	if o == nil || common.IsNil(o.AccountHolder) {
		var ret ResourceReference
		return ret
	}
	return *o.AccountHolder
}

// GetAccountHolderOk returns a tuple with the AccountHolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetAccountHolderOk() (*ResourceReference, bool) {
	if o == nil || common.IsNil(o.AccountHolder) {
		return nil, false
	}
	return o.AccountHolder, true
}

// HasAccountHolder returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasAccountHolder() bool {
	if o != nil && !common.IsNil(o.AccountHolder) {
		return true
	}

	return false
}

// SetAccountHolder gets a reference to the given ResourceReference and assigns it to the AccountHolder field.
func (o *BankScoreSignalTriggeredData) SetAccountHolder(v ResourceReference) {
	o.AccountHolder = &v
}

// GetAccountHolderStatus returns the AccountHolderStatus field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetAccountHolderStatus() string {
	if o == nil || common.IsNil(o.AccountHolderStatus) {
		var ret string
		return ret
	}
	return *o.AccountHolderStatus
}

// GetAccountHolderStatusOk returns a tuple with the AccountHolderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetAccountHolderStatusOk() (*string, bool) {
	if o == nil || common.IsNil(o.AccountHolderStatus) {
		return nil, false
	}
	return o.AccountHolderStatus, true
}

// HasAccountHolderStatus returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasAccountHolderStatus() bool {
	if o != nil && !common.IsNil(o.AccountHolderStatus) {
		return true
	}

	return false
}

// SetAccountHolderStatus gets a reference to the given string and assigns it to the AccountHolderStatus field.
func (o *BankScoreSignalTriggeredData) SetAccountHolderStatus(v string) {
	o.AccountHolderStatus = &v
}

// GetAutomatedActions returns the AutomatedActions field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetAutomatedActions() []string {
	if o == nil || common.IsNil(o.AutomatedActions) {
		var ret []string
		return ret
	}
	return o.AutomatedActions
}

// GetAutomatedActionsOk returns a tuple with the AutomatedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetAutomatedActionsOk() ([]string, bool) {
	if o == nil || common.IsNil(o.AutomatedActions) {
		return nil, false
	}
	return o.AutomatedActions, true
}

// HasAutomatedActions returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasAutomatedActions() bool {
	if o != nil && !common.IsNil(o.AutomatedActions) {
		return true
	}

	return false
}

// SetAutomatedActions gets a reference to the given []string and assigns it to the AutomatedActions field.
func (o *BankScoreSignalTriggeredData) SetAutomatedActions(v []string) {
	o.AutomatedActions = v
}

// GetBalancePlatform returns the BalancePlatform field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetBalancePlatform() string {
	if o == nil || common.IsNil(o.BalancePlatform) {
		var ret string
		return ret
	}
	return *o.BalancePlatform
}

// GetBalancePlatformOk returns a tuple with the BalancePlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetBalancePlatformOk() (*string, bool) {
	if o == nil || common.IsNil(o.BalancePlatform) {
		return nil, false
	}
	return o.BalancePlatform, true
}

// HasBalancePlatform returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasBalancePlatform() bool {
	if o != nil && !common.IsNil(o.BalancePlatform) {
		return true
	}

	return false
}

// SetBalancePlatform gets a reference to the given string and assigns it to the BalancePlatform field.
func (o *BankScoreSignalTriggeredData) SetBalancePlatform(v string) {
	o.BalancePlatform = &v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetCreationDate() time.Time {
	if o == nil || common.IsNil(o.CreationDate) {
		var ret time.Time
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetCreationDateOk() (*time.Time, bool) {
	if o == nil || common.IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasCreationDate() bool {
	if o != nil && !common.IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given time.Time and assigns it to the CreationDate field.
func (o *BankScoreSignalTriggeredData) SetCreationDate(v time.Time) {
	o.CreationDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetId() string {
	if o == nil || common.IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetIdOk() (*string, bool) {
	if o == nil || common.IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasId() bool {
	if o != nil && !common.IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BankScoreSignalTriggeredData) SetId(v string) {
	o.Id = &v
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetRiskScore() int32 {
	if o == nil || common.IsNil(o.RiskScore) {
		var ret int32
		return ret
	}
	return *o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetRiskScoreOk() (*int32, bool) {
	if o == nil || common.IsNil(o.RiskScore) {
		return nil, false
	}
	return o.RiskScore, true
}

// HasRiskScore returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasRiskScore() bool {
	if o != nil && !common.IsNil(o.RiskScore) {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given int32 and assigns it to the RiskScore field.
func (o *BankScoreSignalTriggeredData) SetRiskScore(v int32) {
	o.RiskScore = &v
}

// GetScoreSignalsTriggered returns the ScoreSignalsTriggered field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetScoreSignalsTriggered() []string {
	if o == nil || common.IsNil(o.ScoreSignalsTriggered) {
		var ret []string
		return ret
	}
	return o.ScoreSignalsTriggered
}

// GetScoreSignalsTriggeredOk returns a tuple with the ScoreSignalsTriggered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetScoreSignalsTriggeredOk() ([]string, bool) {
	if o == nil || common.IsNil(o.ScoreSignalsTriggered) {
		return nil, false
	}
	return o.ScoreSignalsTriggered, true
}

// HasScoreSignalsTriggered returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasScoreSignalsTriggered() bool {
	if o != nil && !common.IsNil(o.ScoreSignalsTriggered) {
		return true
	}

	return false
}

// SetScoreSignalsTriggered gets a reference to the given []string and assigns it to the ScoreSignalsTriggered field.
func (o *BankScoreSignalTriggeredData) SetScoreSignalsTriggered(v []string) {
	o.ScoreSignalsTriggered = v
}

// GetSignalSourceTypes returns the SignalSourceTypes field value if set, zero value otherwise.
func (o *BankScoreSignalTriggeredData) GetSignalSourceTypes() []string {
	if o == nil || common.IsNil(o.SignalSourceTypes) {
		var ret []string
		return ret
	}
	return o.SignalSourceTypes
}

// GetSignalSourceTypesOk returns a tuple with the SignalSourceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankScoreSignalTriggeredData) GetSignalSourceTypesOk() ([]string, bool) {
	if o == nil || common.IsNil(o.SignalSourceTypes) {
		return nil, false
	}
	return o.SignalSourceTypes, true
}

// HasSignalSourceTypes returns a boolean if a field has been set.
func (o *BankScoreSignalTriggeredData) HasSignalSourceTypes() bool {
	if o != nil && !common.IsNil(o.SignalSourceTypes) {
		return true
	}

	return false
}

// SetSignalSourceTypes gets a reference to the given []string and assigns it to the SignalSourceTypes field.
func (o *BankScoreSignalTriggeredData) SetSignalSourceTypes(v []string) {
	o.SignalSourceTypes = v
}

func (o BankScoreSignalTriggeredData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankScoreSignalTriggeredData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.AccountHolder) {
		toSerialize["accountHolder"] = o.AccountHolder
	}
	if !common.IsNil(o.AccountHolderStatus) {
		toSerialize["accountHolderStatus"] = o.AccountHolderStatus
	}
	if !common.IsNil(o.AutomatedActions) {
		toSerialize["automatedActions"] = o.AutomatedActions
	}
	if !common.IsNil(o.BalancePlatform) {
		toSerialize["balancePlatform"] = o.BalancePlatform
	}
	if !common.IsNil(o.CreationDate) {
		toSerialize["creationDate"] = o.CreationDate
	}
	if !common.IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !common.IsNil(o.RiskScore) {
		toSerialize["riskScore"] = o.RiskScore
	}
	if !common.IsNil(o.ScoreSignalsTriggered) {
		toSerialize["scoreSignalsTriggered"] = o.ScoreSignalsTriggered
	}
	if !common.IsNil(o.SignalSourceTypes) {
		toSerialize["signalSourceTypes"] = o.SignalSourceTypes
	}
	return toSerialize, nil
}

type NullableBankScoreSignalTriggeredData struct {
	value *BankScoreSignalTriggeredData
	isSet bool
}

func (v NullableBankScoreSignalTriggeredData) Get() *BankScoreSignalTriggeredData {
	return v.value
}

func (v *NullableBankScoreSignalTriggeredData) Set(val *BankScoreSignalTriggeredData) {
	v.value = val
	v.isSet = true
}

func (v NullableBankScoreSignalTriggeredData) IsSet() bool {
	return v.isSet
}

func (v *NullableBankScoreSignalTriggeredData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankScoreSignalTriggeredData(val *BankScoreSignalTriggeredData) *NullableBankScoreSignalTriggeredData {
	return &NullableBankScoreSignalTriggeredData{value: val, isSet: true}
}

func (v NullableBankScoreSignalTriggeredData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankScoreSignalTriggeredData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
