/*
Configuration webhooks

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationwebhook

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the TokenAuthentication type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &TokenAuthentication{}

// TokenAuthentication struct for TokenAuthentication
type TokenAuthentication struct {
	// The method used to complete the authentication process.  Possible values: **sms_OTP**, **email_OTP**.
	Method *string `json:"method,omitempty"`
	// The result of the authentication process.
	Result *string `json:"result,omitempty"`
}

// NewTokenAuthentication instantiates a new TokenAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTokenAuthentication() *TokenAuthentication {
	this := TokenAuthentication{}
	return &this
}

// NewTokenAuthenticationWithDefaults instantiates a new TokenAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTokenAuthenticationWithDefaults() *TokenAuthentication {
	this := TokenAuthentication{}
	return &this
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *TokenAuthentication) GetMethod() string {
	if o == nil || common.IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenAuthentication) GetMethodOk() (*string, bool) {
	if o == nil || common.IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *TokenAuthentication) HasMethod() bool {
	if o != nil && !common.IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *TokenAuthentication) SetMethod(v string) {
	o.Method = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *TokenAuthentication) GetResult() string {
	if o == nil || common.IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TokenAuthentication) GetResultOk() (*string, bool) {
	if o == nil || common.IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *TokenAuthentication) HasResult() bool {
	if o != nil && !common.IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *TokenAuthentication) SetResult(v string) {
	o.Result = &v
}

func (o TokenAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TokenAuthentication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !common.IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableTokenAuthentication struct {
	value *TokenAuthentication
	isSet bool
}

func (v NullableTokenAuthentication) Get() *TokenAuthentication {
	return v.value
}

func (v *NullableTokenAuthentication) Set(val *TokenAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableTokenAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableTokenAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTokenAuthentication(val *TokenAuthentication) *NullableTokenAuthentication {
	return &NullableTokenAuthentication{value: val, isSet: true}
}

func (v NullableTokenAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTokenAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
