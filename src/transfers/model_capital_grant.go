/*
Transfers API

API version: 4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package transfers

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v8/src/common"
)

// checks if the CapitalGrant type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &CapitalGrant{}

// CapitalGrant struct for CapitalGrant
type CapitalGrant struct {
	Amount       *Amount        `json:"amount,omitempty"`
	Balances     CapitalBalance `json:"balances"`
	Counterparty *Counterparty  `json:"counterparty,omitempty"`
	Fee          *Fee           `json:"fee,omitempty"`
	// The identifier of the grant account used for the grant.
	GrantAccountId string `json:"grantAccountId"`
	// The identifier of the grant offer that has been selected and from which the grant details will be used.
	GrantOfferId string `json:"grantOfferId"`
	// The identifier of the grant reference.
	Id        string     `json:"id"`
	Repayment *Repayment `json:"repayment,omitempty"`
	// The current status of the grant. Possible values: **Pending**, **Active**, **Repaid**.
	Status string `json:"status"`
}

// NewCapitalGrant instantiates a new CapitalGrant object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCapitalGrant(balances CapitalBalance, grantAccountId string, grantOfferId string, id string, status string) *CapitalGrant {
	this := CapitalGrant{}
	this.Balances = balances
	this.GrantAccountId = grantAccountId
	this.GrantOfferId = grantOfferId
	this.Id = id
	this.Status = status
	return &this
}

// NewCapitalGrantWithDefaults instantiates a new CapitalGrant object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCapitalGrantWithDefaults() *CapitalGrant {
	this := CapitalGrant{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CapitalGrant) GetAmount() Amount {
	if o == nil || common.IsNil(o.Amount) {
		var ret Amount
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetAmountOk() (*Amount, bool) {
	if o == nil || common.IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CapitalGrant) HasAmount() bool {
	if o != nil && !common.IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given Amount and assigns it to the Amount field.
func (o *CapitalGrant) SetAmount(v Amount) {
	o.Amount = &v
}

// GetBalances returns the Balances field value
func (o *CapitalGrant) GetBalances() CapitalBalance {
	if o == nil {
		var ret CapitalBalance
		return ret
	}

	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetBalancesOk() (*CapitalBalance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Balances, true
}

// SetBalances sets field value
func (o *CapitalGrant) SetBalances(v CapitalBalance) {
	o.Balances = v
}

// GetCounterparty returns the Counterparty field value if set, zero value otherwise.
func (o *CapitalGrant) GetCounterparty() Counterparty {
	if o == nil || common.IsNil(o.Counterparty) {
		var ret Counterparty
		return ret
	}
	return *o.Counterparty
}

// GetCounterpartyOk returns a tuple with the Counterparty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetCounterpartyOk() (*Counterparty, bool) {
	if o == nil || common.IsNil(o.Counterparty) {
		return nil, false
	}
	return o.Counterparty, true
}

// HasCounterparty returns a boolean if a field has been set.
func (o *CapitalGrant) HasCounterparty() bool {
	if o != nil && !common.IsNil(o.Counterparty) {
		return true
	}

	return false
}

// SetCounterparty gets a reference to the given Counterparty and assigns it to the Counterparty field.
func (o *CapitalGrant) SetCounterparty(v Counterparty) {
	o.Counterparty = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *CapitalGrant) GetFee() Fee {
	if o == nil || common.IsNil(o.Fee) {
		var ret Fee
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetFeeOk() (*Fee, bool) {
	if o == nil || common.IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *CapitalGrant) HasFee() bool {
	if o != nil && !common.IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given Fee and assigns it to the Fee field.
func (o *CapitalGrant) SetFee(v Fee) {
	o.Fee = &v
}

// GetGrantAccountId returns the GrantAccountId field value
func (o *CapitalGrant) GetGrantAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantAccountId
}

// GetGrantAccountIdOk returns a tuple with the GrantAccountId field value
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetGrantAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantAccountId, true
}

// SetGrantAccountId sets field value
func (o *CapitalGrant) SetGrantAccountId(v string) {
	o.GrantAccountId = v
}

// GetGrantOfferId returns the GrantOfferId field value
func (o *CapitalGrant) GetGrantOfferId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantOfferId
}

// GetGrantOfferIdOk returns a tuple with the GrantOfferId field value
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetGrantOfferIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantOfferId, true
}

// SetGrantOfferId sets field value
func (o *CapitalGrant) SetGrantOfferId(v string) {
	o.GrantOfferId = v
}

// GetId returns the Id field value
func (o *CapitalGrant) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CapitalGrant) SetId(v string) {
	o.Id = v
}

// GetRepayment returns the Repayment field value if set, zero value otherwise.
func (o *CapitalGrant) GetRepayment() Repayment {
	if o == nil || common.IsNil(o.Repayment) {
		var ret Repayment
		return ret
	}
	return *o.Repayment
}

// GetRepaymentOk returns a tuple with the Repayment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetRepaymentOk() (*Repayment, bool) {
	if o == nil || common.IsNil(o.Repayment) {
		return nil, false
	}
	return o.Repayment, true
}

// HasRepayment returns a boolean if a field has been set.
func (o *CapitalGrant) HasRepayment() bool {
	if o != nil && !common.IsNil(o.Repayment) {
		return true
	}

	return false
}

// SetRepayment gets a reference to the given Repayment and assigns it to the Repayment field.
func (o *CapitalGrant) SetRepayment(v Repayment) {
	o.Repayment = &v
}

// GetStatus returns the Status field value
func (o *CapitalGrant) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CapitalGrant) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CapitalGrant) SetStatus(v string) {
	o.Status = v
}

func (o CapitalGrant) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CapitalGrant) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	toSerialize["balances"] = o.Balances
	if !common.IsNil(o.Counterparty) {
		toSerialize["counterparty"] = o.Counterparty
	}
	if !common.IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	toSerialize["grantAccountId"] = o.GrantAccountId
	toSerialize["grantOfferId"] = o.GrantOfferId
	toSerialize["id"] = o.Id
	if !common.IsNil(o.Repayment) {
		toSerialize["repayment"] = o.Repayment
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableCapitalGrant struct {
	value *CapitalGrant
	isSet bool
}

func (v NullableCapitalGrant) Get() *CapitalGrant {
	return v.value
}

func (v *NullableCapitalGrant) Set(val *CapitalGrant) {
	v.value = val
	v.isSet = true
}

func (v NullableCapitalGrant) IsSet() bool {
	return v.isSet
}

func (v *NullableCapitalGrant) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCapitalGrant(val *CapitalGrant) *NullableCapitalGrant {
	return &NullableCapitalGrant{value: val, isSet: true}
}

func (v NullableCapitalGrant) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCapitalGrant) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

func (o *CapitalGrant) isValidStatus() bool {
	var allowedEnumValues = []string{"Pending", "Active", "Repaid"}
	for _, allowed := range allowedEnumValues {
		if o.GetStatus() == allowed {
			return true
		}
	}
	return false
}
