/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v8/src/common"
)

// checks if the BankAccountIdentificationTypeRequirement type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &BankAccountIdentificationTypeRequirement{}

// BankAccountIdentificationTypeRequirement struct for BankAccountIdentificationTypeRequirement
type BankAccountIdentificationTypeRequirement struct {
	// List of bank account identification types: eg.; [iban , numberAndBic]
	BankAccountIdentificationTypes []string `json:"bankAccountIdentificationTypes,omitempty"`
	// Specifies the bank account details for a particular route per required field in this object depending on the country of the bank account and the currency of the transfer.
	Description *string `json:"description,omitempty"`
	// **bankAccountIdentificationTypeRequirement**
	Type string `json:"type"`
}

// NewBankAccountIdentificationTypeRequirement instantiates a new BankAccountIdentificationTypeRequirement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBankAccountIdentificationTypeRequirement(type_ string) *BankAccountIdentificationTypeRequirement {
	this := BankAccountIdentificationTypeRequirement{}
	this.Type = type_
	return &this
}

// NewBankAccountIdentificationTypeRequirementWithDefaults instantiates a new BankAccountIdentificationTypeRequirement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBankAccountIdentificationTypeRequirementWithDefaults() *BankAccountIdentificationTypeRequirement {
	this := BankAccountIdentificationTypeRequirement{}
	var type_ string = "bankAccountIdentificationTypeRequirement"
	this.Type = type_
	return &this
}

// GetBankAccountIdentificationTypes returns the BankAccountIdentificationTypes field value if set, zero value otherwise.
func (o *BankAccountIdentificationTypeRequirement) GetBankAccountIdentificationTypes() []string {
	if o == nil || common.IsNil(o.BankAccountIdentificationTypes) {
		var ret []string
		return ret
	}
	return o.BankAccountIdentificationTypes
}

// GetBankAccountIdentificationTypesOk returns a tuple with the BankAccountIdentificationTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountIdentificationTypeRequirement) GetBankAccountIdentificationTypesOk() ([]string, bool) {
	if o == nil || common.IsNil(o.BankAccountIdentificationTypes) {
		return nil, false
	}
	return o.BankAccountIdentificationTypes, true
}

// HasBankAccountIdentificationTypes returns a boolean if a field has been set.
func (o *BankAccountIdentificationTypeRequirement) HasBankAccountIdentificationTypes() bool {
	if o != nil && !common.IsNil(o.BankAccountIdentificationTypes) {
		return true
	}

	return false
}

// SetBankAccountIdentificationTypes gets a reference to the given []string and assigns it to the BankAccountIdentificationTypes field.
func (o *BankAccountIdentificationTypeRequirement) SetBankAccountIdentificationTypes(v []string) {
	o.BankAccountIdentificationTypes = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BankAccountIdentificationTypeRequirement) GetDescription() string {
	if o == nil || common.IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BankAccountIdentificationTypeRequirement) GetDescriptionOk() (*string, bool) {
	if o == nil || common.IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BankAccountIdentificationTypeRequirement) HasDescription() bool {
	if o != nil && !common.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BankAccountIdentificationTypeRequirement) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value
func (o *BankAccountIdentificationTypeRequirement) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BankAccountIdentificationTypeRequirement) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BankAccountIdentificationTypeRequirement) SetType(v string) {
	o.Type = v
}

func (o BankAccountIdentificationTypeRequirement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BankAccountIdentificationTypeRequirement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.BankAccountIdentificationTypes) {
		toSerialize["bankAccountIdentificationTypes"] = o.BankAccountIdentificationTypes
	}
	if !common.IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableBankAccountIdentificationTypeRequirement struct {
	value *BankAccountIdentificationTypeRequirement
	isSet bool
}

func (v NullableBankAccountIdentificationTypeRequirement) Get() *BankAccountIdentificationTypeRequirement {
	return v.value
}

func (v *NullableBankAccountIdentificationTypeRequirement) Set(val *BankAccountIdentificationTypeRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableBankAccountIdentificationTypeRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableBankAccountIdentificationTypeRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBankAccountIdentificationTypeRequirement(val *BankAccountIdentificationTypeRequirement) *NullableBankAccountIdentificationTypeRequirement {
	return &NullableBankAccountIdentificationTypeRequirement{value: val, isSet: true}
}

func (v NullableBankAccountIdentificationTypeRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBankAccountIdentificationTypeRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

func (o *BankAccountIdentificationTypeRequirement) isValidType() bool {
	var allowedEnumValues = []string{"bankAccountIdentificationTypeRequirement"}
	for _, allowed := range allowedEnumValues {
		if o.GetType() == allowed {
			return true
		}
	}
	return false
}
