/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the AuthorisedCardUsers type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &AuthorisedCardUsers{}

// AuthorisedCardUsers struct for AuthorisedCardUsers
type AuthorisedCardUsers struct {
	// The legal entity IDs of the authorized card users linked to the specified payment instrument.
	LegalEntityIds []string `json:"legalEntityIds,omitempty"`
}

// NewAuthorisedCardUsers instantiates a new AuthorisedCardUsers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorisedCardUsers() *AuthorisedCardUsers {
	this := AuthorisedCardUsers{}
	return &this
}

// NewAuthorisedCardUsersWithDefaults instantiates a new AuthorisedCardUsers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorisedCardUsersWithDefaults() *AuthorisedCardUsers {
	this := AuthorisedCardUsers{}
	return &this
}

// GetLegalEntityIds returns the LegalEntityIds field value if set, zero value otherwise.
func (o *AuthorisedCardUsers) GetLegalEntityIds() []string {
	if o == nil || common.IsNil(o.LegalEntityIds) {
		var ret []string
		return ret
	}
	return o.LegalEntityIds
}

// GetLegalEntityIdsOk returns a tuple with the LegalEntityIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorisedCardUsers) GetLegalEntityIdsOk() ([]string, bool) {
	if o == nil || common.IsNil(o.LegalEntityIds) {
		return nil, false
	}
	return o.LegalEntityIds, true
}

// HasLegalEntityIds returns a boolean if a field has been set.
func (o *AuthorisedCardUsers) HasLegalEntityIds() bool {
	if o != nil && !common.IsNil(o.LegalEntityIds) {
		return true
	}

	return false
}

// SetLegalEntityIds gets a reference to the given []string and assigns it to the LegalEntityIds field.
func (o *AuthorisedCardUsers) SetLegalEntityIds(v []string) {
	o.LegalEntityIds = v
}

func (o AuthorisedCardUsers) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorisedCardUsers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.LegalEntityIds) {
		toSerialize["legalEntityIds"] = o.LegalEntityIds
	}
	return toSerialize, nil
}

type NullableAuthorisedCardUsers struct {
	value *AuthorisedCardUsers
	isSet bool
}

func (v NullableAuthorisedCardUsers) Get() *AuthorisedCardUsers {
	return v.value
}

func (v *NullableAuthorisedCardUsers) Set(val *AuthorisedCardUsers) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorisedCardUsers) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorisedCardUsers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorisedCardUsers(val *AuthorisedCardUsers) *NullableAuthorisedCardUsers {
	return &NullableAuthorisedCardUsers{value: val, isSet: true}
}

func (v NullableAuthorisedCardUsers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorisedCardUsers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
