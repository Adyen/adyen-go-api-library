/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the BalanceWebhookSettingInfoUpdate type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &BalanceWebhookSettingInfoUpdate{}

// BalanceWebhookSettingInfoUpdate struct for BalanceWebhookSettingInfoUpdate
type BalanceWebhookSettingInfoUpdate struct {
	// The array of conditions a balance change must meet for Adyen to send the webhook.
	Conditions []Condition `json:"conditions,omitempty"`
	// The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.
	Currency *string `json:"currency,omitempty"`
	// The status of the webhook setting. Possible values:  * **active**: You receive a balance webhook if any of the conditions in this setting are met. * **inactive**: You do not receive a balance webhook even if the conditions in this settings are met.
	Status *string       `json:"status,omitempty"`
	Target *TargetUpdate `json:"target,omitempty"`
	// The type of the webhook you are configuring. Set to **balance**.
	Type *string `json:"type,omitempty"`
}

// NewBalanceWebhookSettingInfoUpdate instantiates a new BalanceWebhookSettingInfoUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalanceWebhookSettingInfoUpdate() *BalanceWebhookSettingInfoUpdate {
	this := BalanceWebhookSettingInfoUpdate{}
	return &this
}

// NewBalanceWebhookSettingInfoUpdateWithDefaults instantiates a new BalanceWebhookSettingInfoUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceWebhookSettingInfoUpdateWithDefaults() *BalanceWebhookSettingInfoUpdate {
	this := BalanceWebhookSettingInfoUpdate{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *BalanceWebhookSettingInfoUpdate) GetConditions() []Condition {
	if o == nil || common.IsNil(o.Conditions) {
		var ret []Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfoUpdate) GetConditionsOk() ([]Condition, bool) {
	if o == nil || common.IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *BalanceWebhookSettingInfoUpdate) HasConditions() bool {
	if o != nil && !common.IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []Condition and assigns it to the Conditions field.
func (o *BalanceWebhookSettingInfoUpdate) SetConditions(v []Condition) {
	o.Conditions = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *BalanceWebhookSettingInfoUpdate) GetCurrency() string {
	if o == nil || common.IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfoUpdate) GetCurrencyOk() (*string, bool) {
	if o == nil || common.IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *BalanceWebhookSettingInfoUpdate) HasCurrency() bool {
	if o != nil && !common.IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *BalanceWebhookSettingInfoUpdate) SetCurrency(v string) {
	o.Currency = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BalanceWebhookSettingInfoUpdate) GetStatus() string {
	if o == nil || common.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfoUpdate) GetStatusOk() (*string, bool) {
	if o == nil || common.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BalanceWebhookSettingInfoUpdate) HasStatus() bool {
	if o != nil && !common.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BalanceWebhookSettingInfoUpdate) SetStatus(v string) {
	o.Status = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *BalanceWebhookSettingInfoUpdate) GetTarget() TargetUpdate {
	if o == nil || common.IsNil(o.Target) {
		var ret TargetUpdate
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfoUpdate) GetTargetOk() (*TargetUpdate, bool) {
	if o == nil || common.IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *BalanceWebhookSettingInfoUpdate) HasTarget() bool {
	if o != nil && !common.IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given TargetUpdate and assigns it to the Target field.
func (o *BalanceWebhookSettingInfoUpdate) SetTarget(v TargetUpdate) {
	o.Target = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BalanceWebhookSettingInfoUpdate) GetType() string {
	if o == nil || common.IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfoUpdate) GetTypeOk() (*string, bool) {
	if o == nil || common.IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BalanceWebhookSettingInfoUpdate) HasType() bool {
	if o != nil && !common.IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BalanceWebhookSettingInfoUpdate) SetType(v string) {
	o.Type = &v
}

func (o BalanceWebhookSettingInfoUpdate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalanceWebhookSettingInfoUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !common.IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !common.IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !common.IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !common.IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableBalanceWebhookSettingInfoUpdate struct {
	value *BalanceWebhookSettingInfoUpdate
	isSet bool
}

func (v NullableBalanceWebhookSettingInfoUpdate) Get() *BalanceWebhookSettingInfoUpdate {
	return v.value
}

func (v *NullableBalanceWebhookSettingInfoUpdate) Set(val *BalanceWebhookSettingInfoUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableBalanceWebhookSettingInfoUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableBalanceWebhookSettingInfoUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalanceWebhookSettingInfoUpdate(val *BalanceWebhookSettingInfoUpdate) *NullableBalanceWebhookSettingInfoUpdate {
	return &NullableBalanceWebhookSettingInfoUpdate{value: val, isSet: true}
}

func (v NullableBalanceWebhookSettingInfoUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalanceWebhookSettingInfoUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

func (o *BalanceWebhookSettingInfoUpdate) isValidStatus() bool {
	var allowedEnumValues = []string{"active", "inactive"}
	for _, allowed := range allowedEnumValues {
		if o.GetStatus() == allowed {
			return true
		}
	}
	return false
}
func (o *BalanceWebhookSettingInfoUpdate) isValidType() bool {
	var allowedEnumValues = []string{"balance"}
	for _, allowed := range allowedEnumValues {
		if o.GetType() == allowed {
			return true
		}
	}
	return false
}
