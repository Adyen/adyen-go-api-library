/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v8/src/common"
)

// checks if the AddressRequirement type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &AddressRequirement{}

// AddressRequirement struct for AddressRequirement
type AddressRequirement struct {
	// Specifies the required address related fields for a particular route.
	Description *string `json:"description,omitempty"`
	// List of address fields.
	RequiredAddressFields []string `json:"requiredAddressFields,omitempty"`
	// **addressRequirement**
	Type string `json:"type"`
}

// NewAddressRequirement instantiates a new AddressRequirement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressRequirement(type_ string) *AddressRequirement {
	this := AddressRequirement{}
	this.Type = type_
	return &this
}

// NewAddressRequirementWithDefaults instantiates a new AddressRequirement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressRequirementWithDefaults() *AddressRequirement {
	this := AddressRequirement{}
	var type_ string = "addressRequirement"
	this.Type = type_
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddressRequirement) GetDescription() string {
	if o == nil || common.IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressRequirement) GetDescriptionOk() (*string, bool) {
	if o == nil || common.IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddressRequirement) HasDescription() bool {
	if o != nil && !common.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddressRequirement) SetDescription(v string) {
	o.Description = &v
}

// GetRequiredAddressFields returns the RequiredAddressFields field value if set, zero value otherwise.
func (o *AddressRequirement) GetRequiredAddressFields() []string {
	if o == nil || common.IsNil(o.RequiredAddressFields) {
		var ret []string
		return ret
	}
	return o.RequiredAddressFields
}

// GetRequiredAddressFieldsOk returns a tuple with the RequiredAddressFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressRequirement) GetRequiredAddressFieldsOk() ([]string, bool) {
	if o == nil || common.IsNil(o.RequiredAddressFields) {
		return nil, false
	}
	return o.RequiredAddressFields, true
}

// HasRequiredAddressFields returns a boolean if a field has been set.
func (o *AddressRequirement) HasRequiredAddressFields() bool {
	if o != nil && !common.IsNil(o.RequiredAddressFields) {
		return true
	}

	return false
}

// SetRequiredAddressFields gets a reference to the given []string and assigns it to the RequiredAddressFields field.
func (o *AddressRequirement) SetRequiredAddressFields(v []string) {
	o.RequiredAddressFields = v
}

// GetType returns the Type field value
func (o *AddressRequirement) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AddressRequirement) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AddressRequirement) SetType(v string) {
	o.Type = v
}

func (o AddressRequirement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressRequirement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !common.IsNil(o.RequiredAddressFields) {
		toSerialize["requiredAddressFields"] = o.RequiredAddressFields
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableAddressRequirement struct {
	value *AddressRequirement
	isSet bool
}

func (v NullableAddressRequirement) Get() *AddressRequirement {
	return v.value
}

func (v *NullableAddressRequirement) Set(val *AddressRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressRequirement(val *AddressRequirement) *NullableAddressRequirement {
	return &NullableAddressRequirement{value: val, isSet: true}
}

func (v NullableAddressRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

func (o *AddressRequirement) isValidType() bool {
	var allowedEnumValues = []string{"addressRequirement"}
	for _, allowed := range allowedEnumValues {
		if o.GetType() == allowed {
			return true
		}
	}
	return false
}
