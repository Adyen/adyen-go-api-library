/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v8/src/common"
)

// checks if the AccountHolderUpdateRequest type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &AccountHolderUpdateRequest{}

// AccountHolderUpdateRequest struct for AccountHolderUpdateRequest
type AccountHolderUpdateRequest struct {
	// The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the account holder belongs. Required in the request if your API credentials can be used for multiple balance platforms.
	BalancePlatform *string `json:"balancePlatform,omitempty"`
	// Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing. The value is an object containing the settings for the capability.
	Capabilities   *map[string]AccountHolderCapability `json:"capabilities,omitempty"`
	ContactDetails *ContactDetails                     `json:"contactDetails,omitempty"`
	// Your description for the account holder, maximum 300 characters.
	Description *string `json:"description,omitempty"`
	// A set of key and value pairs for general use. The keys do not have specific names and may be used for storing miscellaneous data as desired. > Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.
	Metadata *map[string]string `json:"metadata,omitempty"`
	// The unique identifier of the migrated account holder in the classic integration.
	MigratedAccountHolderCode *string `json:"migratedAccountHolderCode,omitempty"`
	// The ID of the account holder's primary balance account. By default, this is set to the first balance account that you create for the account holder. To assign a different balance account, send a PATCH request.
	PrimaryBalanceAccount *string `json:"primaryBalanceAccount,omitempty"`
	// Your reference for the account holder, maximum 150 characters.
	Reference *string `json:"reference,omitempty"`
	// The status of the account holder.  Possible values:    * **active**: The account holder is active. This is the default status when creating an account holder.    * **inactive (Deprecated)**: The account holder is temporarily inactive due to missing KYC details. You can set the account back to active by providing the missing KYC details.    * **suspended**: The account holder is permanently deactivated by Adyen. This action cannot be undone.   * **closed**: The account holder is permanently deactivated by you. This action cannot be undone.
	Status *string `json:"status,omitempty"`
	// The time zone of the account holder. For example, **Europe/Amsterdam**. Defaults to the time zone of the balance platform if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
	TimeZone *string `json:"timeZone,omitempty"`
	// List of verification deadlines and the capabilities that will be disallowed if verification errors are not resolved.
	VerificationDeadlines []VerificationDeadline `json:"verificationDeadlines,omitempty"`
}

// NewAccountHolderUpdateRequest instantiates a new AccountHolderUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountHolderUpdateRequest() *AccountHolderUpdateRequest {
	this := AccountHolderUpdateRequest{}
	return &this
}

// NewAccountHolderUpdateRequestWithDefaults instantiates a new AccountHolderUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountHolderUpdateRequestWithDefaults() *AccountHolderUpdateRequest {
	this := AccountHolderUpdateRequest{}
	return &this
}

// GetBalancePlatform returns the BalancePlatform field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetBalancePlatform() string {
	if o == nil || common.IsNil(o.BalancePlatform) {
		var ret string
		return ret
	}
	return *o.BalancePlatform
}

// GetBalancePlatformOk returns a tuple with the BalancePlatform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetBalancePlatformOk() (*string, bool) {
	if o == nil || common.IsNil(o.BalancePlatform) {
		return nil, false
	}
	return o.BalancePlatform, true
}

// HasBalancePlatform returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasBalancePlatform() bool {
	if o != nil && !common.IsNil(o.BalancePlatform) {
		return true
	}

	return false
}

// SetBalancePlatform gets a reference to the given string and assigns it to the BalancePlatform field.
func (o *AccountHolderUpdateRequest) SetBalancePlatform(v string) {
	o.BalancePlatform = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetCapabilities() map[string]AccountHolderCapability {
	if o == nil || common.IsNil(o.Capabilities) {
		var ret map[string]AccountHolderCapability
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetCapabilitiesOk() (*map[string]AccountHolderCapability, bool) {
	if o == nil || common.IsNil(o.Capabilities) {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasCapabilities() bool {
	if o != nil && !common.IsNil(o.Capabilities) {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given map[string]AccountHolderCapability and assigns it to the Capabilities field.
func (o *AccountHolderUpdateRequest) SetCapabilities(v map[string]AccountHolderCapability) {
	o.Capabilities = &v
}

// GetContactDetails returns the ContactDetails field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetContactDetails() ContactDetails {
	if o == nil || common.IsNil(o.ContactDetails) {
		var ret ContactDetails
		return ret
	}
	return *o.ContactDetails
}

// GetContactDetailsOk returns a tuple with the ContactDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetContactDetailsOk() (*ContactDetails, bool) {
	if o == nil || common.IsNil(o.ContactDetails) {
		return nil, false
	}
	return o.ContactDetails, true
}

// HasContactDetails returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasContactDetails() bool {
	if o != nil && !common.IsNil(o.ContactDetails) {
		return true
	}

	return false
}

// SetContactDetails gets a reference to the given ContactDetails and assigns it to the ContactDetails field.
func (o *AccountHolderUpdateRequest) SetContactDetails(v ContactDetails) {
	o.ContactDetails = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetDescription() string {
	if o == nil || common.IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || common.IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasDescription() bool {
	if o != nil && !common.IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AccountHolderUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetMetadata() map[string]string {
	if o == nil || common.IsNil(o.Metadata) {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || common.IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasMetadata() bool {
	if o != nil && !common.IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *AccountHolderUpdateRequest) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetMigratedAccountHolderCode returns the MigratedAccountHolderCode field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetMigratedAccountHolderCode() string {
	if o == nil || common.IsNil(o.MigratedAccountHolderCode) {
		var ret string
		return ret
	}
	return *o.MigratedAccountHolderCode
}

// GetMigratedAccountHolderCodeOk returns a tuple with the MigratedAccountHolderCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetMigratedAccountHolderCodeOk() (*string, bool) {
	if o == nil || common.IsNil(o.MigratedAccountHolderCode) {
		return nil, false
	}
	return o.MigratedAccountHolderCode, true
}

// HasMigratedAccountHolderCode returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasMigratedAccountHolderCode() bool {
	if o != nil && !common.IsNil(o.MigratedAccountHolderCode) {
		return true
	}

	return false
}

// SetMigratedAccountHolderCode gets a reference to the given string and assigns it to the MigratedAccountHolderCode field.
func (o *AccountHolderUpdateRequest) SetMigratedAccountHolderCode(v string) {
	o.MigratedAccountHolderCode = &v
}

// GetPrimaryBalanceAccount returns the PrimaryBalanceAccount field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetPrimaryBalanceAccount() string {
	if o == nil || common.IsNil(o.PrimaryBalanceAccount) {
		var ret string
		return ret
	}
	return *o.PrimaryBalanceAccount
}

// GetPrimaryBalanceAccountOk returns a tuple with the PrimaryBalanceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetPrimaryBalanceAccountOk() (*string, bool) {
	if o == nil || common.IsNil(o.PrimaryBalanceAccount) {
		return nil, false
	}
	return o.PrimaryBalanceAccount, true
}

// HasPrimaryBalanceAccount returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasPrimaryBalanceAccount() bool {
	if o != nil && !common.IsNil(o.PrimaryBalanceAccount) {
		return true
	}

	return false
}

// SetPrimaryBalanceAccount gets a reference to the given string and assigns it to the PrimaryBalanceAccount field.
func (o *AccountHolderUpdateRequest) SetPrimaryBalanceAccount(v string) {
	o.PrimaryBalanceAccount = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetReference() string {
	if o == nil || common.IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetReferenceOk() (*string, bool) {
	if o == nil || common.IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasReference() bool {
	if o != nil && !common.IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *AccountHolderUpdateRequest) SetReference(v string) {
	o.Reference = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetStatus() string {
	if o == nil || common.IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetStatusOk() (*string, bool) {
	if o == nil || common.IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasStatus() bool {
	if o != nil && !common.IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AccountHolderUpdateRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetTimeZone() string {
	if o == nil || common.IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetTimeZoneOk() (*string, bool) {
	if o == nil || common.IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasTimeZone() bool {
	if o != nil && !common.IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *AccountHolderUpdateRequest) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetVerificationDeadlines returns the VerificationDeadlines field value if set, zero value otherwise.
func (o *AccountHolderUpdateRequest) GetVerificationDeadlines() []VerificationDeadline {
	if o == nil || common.IsNil(o.VerificationDeadlines) {
		var ret []VerificationDeadline
		return ret
	}
	return o.VerificationDeadlines
}

// GetVerificationDeadlinesOk returns a tuple with the VerificationDeadlines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountHolderUpdateRequest) GetVerificationDeadlinesOk() ([]VerificationDeadline, bool) {
	if o == nil || common.IsNil(o.VerificationDeadlines) {
		return nil, false
	}
	return o.VerificationDeadlines, true
}

// HasVerificationDeadlines returns a boolean if a field has been set.
func (o *AccountHolderUpdateRequest) HasVerificationDeadlines() bool {
	if o != nil && !common.IsNil(o.VerificationDeadlines) {
		return true
	}

	return false
}

// SetVerificationDeadlines gets a reference to the given []VerificationDeadline and assigns it to the VerificationDeadlines field.
func (o *AccountHolderUpdateRequest) SetVerificationDeadlines(v []VerificationDeadline) {
	o.VerificationDeadlines = v
}

func (o AccountHolderUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountHolderUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.BalancePlatform) {
		toSerialize["balancePlatform"] = o.BalancePlatform
	}
	if !common.IsNil(o.Capabilities) {
		toSerialize["capabilities"] = o.Capabilities
	}
	if !common.IsNil(o.ContactDetails) {
		toSerialize["contactDetails"] = o.ContactDetails
	}
	if !common.IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !common.IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !common.IsNil(o.MigratedAccountHolderCode) {
		toSerialize["migratedAccountHolderCode"] = o.MigratedAccountHolderCode
	}
	if !common.IsNil(o.PrimaryBalanceAccount) {
		toSerialize["primaryBalanceAccount"] = o.PrimaryBalanceAccount
	}
	if !common.IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !common.IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !common.IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !common.IsNil(o.VerificationDeadlines) {
		toSerialize["verificationDeadlines"] = o.VerificationDeadlines
	}
	return toSerialize, nil
}

type NullableAccountHolderUpdateRequest struct {
	value *AccountHolderUpdateRequest
	isSet bool
}

func (v NullableAccountHolderUpdateRequest) Get() *AccountHolderUpdateRequest {
	return v.value
}

func (v *NullableAccountHolderUpdateRequest) Set(val *AccountHolderUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountHolderUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountHolderUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountHolderUpdateRequest(val *AccountHolderUpdateRequest) *NullableAccountHolderUpdateRequest {
	return &NullableAccountHolderUpdateRequest{value: val, isSet: true}
}

func (v NullableAccountHolderUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountHolderUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

func (o *AccountHolderUpdateRequest) isValidStatus() bool {
	var allowedEnumValues = []string{"active", "closed", "inactive", "suspended"}
	for _, allowed := range allowedEnumValues {
		if o.GetStatus() == allowed {
			return true
		}
	}
	return false
}
