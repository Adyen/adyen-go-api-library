/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	_context "context"
	_nethttp "net/http"
	"strings"

	"github.com/adyen/adyen-go-api-library/v6/src/common"
)

// PaymentInstrumentGroupsApi PaymentInstrumentGroupsApi service
type PaymentInstrumentGroupsApi common.Service

/*
Get a payment instrument group
Returns the details of a payment instrument group.
 * @param id The unique identifier of the payment instrument group.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentInstrumentGroup
*/
func (a PaymentInstrumentGroupsApi) GetPaymentInstrumentGroup(id *string, ctxs ..._context.Context) (PaymentInstrumentGroup, *_nethttp.Response, error) {
	res := &PaymentInstrumentGroup{}
	path := "/paymentInstrumentGroups/{id}"
	path = strings.ReplaceAll(path, "{"+"id"+"}", *id)
	httpRes, err := a.Client.MakeHTTPGetRequest(res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}

/*
Get all transaction rules for a payment instrument group
Returns a list of all the transaction rules associated with a payment instrument group.
 * @param id The unique identifier of the payment instrument group.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return TransactionRulesResponse
*/
func (a PaymentInstrumentGroupsApi) GetAllTransactionRulesForPaymentInstrumentGroup(id *string, ctxs ..._context.Context) (TransactionRulesResponse, *_nethttp.Response, error) {
	res := &TransactionRulesResponse{}
	path := "/paymentInstrumentGroups/{id}/transactionRules"
	path = strings.ReplaceAll(path, "{"+"id"+"}", *id)
	httpRes, err := a.Client.MakeHTTPGetRequest(res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}

/*
Create a payment instrument group
Creates a payment instrument group to associate and group payment instrument resources together. You can apply a transaction rule to a payment instrument group.
 * @param req PaymentInstrumentGroupInfo - reference of PaymentInstrumentGroupInfo).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentInstrumentGroup
*/
func (a PaymentInstrumentGroupsApi) CreatePaymentInstrumentGroup(req *PaymentInstrumentGroupInfo, ctxs ..._context.Context) (PaymentInstrumentGroup, *_nethttp.Response, error) {
	res := &PaymentInstrumentGroup{}
	path := "/paymentInstrumentGroups"
	httpRes, err := a.Client.MakeHTTPPostRequest(req, res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}
