/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"
    "github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the BalanceWebhookSettingInfo type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &BalanceWebhookSettingInfo{}

// BalanceWebhookSettingInfo struct for BalanceWebhookSettingInfo
type BalanceWebhookSettingInfo struct {
	// The array of conditions a balance change must meet for Adyen to send the webhook.
	Conditions []Condition `json:"conditions,omitempty"`
	// The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.
	Currency string `json:"currency"`
	// The status of the webhook setting. Possible values:  * **active**: You receive a balance webhook if any of the conditions in this setting are met. * **inactive**: You do not receive a balance webhook even if the conditions in this settings are met.
	Status string `json:"status"`
	Target Target `json:"target"`
	// The type of the webhook you are configuring. Set to **balance**.
	Type string `json:"type"`
}

// NewBalanceWebhookSettingInfo instantiates a new BalanceWebhookSettingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBalanceWebhookSettingInfo(currency string, status string, target Target, type_ string) *BalanceWebhookSettingInfo {
	this := BalanceWebhookSettingInfo{}
	this.Currency = currency
	this.Status = status
	this.Target = target
	this.Type = type_
	return &this
}

// NewBalanceWebhookSettingInfoWithDefaults instantiates a new BalanceWebhookSettingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBalanceWebhookSettingInfoWithDefaults() *BalanceWebhookSettingInfo {
	this := BalanceWebhookSettingInfo{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *BalanceWebhookSettingInfo) GetConditions() []Condition {
	if o == nil || common.IsNil(o.Conditions) {
		var ret []Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfo) GetConditionsOk() ([]Condition, bool) {
	if o == nil || common.IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *BalanceWebhookSettingInfo) HasConditions() bool {
	if o != nil && !common.IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []Condition and assigns it to the Conditions field.
func (o *BalanceWebhookSettingInfo) SetConditions(v []Condition) {
	o.Conditions = v
}

// GetCurrency returns the Currency field value
func (o *BalanceWebhookSettingInfo) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfo) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *BalanceWebhookSettingInfo) SetCurrency(v string) {
	o.Currency = v
}

// GetStatus returns the Status field value
func (o *BalanceWebhookSettingInfo) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfo) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BalanceWebhookSettingInfo) SetStatus(v string) {
	o.Status = v
}

// GetTarget returns the Target field value
func (o *BalanceWebhookSettingInfo) GetTarget() Target {
	if o == nil {
		var ret Target
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfo) GetTargetOk() (*Target, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *BalanceWebhookSettingInfo) SetTarget(v Target) {
	o.Target = v
}

// GetType returns the Type field value
func (o *BalanceWebhookSettingInfo) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *BalanceWebhookSettingInfo) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *BalanceWebhookSettingInfo) SetType(v string) {
	o.Type = v
}

func (o BalanceWebhookSettingInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BalanceWebhookSettingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	toSerialize["currency"] = o.Currency
	toSerialize["status"] = o.Status
	toSerialize["target"] = o.Target
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableBalanceWebhookSettingInfo struct {
	value *BalanceWebhookSettingInfo
	isSet bool
}

func (v NullableBalanceWebhookSettingInfo) Get() *BalanceWebhookSettingInfo {
	return v.value
}

func (v *NullableBalanceWebhookSettingInfo) Set(val *BalanceWebhookSettingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBalanceWebhookSettingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBalanceWebhookSettingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBalanceWebhookSettingInfo(val *BalanceWebhookSettingInfo) *NullableBalanceWebhookSettingInfo {
	return &NullableBalanceWebhookSettingInfo{value: val, isSet: true}
}

func (v NullableBalanceWebhookSettingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBalanceWebhookSettingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


func (o *BalanceWebhookSettingInfo) isValidStatus() bool {
    var allowedEnumValues = []string{ "active", "inactive" }
    for _, allowed := range allowedEnumValues {
        if o.GetStatus() == allowed {
            return true
        }
    }
    return false
}
func (o *BalanceWebhookSettingInfo) isValidType() bool {
    var allowedEnumValues = []string{ "balance" }
    for _, allowed := range allowedEnumValues {
        if o.GetType() == allowed {
            return true
        }
    }
    return false
}

