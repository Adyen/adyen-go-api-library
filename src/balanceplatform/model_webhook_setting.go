/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the WebhookSetting type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &WebhookSetting{}

// WebhookSetting struct for WebhookSetting
type WebhookSetting struct {
	// The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance.
	Currency string `json:"currency"`
	// The unique identifier of the webhook setting.
	Id     string      `json:"id"`
	Status string      `json:"status"`
	Target Target      `json:"target"`
	Type   SettingType `json:"type"`
}

// NewWebhookSetting instantiates a new WebhookSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSetting(currency string, id string, status string, target Target, type_ SettingType) *WebhookSetting {
	this := WebhookSetting{}
	this.Currency = currency
	this.Id = id
	this.Status = status
	this.Target = target
	this.Type = type_
	return &this
}

// NewWebhookSettingWithDefaults instantiates a new WebhookSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSettingWithDefaults() *WebhookSetting {
	this := WebhookSetting{}
	return &this
}

// GetCurrency returns the Currency field value
func (o *WebhookSetting) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *WebhookSetting) GetCurrencyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *WebhookSetting) SetCurrency(v string) {
	o.Currency = v
}

// GetId returns the Id field value
func (o *WebhookSetting) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookSetting) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookSetting) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *WebhookSetting) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WebhookSetting) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WebhookSetting) SetStatus(v string) {
	o.Status = v
}

// GetTarget returns the Target field value
func (o *WebhookSetting) GetTarget() Target {
	if o == nil {
		var ret Target
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *WebhookSetting) GetTargetOk() (*Target, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *WebhookSetting) SetTarget(v Target) {
	o.Target = v
}

// GetType returns the Type field value
func (o *WebhookSetting) GetType() SettingType {
	if o == nil {
		var ret SettingType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WebhookSetting) GetTypeOk() (*SettingType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WebhookSetting) SetType(v SettingType) {
	o.Type = v
}

func (o WebhookSetting) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSetting) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["currency"] = o.Currency
	toSerialize["id"] = o.Id
	toSerialize["status"] = o.Status
	toSerialize["target"] = o.Target
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableWebhookSetting struct {
	value *WebhookSetting
	isSet bool
}

func (v NullableWebhookSetting) Get() *WebhookSetting {
	return v.value
}

func (v *NullableWebhookSetting) Set(val *WebhookSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSetting(val *WebhookSetting) *NullableWebhookSetting {
	return &NullableWebhookSetting{value: val, isSet: true}
}

func (v NullableWebhookSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
