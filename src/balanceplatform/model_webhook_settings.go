/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	"encoding/json"
    "github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the WebhookSettings type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &WebhookSettings{}

// WebhookSettings struct for WebhookSettings
type WebhookSettings struct {
	// The list of webhook settings.
	WebhookSettings []WebhookSetting `json:"webhookSettings,omitempty"`
}

// NewWebhookSettings instantiates a new WebhookSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSettings() *WebhookSettings {
	this := WebhookSettings{}
	return &this
}

// NewWebhookSettingsWithDefaults instantiates a new WebhookSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSettingsWithDefaults() *WebhookSettings {
	this := WebhookSettings{}
	return &this
}

// GetWebhookSettings returns the WebhookSettings field value if set, zero value otherwise.
func (o *WebhookSettings) GetWebhookSettings() []WebhookSetting {
	if o == nil || common.IsNil(o.WebhookSettings) {
		var ret []WebhookSetting
		return ret
	}
	return o.WebhookSettings
}

// GetWebhookSettingsOk returns a tuple with the WebhookSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSettings) GetWebhookSettingsOk() ([]WebhookSetting, bool) {
	if o == nil || common.IsNil(o.WebhookSettings) {
		return nil, false
	}
	return o.WebhookSettings, true
}

// HasWebhookSettings returns a boolean if a field has been set.
func (o *WebhookSettings) HasWebhookSettings() bool {
	if o != nil && !common.IsNil(o.WebhookSettings) {
		return true
	}

	return false
}

// SetWebhookSettings gets a reference to the given []WebhookSetting and assigns it to the WebhookSettings field.
func (o *WebhookSettings) SetWebhookSettings(v []WebhookSetting) {
	o.WebhookSettings = v
}

func (o WebhookSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !common.IsNil(o.WebhookSettings) {
		toSerialize["webhookSettings"] = o.WebhookSettings
	}
	return toSerialize, nil
}

type NullableWebhookSettings struct {
	value *WebhookSettings
	isSet bool
}

func (v NullableWebhookSettings) Get() *WebhookSettings {
	return v.value
}

func (v *NullableWebhookSettings) Set(val *WebhookSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSettings(val *WebhookSettings) *NullableWebhookSettings {
	return &NullableWebhookSettings{value: val, isSet: true}
}

func (v NullableWebhookSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



