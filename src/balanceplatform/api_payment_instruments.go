/*
Configuration API

API version: 2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package balanceplatform

import (
	_context "context"
	_nethttp "net/http"
	"strings"

	"github.com/adyen/adyen-go-api-library/v6/src/common"
)

// PaymentInstrumentsApi PaymentInstrumentsApi service
type PaymentInstrumentsApi common.Service

/*
Get a payment instrument
Returns the details of a payment instrument.
 * @param id The unique identifier of the payment instrument.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentInstrument
*/
func (a PaymentInstrumentsApi) GetPaymentInstrument(id *string, ctxs ..._context.Context) (PaymentInstrument, *_nethttp.Response, error) {
	res := &PaymentInstrument{}
	path := "/paymentInstruments/{id}"
	path = strings.ReplaceAll(path, "{"+"id"+"}", *id)
	httpRes, err := a.Client.MakeHTTPGetRequest(res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}

/*
Get the PAN of a payment instrument
Returns the primary account number (PAN) of a payment instrument.  To make this request, your API credential must have the following [role](https://docs.adyen.com/issuing/manage-access/api-credentials-web-service#api-permissions):  * Balance Platform BCL PCI role
 * @param id The unique identifier of the payment instrument.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentInstrumentRevealInfo
*/
func (a PaymentInstrumentsApi) GetPanOfPaymentInstrument(id *string, ctxs ..._context.Context) (PaymentInstrumentRevealInfo, *_nethttp.Response, error) {
	res := &PaymentInstrumentRevealInfo{}
	path := "/paymentInstruments/{id}/reveal"
	path = strings.ReplaceAll(path, "{"+"id"+"}", *id)
	httpRes, err := a.Client.MakeHTTPGetRequest(res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}

/*
Get all transaction rules for a payment instrument
Returns a list of transaction rules associated with a payment instrument.
 * @param id The unique identifier of the payment instrument.
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return TransactionRulesResponse
*/
func (a PaymentInstrumentsApi) GetAllTransactionRulesForPaymentInstrument(id *string, ctxs ..._context.Context) (TransactionRulesResponse, *_nethttp.Response, error) {
	res := &TransactionRulesResponse{}
	path := "/paymentInstruments/{id}/transactionRules"
	path = strings.ReplaceAll(path, "{"+"id"+"}", *id)
	httpRes, err := a.Client.MakeHTTPGetRequest(res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}

/*
Update a payment instrument
Updates a payment instrument. Once a payment instrument is already active, you can only update its status. However, for cards created with **inactive** status, you can still update the balance account associated with the card.
 * @param id The unique identifier of the payment instrument.
 * @param req PaymentInstrumentUpdateRequest - reference of PaymentInstrumentUpdateRequest).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return UpdatePaymentInstrument
*/
func (a PaymentInstrumentsApi) UpdatePaymentInstrument(id *string, req *PaymentInstrumentUpdateRequest, ctxs ..._context.Context) (UpdatePaymentInstrument, *_nethttp.Response, error) {
	res := &UpdatePaymentInstrument{}
	path := "/paymentInstruments/{id}"
	path = strings.ReplaceAll(path, "{"+"id"+"}", *id)
	httpRes, err := a.Client.MakeHTTPPatchRequest(req, res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}

/*
Create a payment instrument
Creates a payment instrument to issue a physical card, a virtual card, or a business account to your user.   For more information, refer to [Issue cards](https://docs.adyen.com/issuing/create-cards) or [Issue business accounts](https://docs.adyen.com/marketplaces-and-platforms/business-accounts).
 * @param req PaymentInstrumentInfo - reference of PaymentInstrumentInfo).
 * @param ctxs ..._context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PaymentInstrument
*/
func (a PaymentInstrumentsApi) CreatePaymentInstrument(req *PaymentInstrumentInfo, ctxs ..._context.Context) (PaymentInstrument, *_nethttp.Response, error) {
	res := &PaymentInstrument{}
	path := "/paymentInstruments"
	httpRes, err := a.Client.MakeHTTPPostRequest(req, res, a.BasePath()+path, ctxs...)
	return *res, httpRes, err
}
