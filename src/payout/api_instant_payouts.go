/*
Adyen Payout API

API version: 68
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package payout

import (
	"context"
	_nethttp "net/http"
	"net/url"

	"github.com/adyen/adyen-go-api-library/v7/src/common"
)

// InstantPayoutsApi InstantPayoutsApi service
type InstantPayoutsApi common.Service

type InstantPayoutsApiPayoutConfig struct {
	ctx           context.Context
	payoutRequest *PayoutRequest
}

func (r InstantPayoutsApiPayoutConfig) PayoutRequest(payoutRequest PayoutRequest) InstantPayoutsApiPayoutConfig {
	r.payoutRequest = &payoutRequest
	return r
}

/*
Payout Make an instant card payout

With this call, you can pay out to your customers, and funds will be made available within 30 minutes on the cardholder's bank account (this is dependent on whether the issuer supports this functionality). Instant card payouts are only supported for Visa and Mastercard cards.

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @return InstantPayoutsApiPayoutConfig
*/
func (a *InstantPayoutsApi) PayoutConfig(ctx context.Context) InstantPayoutsApiPayoutConfig {
	return InstantPayoutsApiPayoutConfig{
		ctx: ctx,
	}
}

/*
Make an instant card payout
With this call, you can pay out to your customers, and funds will be made available within 30 minutes on the cardholder&#39;s bank account (this is dependent on whether the issuer supports this functionality). Instant card payouts are only supported for Visa and Mastercard cards.
 * @param req PayoutRequest - reference of PayoutRequest).
 * @param ctxs ...context.Context - optional, for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
@return PayoutResponse
*/

func (a *InstantPayoutsApi) Payout(r InstantPayoutsApiPayoutConfig) (PayoutResponse, *_nethttp.Response, error) {
	res := &PayoutResponse{}
	path := "/payout"
	queryParams := url.Values{}
	headerParams := make(map[string]string)
	httpRes, err := common.SendAPIRequest(
		r.ctx,
		a.Client,
		r.payoutRequest,
		res,
		_nethttp.MethodPost,
		a.BasePath()+path,
		queryParams,
		headerParams,
	)

	return *res, httpRes, err
}
