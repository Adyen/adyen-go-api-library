/*
Authentication webhooks

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package acswebhook

import (
	"encoding/json"
	"time"

	"github.com/adyen/adyen-go-api-library/v21/src/common"
)

// checks if the Purchase type satisfies the MappedNullable interface at compile time
var _ common.MappedNullable = &Purchase{}

// Purchase struct for Purchase
type Purchase struct {
	// The time of the purchase.
	Date time.Time `json:"date"`
	// The name of the merchant.
	MerchantName   string `json:"merchantName"`
	OriginalAmount Amount `json:"originalAmount"`
}

// NewPurchase instantiates a new Purchase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurchase(date time.Time, merchantName string, originalAmount Amount) *Purchase {
	this := Purchase{}
	this.Date = date
	this.MerchantName = merchantName
	this.OriginalAmount = originalAmount
	return &this
}

// NewPurchaseWithDefaults instantiates a new Purchase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurchaseWithDefaults() *Purchase {
	this := Purchase{}
	return &this
}

// GetDate returns the Date field value
func (o *Purchase) GetDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *Purchase) GetDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *Purchase) SetDate(v time.Time) {
	o.Date = v
}

// GetMerchantName returns the MerchantName field value
func (o *Purchase) GetMerchantName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MerchantName
}

// GetMerchantNameOk returns a tuple with the MerchantName field value
// and a boolean to check if the value has been set.
func (o *Purchase) GetMerchantNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MerchantName, true
}

// SetMerchantName sets field value
func (o *Purchase) SetMerchantName(v string) {
	o.MerchantName = v
}

// GetOriginalAmount returns the OriginalAmount field value
func (o *Purchase) GetOriginalAmount() Amount {
	if o == nil {
		var ret Amount
		return ret
	}

	return o.OriginalAmount
}

// GetOriginalAmountOk returns a tuple with the OriginalAmount field value
// and a boolean to check if the value has been set.
func (o *Purchase) GetOriginalAmountOk() (*Amount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalAmount, true
}

// SetOriginalAmount sets field value
func (o *Purchase) SetOriginalAmount(v Amount) {
	o.OriginalAmount = v
}

func (o Purchase) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Purchase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["date"] = o.Date
	toSerialize["merchantName"] = o.MerchantName
	toSerialize["originalAmount"] = o.OriginalAmount
	return toSerialize, nil
}

type NullablePurchase struct {
	value *Purchase
	isSet bool
}

func (v NullablePurchase) Get() *Purchase {
	return v.value
}

func (v *NullablePurchase) Set(val *Purchase) {
	v.value = val
	v.isSet = true
}

func (v NullablePurchase) IsSet() bool {
	return v.isSet
}

func (v *NullablePurchase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurchase(val *Purchase) *NullablePurchase {
	return &NullablePurchase{value: val, isSet: true}
}

func (v NullablePurchase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurchase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
